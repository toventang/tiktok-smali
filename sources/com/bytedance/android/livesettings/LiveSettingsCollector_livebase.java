package com.bytedance.android.livesettings;

import com.bytedance.android.live.annotation.ScopeValue;
import com.bytedance.android.live_settings.Group;
import com.bytedance.android.live_settings.LiveSettingModel;
import com.bytedance.android.livesdk.livesetting.feed.BackRefreshTimeoutSetting;
import com.bytedance.android.livesdk.livesetting.feed.LiveFeedRefreshTimeSetting;
import com.bytedance.android.livesdk.livesetting.other.LivePipoMonitorHostSetting;
import com.bytedance.android.livesdk.livesetting.other.TiktokLiveWatchResourceGeckoBaseUrlSetting;
import com.bytedance.android.livesdk.livesetting.pullstream.LiveNetAdaptiveHurryTimeSetting;
import com.bytedance.android.livesdk.livesetting.watchlive.InteractFirstFrameTimeOutDurationSetting;
import com.bytedance.covode.number.Covode;
import com.google.gson.r;
import java.util.ArrayList;
import java.util.HashMap;

public class LiveSettingsCollector_livebase {
    public static HashMap<String, LiveSettingModel> modelMaps = new HashMap<>();
    private static ArrayList<LiveSettingModel> models = new ArrayList<>();

    private static void findSettingsMethod_0() {
        ArrayList arrayList = new ArrayList();
        arrayList.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.slot.LiveBarrageShowMapSetting", ScopeValue.SLOT, "java.util.Map<java.lang.String,java.lang.Boolean>", "live_barrage_show_map", new r(""), "need show live barrage type map", "wuzhongle", "live_barrage_show_map", arrayList);
        models.add(liveSettingModel);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.slot.LiveBarrageShowMapSetting", liveSettingModel);
        ArrayList arrayList2 = new ArrayList();
        arrayList2.add(new Group(new r((Number) 1), "default group", true));
        LiveSettingModel liveSettingModel2 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.slot.LiveOutsideBizRegisterPrioritySetting", ScopeValue.SLOT, "int", "live_outside_biz_register_priority", new r((Number) 1), "config slot biz priority", "wugelin", "live_outside_biz_register_priority", arrayList2);
        models.add(liveSettingModel2);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.slot.LiveOutsideBizRegisterPrioritySetting", liveSettingModel2);
        ArrayList arrayList3 = new ArrayList();
        arrayList3.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel3 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveBannerWebviewOptSetting", ScopeValue.PERFORMANCE, "boolean", "live_banner_webview_opt", new r((Boolean) false), "live_banner_webview_opt", "xunan.mt", "live_banner_webview_opt", arrayList3);
        models.add(liveSettingModel3);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveBannerWebviewOptSetting", liveSettingModel3);
        ArrayList arrayList4 = new ArrayList();
        arrayList4.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel4 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveBannerWebviewOptSettingV2", ScopeValue.PERFORMANCE, "boolean", "live_banner_webview_opt_v2", new r((Boolean) false), "live_banner_webview_opt", "xunan.mt", "live_banner_webview_opt_v2", arrayList4);
        models.add(liveSettingModel4);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveBannerWebviewOptSettingV2", liveSettingModel4);
        ArrayList arrayList5 = new ArrayList();
        arrayList5.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel5 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveBroadcastFluencyOptSetting", ScopeValue.PERFORMANCE, "boolean", "live_broadcast_fluency_opt", new r((Boolean) false), "live_broadcast_fluency_opt", "xunan.mt", "live_broadcast_fluency_opt", arrayList5);
        models.add(liveSettingModel5);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveBroadcastFluencyOptSetting", liveSettingModel5);
        ArrayList arrayList6 = new ArrayList();
        arrayList6.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel6 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveBroadcastFluencyOptSettingV2", ScopeValue.PERFORMANCE, "boolean", "live_broadcast_fluency_opt_v2", new r((Boolean) false), "live_broadcast_fluency_opt", "xunan.mt", "live_broadcast_fluency_opt_v2", arrayList6);
        models.add(liveSettingModel6);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveBroadcastFluencyOptSettingV2", liveSettingModel6);
        ArrayList arrayList7 = new ArrayList();
        arrayList7.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel7 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveDegradeThresholdSettingSetting", ScopeValue.PERFORMANCE, "com.bytedance.android.livesdk.model.LiveDegradeThresholdData", "live_degrade_threshold_setting", new r(""), "the settings of upgrade", "wangyan.shang", "live_degrade_threshold_setting", arrayList7);
        models.add(liveSettingModel7);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveDegradeThresholdSettingSetting", liveSettingModel7);
        ArrayList arrayList8 = new ArrayList();
        arrayList8.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel8 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveEnableALogSetting", ScopeValue.BROADCAST, "boolean", "live_enable_alog", new r((Boolean) true), "live enable alog or not", "lishuo.oo", "live_enable_alog", arrayList8);
        models.add(liveSettingModel8);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveEnableALogSetting", liveSettingModel8);
        ArrayList arrayList9 = new ArrayList();
        arrayList9.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel9 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveEnableSlardarSetting", ScopeValue.BROADCAST, "boolean", "live_enable_slardar", new r((Boolean) true), "live enable slardar or not", "lishuo.oo", "live_enable_slardar", arrayList9);
        models.add(liveSettingModel9);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveEnableSlardarSetting", liveSettingModel9);
        ArrayList arrayList10 = new ArrayList();
        arrayList10.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel10 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveEnableTimeCostSetting", ScopeValue.PERFORMANCE, "boolean", "live_enable_time_cost", new r((Boolean) false), "Disable time cost sampling by default.", "lishuo.oo", "live_enable_time_cost", arrayList10);
        models.add(liveSettingModel10);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveEnableTimeCostSetting", liveSettingModel10);
        ArrayList arrayList11 = new ArrayList();
        arrayList11.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel11 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveEnableX2cSetting", ScopeValue.PERFORMANCE, "boolean", "live_enable_x2c", new r((Boolean) false), "enable x2c", "xunan.mt", "live_enable_x2c", arrayList11);
        models.add(liveSettingModel11);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveEnableX2cSetting", liveSettingModel11);
        ArrayList arrayList12 = new ArrayList();
        arrayList12.add(new Group(new r((Number) 5000L), "default group", true));
        LiveSettingModel liveSettingModel12 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveFluencyEnterDurationSetting", ScopeValue.PERFORMANCE, "long", "live_fluency_enter_duration", new r((Number) 5000L), "live fluency enter duration", "lishuo.oo", "live_fluency_enter_duration", arrayList12);
        models.add(liveSettingModel12);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveFluencyEnterDurationSetting", liveSettingModel12);
        ArrayList arrayList13 = new ArrayList();
        arrayList13.add(new Group(new r((Number) 3000L), "default group", true));
        LiveSettingModel liveSettingModel13 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveFluencyPeriodDurationSetting", ScopeValue.PERFORMANCE, "long", "live_fluency_period_duration", new r((Number) 3000L), "live fluency period duration", "lishuo.oo", "live_fluency_period_duration", arrayList13);
        models.add(liveSettingModel13);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveFluencyPeriodDurationSetting", liveSettingModel13);
        ArrayList arrayList14 = new ArrayList();
        arrayList14.add(new Group(new r((Number) 5000L), "default group", true));
        LiveSettingModel liveSettingModel14 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveFluencyPeriodIntervalSetting", ScopeValue.PERFORMANCE, "long", "live_fluency_period_interval", new r((Number) 5000L), "live fluency period interval", "lishuo.oo", "live_fluency_period_interval", arrayList14);
        models.add(liveSettingModel14);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveFluencyPeriodIntervalSetting", liveSettingModel14);
        ArrayList arrayList15 = new ArrayList();
        arrayList15.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel15 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveFluencySupportSampleSetting", ScopeValue.BROADCAST, "com.bytedance.android.livesdk.livesetting.performance.LiveFluencySupportSample", "live_fluency_support_sample", new r(""), "live fluency support change use sample or not", "lishuo.oo", "live_fluency_support_sample", arrayList15);
        models.add(liveSettingModel15);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveFluencySupportSampleSetting", liveSettingModel15);
        ArrayList arrayList16 = new ArrayList();
        arrayList16.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel16 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveGiftFluencyOptSetting", ScopeValue.PERFORMANCE, "boolean", "live_gift_fluency_opt", new r((Boolean) false), "live_gift_fluency_opt", "xunan.mt", "live_gift_fluency_opt", arrayList16);
        models.add(liveSettingModel16);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveGiftFluencyOptSetting", liveSettingModel16);
        ArrayList arrayList17 = new ArrayList();
        arrayList17.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel17 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveGiftFluencyOptSettingV2", ScopeValue.PERFORMANCE, "boolean", "live_gift_fluency_opt_v2", new r((Boolean) false), "live_gift_fluency_opt", "xunan.mt", "live_gift_fluency_opt_v2", arrayList17);
        models.add(liveSettingModel17);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveGiftFluencyOptSettingV2", liveSettingModel17);
        ArrayList arrayList18 = new ArrayList();
        arrayList18.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel18 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveGpuEnableSettings", ScopeValue.PERFORMANCE, "boolean", "live_enable_gpu", new r((Boolean) false), "live enable gpu or not", "wangyan.shang", "live_enable_gpu", arrayList18);
        models.add(liveSettingModel18);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveGpuEnableSettings", liveSettingModel18);
        ArrayList arrayList19 = new ArrayList();
        arrayList19.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel19 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveLayoutPreloadSetting", ScopeValue.PERFORMANCE, "boolean", "live_layout_preload", new r((Boolean) false), "live_layout_preload", "xunan.mt", "live_layout_preload", arrayList19);
        models.add(liveSettingModel19);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveLayoutPreloadSetting", liveSettingModel19);
        ArrayList arrayList20 = new ArrayList();
        arrayList20.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel20 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveMtEnableCpuRateSetting", ScopeValue.PERFORMANCE, "boolean", "live_mt_enable_cpu_rate", new r((Boolean) true), "Whether mt uses CPU utilization (proc/stat or adb top)", "lishuo.oo", "live_mt_enable_cpu_rate", arrayList20);
        models.add(liveSettingModel20);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveMtEnableCpuRateSetting", liveSettingModel20);
        ArrayList arrayList21 = new ArrayList();
        arrayList21.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel21 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveMtEnableCpuSpeedRateSetting", ScopeValue.PERFORMANCE, "boolean", "live_mt_enable_cpu_speed_rate", new r((Boolean) false), "Whether mt uses Jiffies to calculate the CPU usage rate", "lishuo.oo", "live_mt_enable_cpu_speed_rate", arrayList21);
        models.add(liveSettingModel21);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveMtEnableCpuSpeedRateSetting", liveSettingModel21);
        ArrayList arrayList22 = new ArrayList();
        arrayList22.add(new Group(new r((Number) 1), "default group", true));
        LiveSettingModel liveSettingModel22 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveMtEnableInstantCpuRateSetting", ScopeValue.PERFORMANCE, "int", "live_mt_enable_instant_cpu_rate", new r((Number) 1), "mt use instant-cpu-rate,value 1 is yes", "lishuo.oo", "live_mt_enable_instant_cpu_rate", arrayList22);
        models.add(liveSettingModel22);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveMtEnableInstantCpuRateSetting", liveSettingModel22);
        ArrayList arrayList23 = new ArrayList();
        arrayList23.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel23 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveMtEnableUseProcFileCpuRateSetting", ScopeValue.PERFORMANCE, "boolean", "live_mt_enable_use_proc_file_cpu_rate", new r((Boolean) false), "mt use proc file to calcute cpu usage rate under android 8.0", "lishuo.oo", "live_mt_enable_use_proc_file_cpu_rate", arrayList23);
        models.add(liveSettingModel23);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveMtEnableUseProcFileCpuRateSetting", liveSettingModel23);
        ArrayList arrayList24 = new ArrayList();
        arrayList24.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel24 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveOptimizeThreadUsageSetting", ScopeValue.PERFORMANCE, "boolean", "live_optimize_thread_usage", new r((Boolean) false), "live optimize thread usage", "wangyan.shang", "live_optimize_thread_usage", arrayList24);
        models.add(liveSettingModel24);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveOptimizeThreadUsageSetting", liveSettingModel24);
        ArrayList arrayList25 = new ArrayList();
        arrayList25.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel25 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveOptimizedLikeSetting", ScopeValue.PERFORMANCE, "boolean", "live_optimized_like", new r((Boolean) false), "Whether to use optimize like.", "liuxiangdong.richard", "live_optimized_like", arrayList25);
        models.add(liveSettingModel25);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveOptimizedLikeSetting", liveSettingModel25);
        ArrayList arrayList26 = new ArrayList();
        arrayList26.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel26 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LivePerformanceSettingSetting", ScopeValue.PERFORMANCE, "com.bytedance.android.livesdk.model.PerformanceSetting", "live_performance_setting", new r(""), "the settings of live performance", "wangyan.shang", "live_performance_setting", arrayList26);
        models.add(liveSettingModel26);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LivePerformanceSettingSetting", liveSettingModel26);
        ArrayList arrayList27 = new ArrayList();
        arrayList27.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel27 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LivePlayFluencyOptSetting", ScopeValue.PERFORMANCE, "boolean", "live_play_fluency_opt", new r((Boolean) false), "live_play_fluency_opt", "xunan.mt", "live_play_fluency_opt", arrayList27);
        models.add(liveSettingModel27);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LivePlayFluencyOptSetting", liveSettingModel27);
        ArrayList arrayList28 = new ArrayList();
        arrayList28.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel28 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LivePlayFluencyOptSettingV2", ScopeValue.PERFORMANCE, "boolean", "live_play_fluency_opt_v2", new r((Boolean) false), "live_play_fluency_opt", "xunan.mt", "live_play_fluency_opt_v2", arrayList28);
        models.add(liveSettingModel28);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LivePlayFluencyOptSettingV2", liveSettingModel28);
        ArrayList arrayList29 = new ArrayList();
        arrayList29.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel29 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveScrapFluencyOptSetting", ScopeValue.PERFORMANCE, "boolean", "live_scrap_fluency_opt", new r((Boolean) false), "live_scrap_fluency_opt", "xunan.mt", "live_scrap_fluency_opt", arrayList29);
        models.add(liveSettingModel29);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveScrapFluencyOptSetting", liveSettingModel29);
        ArrayList arrayList30 = new ArrayList();
        arrayList30.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel30 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveScrapFluencyOptSettingV2", ScopeValue.PERFORMANCE, "boolean", "live_scrap_fluency_opt_v2", new r((Boolean) false), "live_gift_fluency_opt", "xunan.mt", "live_scrap_fluency_opt_v2", arrayList30);
        models.add(liveSettingModel30);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveScrapFluencyOptSettingV2", liveSettingModel30);
        ArrayList arrayList31 = new ArrayList();
        arrayList31.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel31 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveSlotFluencyOptSetting", ScopeValue.PERFORMANCE, "boolean", "live_slot_fluency_opt", new r((Boolean) false), "live_slot_fluency_opt", "xunan.mt", "live_slot_fluency_opt", arrayList31);
        models.add(liveSettingModel31);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveSlotFluencyOptSetting", liveSettingModel31);
        ArrayList arrayList32 = new ArrayList();
        arrayList32.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel32 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveThorEnableSettings", ScopeValue.PERFORMANCE, "boolean", "live_enable_thor", new r((Boolean) false), "live enable thor or not", "wangyan.shang", "live_enable_thor", arrayList32);
        models.add(liveSettingModel32);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveThorEnableSettings", liveSettingModel32);
        ArrayList arrayList33 = new ArrayList();
        arrayList33.add(new Group(new r((Number) 10000L), "default group", true));
        LiveSettingModel liveSettingModel33 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.LiveWatchDogStopDelayDurationSetting", ScopeValue.PERFORMANCE, "long", "live_watchdog_stop_delay_duration", new r((Number) 10000L), "the duration of delay stop watchdog", "lishuo.oo", "live_watchdog_stop_delay_duration", arrayList33);
        models.add(liveSettingModel33);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.LiveWatchDogStopDelayDurationSetting", liveSettingModel33);
        ArrayList arrayList34 = new ArrayList();
        arrayList34.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel34 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.NegativeTestAudienceExperiment", ScopeValue.PERFORMANCE, "com.bytedance.android.livesdk.livesetting.NegativeTestSettings", "live_negative_audience_test", new r(""), "negative test", "laiyangpei", "live_negative_audience_test", arrayList34);
        models.add(liveSettingModel34);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.NegativeTestAudienceExperiment", liveSettingModel34);
        ArrayList arrayList35 = new ArrayList();
        arrayList35.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel35 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.PanelOpenCostTimesSetting", ScopeValue.PERFORMANCE, "com.bytedance.android.livesdk.livesetting.performance.LivePanelCostTimeModel", "live_sdk_panel_open_cost_times", new r(""), "panel open cost times report", "liukan.kk", "live_sdk_panel_open_cost_times", arrayList35);
        models.add(liveSettingModel35);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.PanelOpenCostTimesSetting", liveSettingModel35);
        ArrayList arrayList36 = new ArrayList();
        arrayList36.add(new Group(new r((Number) 0), "default group", true));
        arrayList36.add(new Group(new r((Number) 1), "replace player", false));
        arrayList36.add(new Group(new r((Number) 2), "replace log.", false));
        arrayList36.add(new Group(new r((Number) 3), "replace all", false));
        LiveSettingModel liveSettingModel36 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.performance.ThreadPoolOptExperiment", ScopeValue.PERFORMANCE, "int", "thread_pool_opt", new r((Number) 0), "Show background below video", "laiyangpei", "show_background_below_video", arrayList36);
        models.add(liveSettingModel36);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.performance.ThreadPoolOptExperiment", liveSettingModel36);
        ArrayList arrayList37 = new ArrayList();
        arrayList37.add(new Group(new r((Number) 2), "default group", true));
        LiveSettingModel liveSettingModel37 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.EnableBattleUiNewStyleSetting", ScopeValue.LINKMIC, "int", "enable_battle_ui_new_style", new r((Number) 2), "enable_battle_ui_new_style", "yangxu.616", "enable_battle_ui_new_style", arrayList37);
        models.add(liveSettingModel37);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.EnableBattleUiNewStyleSetting", liveSettingModel37);
        ArrayList arrayList38 = new ArrayList();
        arrayList38.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel38 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.EnableLinkLoadWidgetOptSetting", ScopeValue.LINKMIC, "int", "enable_link_load_widget_opt", new r((Number) 0), "link widget load opt controll", "guoruidong", "enable_link_load_widget_opt", arrayList38);
        models.add(liveSettingModel38);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.EnableLinkLoadWidgetOptSetting", liveSettingModel38);
        ArrayList arrayList39 = new ArrayList();
        arrayList39.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel39 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.GuestCountDownTimeSetting", ScopeValue.LINKMIC, "int", "guest_count_down_time", new r((Number) 0), "guest_count_down_time", "binzhihao", "guest_count_down_time", arrayList39);
        models.add(liveSettingModel39);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.GuestCountDownTimeSetting", liveSettingModel39);
        ArrayList arrayList40 = new ArrayList();
        arrayList40.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel40 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.GuestLinkRoomReportEnableSetting", ScopeValue.LINKMIC, "boolean", "guest_link_room_report_enable", new r((Boolean) false), "switch for report_message or report_user when link guest", "wangyixu.1993", "guest_link_room_report_enable", arrayList40);
        models.add(liveSettingModel40);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.GuestLinkRoomReportEnableSetting", liveSettingModel40);
        ArrayList arrayList41 = new ArrayList();
        arrayList41.add(new Group(new r((Number) 5), "default group", true));
        LiveSettingModel liveSettingModel41 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.GuestLinkStatusViewCountDownTimeSetting", ScopeValue.LINKMIC, "int", "guest_link_status_view_count_down_time", new r((Number) 5), "guest link_status view countdown time", "wangyixu.1993", "guest_link_status_view_count_down_time", arrayList41);
        models.add(liveSettingModel41);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.GuestLinkStatusViewCountDownTimeSetting", liveSettingModel41);
        ArrayList arrayList42 = new ArrayList();
        Double valueOf = Double.valueOf(0.0d);
        arrayList42.add(new Group(new r((Number) valueOf), "default group", true));
        LiveSettingModel liveSettingModel42 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.GuestPushStreamTimeAndroidSetting", ScopeValue.LINKMIC, "double", "guest_push_stream_time_android", new r((Number) valueOf), "guest_push_stream_time_android", "binzhihao", "guest_push_stream_time_android", arrayList42);
        models.add(liveSettingModel42);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.GuestPushStreamTimeAndroidSetting", liveSettingModel42);
        ArrayList arrayList43 = new ArrayList();
        arrayList43.add(new Group(new r((Boolean) false), "control_group", true));
        arrayList43.add(new Group(new r((Boolean) true), "experimental_group", false));
        LiveSettingModel liveSettingModel43 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.HostLinkMicBattleHealthBarStyleSetting", ScopeValue.LINKMIC, "boolean", "linkmic_battle_health_bar_new_style", new r((Boolean) false), "The setting controls the style of battle health bar in pk mode", "lixinyang.a", "linkmic_battle_health_bar_new_style", arrayList43);
        models.add(liveSettingModel43);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.HostLinkMicBattleHealthBarStyleSetting", liveSettingModel43);
        ArrayList arrayList44 = new ArrayList();
        arrayList44.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel44 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.InteractSeiUidEnableSetting", ScopeValue.LINKMIC, "boolean", "interact_sei_uid_enable", new r((Boolean) true), "Whether to use uid in sei", "wangyixu.1993", "interact_sei_uid_enable", arrayList44);
        models.add(liveSettingModel44);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.InteractSeiUidEnableSetting", liveSettingModel44);
        ArrayList arrayList45 = new ArrayList();
        arrayList45.add(new Group(new r((Boolean) false), "default", true));
        LiveSettingModel liveSettingModel45 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LinkEntranceExperiment", ScopeValue.LINKMIC, "boolean", "live_linkmic_entrance_separation", new r((Boolean) false), "live_linkmic_entrance_separation", "mengqingyu.21", "live_linkmic_entrance_separation", arrayList45);
        models.add(liveSettingModel45);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LinkEntranceExperiment", liveSettingModel45);
        ArrayList arrayList46 = new ArrayList();
        arrayList46.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel46 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LinkInteractAudienceOptEnableSetting", ScopeValue.LINKMIC, "boolean", "link_interact_audience_opt_enable", new r((Boolean) true), "Whether to enable audience connection exception handling", "xupeng.01", "link_interact_audience_opt_enable", arrayList46);
        models.add(liveSettingModel46);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LinkInteractAudienceOptEnableSetting", liveSettingModel46);
        ArrayList arrayList47 = new ArrayList();
        arrayList47.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel47 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveAnchorAutoOpenGuestLinkmicSwitchSetting", ScopeValue.LINKMIC, "boolean", "live_anchor_auto_open_guest_linkmic_switch", new r((Boolean) true), "whether to turn on the guest linkmic memory switch", "yangxu.616", "live_anchor_auto_open_guest_linkmic_switch", arrayList47);
        models.add(liveSettingModel47);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveAnchorAutoOpenGuestLinkmicSwitchSetting", liveSettingModel47);
        ArrayList arrayList48 = new ArrayList();
        arrayList48.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel48 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveAnchorInviteGuestLinkmicSetting", ScopeValue.LINKMIC, "boolean", "live_anchor_invite_guest_linkmic", new r((Boolean) true), "is anchor able to invite guest linkmic", "yangxu.616", "live_anchor_invite_guest_linkmic", arrayList48);
        models.add(liveSettingModel48);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveAnchorInviteGuestLinkmicSetting", liveSettingModel48);
        ArrayList arrayList49 = new ArrayList();
        arrayList49.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel49 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveAnchorLinkmicSpeedUpSeiSetting", ScopeValue.LINKMIC, "boolean", "live_anchor_linkmic_speed_up_sei", new r((Boolean) true), "Anchor link mic, accelerate SEI", "wangyixu.1993", "live_anchor_linkmic_speed_up_sei", arrayList49);
        models.add(liveSettingModel49);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveAnchorLinkmicSpeedUpSeiSetting", liveSettingModel49);
        ArrayList arrayList50 = new ArrayList();
        arrayList50.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel50 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveAnebleLinkmicRegionBackupSetting", ScopeValue.LINKMIC, "boolean", "live_aneble_linkmic_region_backup", new r((Boolean) true), "live_aneble_linkmic_region_backup", "yangxu.616", "live_aneble_linkmic_region_backup", arrayList50);
        models.add(liveSettingModel50);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveAnebleLinkmicRegionBackupSetting", liveSettingModel50);
        ArrayList arrayList51 = new ArrayList();
        arrayList51.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel51 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveAudienceAreaListSetting", ScopeValue.LINKMIC, "boolean", "live_audience_area_list", new r((Boolean) false), "judge audience is MENAT or not", "yangxu.616", "live_audience_area_list", arrayList51);
        models.add(liveSettingModel51);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveAudienceAreaListSetting", liveSettingModel51);
        ArrayList arrayList52 = new ArrayList();
        arrayList52.add(new Group(new r((Number) 16), "default group", true));
        LiveSettingModel liveSettingModel52 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveAudienceLinkmicLowestAgeSetting", ScopeValue.LINKMIC, "int", "live_audience_linkmic_lowest_age", new r((Number) 16), "live_audience_linkmic_lowest_age", "yangxu.616", "live_audience_linkmic_lowest_age", arrayList52);
        models.add(liveSettingModel52);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveAudienceLinkmicLowestAgeSetting", liveSettingModel52);
        ArrayList arrayList53 = new ArrayList();
        arrayList53.add(new Group(new r((Number) 10L), "default group", true));
        LiveSettingModel liveSettingModel53 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveBattleScoreAnimationTimeThresholdSetting", ScopeValue.LINKMIC, "long", "live_battle_score_animation_time_threshold", new r((Number) 10L), "The time when the emoji animation of pk operation atmosphere appears, the default is 10 seconds before the end of pk", "wangyixu.1993", "live_battle_score_animation_time_threshold", arrayList53);
        models.add(liveSettingModel53);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveBattleScoreAnimationTimeThresholdSetting", liveSettingModel53);
        ArrayList arrayList54 = new ArrayList();
        arrayList54.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel54 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveCoHostInviteePanelDismissSetting", ScopeValue.LINKMIC, "int", "live_co_host_invitee_panel_dismiss", new r((Number) 0), "dismiss cohost inviting panel after inviting", "tangwenjing.666", "live_co_host_invitee_panel_dismiss", arrayList54);
        models.add(liveSettingModel54);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveCoHostInviteePanelDismissSetting", liveSettingModel54);
        ArrayList arrayList55 = new ArrayList();
        arrayList55.add(new Group(new r((Number) 10L), "default group", true));
        LiveSettingModel liveSettingModel55 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveDisableTimeBeforeMicRoomBeginSetting", ScopeValue.LINKMIC, "long", "live_disable_time_before_mic_room_begin", new r((Number) 10L), "how long does it take to disable the function before the mic room begin", "yanpeng.p", "live_disable_time_before_mic_room_begin", arrayList55);
        models.add(liveSettingModel55);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveDisableTimeBeforeMicRoomBeginSetting", liveSettingModel55);
        ArrayList arrayList56 = new ArrayList();
        arrayList56.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel56 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveEnablePerPushInteractiveStreamSetting", ScopeValue.LINKMIC, "boolean", "live_enable_per_push_interactive_stream", new r((Boolean) true), "push stream enable master switch", "yangxu.616", "live_enable_per_push_interactive_stream", arrayList56);
        models.add(liveSettingModel56);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveEnablePerPushInteractiveStreamSetting", liveSettingModel56);
        ArrayList arrayList57 = new ArrayList();
        arrayList57.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel57 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveFixCheckPluginErrorSetting", ScopeValue.LINKMIC, "boolean", "live_fix_check_plugin_error", new r((Boolean) true), "Fix the bug of check plugin error or not.", "wangyixu.1993", "live_fix_check_plugin_error", arrayList57);
        models.add(liveSettingModel57);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveFixCheckPluginErrorSetting", liveSettingModel57);
        ArrayList arrayList58 = new ArrayList();
        arrayList58.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel58 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveGuestLinkPreInitEnableSetting", ScopeValue.LINKMIC, "boolean", "live_guest_link_pre_init_enable", new r((Boolean) false), "enable pre init of guest link", "xupeng.01", "live_guest_link_pre_init_enable", arrayList58);
        models.add(liveSettingModel58);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveGuestLinkPreInitEnableSetting", liveSettingModel58);
        ArrayList arrayList59 = new ArrayList();
        arrayList59.add(new Group(new r((Number) 20), "default group", true));
        LiveSettingModel liveSettingModel59 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveInteractAudienceTimeOutSetting", ScopeValue.LINKMIC, "int", "live_interact_audience_time_out", new r((Number) 20), "Audience even wheat timeout", "xupeng.01", "live_interact_audience_time_out", arrayList59);
        models.add(liveSettingModel59);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveInteractAudienceTimeOutSetting", liveSettingModel59);
        ArrayList arrayList60 = new ArrayList();
        arrayList60.add(new Group(new r("https://webcast.tiktokv.com/falcon/webcast_mt/page/live_match/panel/index.html"), "default group", true));
        LiveSettingModel liveSettingModel60 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveInteractBattleContributeListUrlSetting", ScopeValue.LINKMIC, "java.lang.String", "live_interact_battle_contribute_list_url", new r("https://webcast.tiktokv.com/falcon/webcast_mt/page/live_match/panel/index.html"), "Link Mic Battle contribute list url", "wangyixu.1993", "live_interact_battle_contribute_list_url", arrayList60);
        models.add(liveSettingModel60);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveInteractBattleContributeListUrlSetting", liveSettingModel60);
        ArrayList arrayList61 = new ArrayList();
        arrayList61.add(new Group(new r((Number) 301L), "default group", true));
        LiveSettingModel liveSettingModel61 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveInteractBattleDurationSetting", ScopeValue.LINKMIC, "long", "live_interact_battle_duration", new r((Number) 301L), "Link Mic Battle Duration", "wangyixu.1993", "live_interact_battle_duration", arrayList61);
        models.add(liveSettingModel61);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveInteractBattleDurationSetting", liveSettingModel61);
        ArrayList arrayList62 = new ArrayList();
        arrayList62.add(new Group(new r((Number) 30L), "default group", true));
        LiveSettingModel liveSettingModel62 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveInteractBattleOpenTimeoutSetting", ScopeValue.LINKMIC, "long", "live_interact_battle_open_timeout", new r((Number) 30L), "Link Mic Battle Open TimeOut", "wangyixu.1993", "live_interact_battle_open_timeout", arrayList62);
        models.add(liveSettingModel62);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveInteractBattleOpenTimeoutSetting", liveSettingModel62);
        ArrayList arrayList63 = new ArrayList();
        arrayList63.add(new Group(new r((Number) 181L), "default group", true));
        LiveSettingModel liveSettingModel63 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveInteractBattlePunishDurationSetting", ScopeValue.LINKMIC, "long", "live_interact_battle_punish_duration", new r((Number) 181L), "Link Mic Battle Punish Duration", "wangyixu.1993", "live_interact_battle_punish_duration", arrayList63);
        models.add(liveSettingModel63);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveInteractBattlePunishDurationSetting", liveSettingModel63);
        ArrayList arrayList64 = new ArrayList();
        arrayList64.add(new Group(new r((Number) 5), "default group", true));
        LiveSettingModel liveSettingModel64 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveInteractNtpRetryTimesSetting", ScopeValue.LINKMIC, "int", "live_interact_ntp_retry_times", new r((Number) 5), "", "wangyixu.1993", "live_interact_ntp_retry_times", arrayList64);
        models.add(liveSettingModel64);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveInteractNtpRetryTimesSetting", liveSettingModel64);
        ArrayList arrayList65 = new ArrayList();
        arrayList65.add(new Group(new r((Number) 120), "default group", true));
        LiveSettingModel liveSettingModel65 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveInteractSocialLiveAnchorInviteTimeOutSetting", ScopeValue.LINKMIC, "int", "live_interact_social_live_anchor_invite_time_out", new r((Number) 120), "Inviter invite other timeout", "huangjian.jann", "live_interact_social_live_anchor_invite_time_out", arrayList65);
        models.add(liveSettingModel65);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveInteractSocialLiveAnchorInviteTimeOutSetting", liveSettingModel65);
        ArrayList arrayList66 = new ArrayList();
        arrayList66.add(new Group(new r((Number) 60), "default group", true));
        LiveSettingModel liveSettingModel66 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveInteractSocialLiveFrameTimeOutSetting", ScopeValue.LINKMIC, "int", "live_interact_social_live_frame_time_out", new r((Number) 60), "Audience even wheat timeout", "huangjian.jann", "live_interact_social_live_frame_time_out", arrayList66);
        models.add(liveSettingModel66);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveInteractSocialLiveFrameTimeOutSetting", liveSettingModel66);
        ArrayList arrayList67 = new ArrayList();
        arrayList67.add(new Group(new r((Number) 5), "default group", true));
        LiveSettingModel liveSettingModel67 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveInteractSocialLiveMsgOptimizationAtLeastAvailableTimeSetting", ScopeValue.LINKMIC, "int", "live_interact_social_live_msg_optimization_at_least_available_time", new r((Number) 5), "SocialLive msg optimization at least available time", "huangjian.jann", "live_interact_social_live_msg_optimization_at_least_available_time", arrayList67);
        models.add(liveSettingModel67);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveInteractSocialLiveMsgOptimizationAtLeastAvailableTimeSetting", liveSettingModel67);
        ArrayList arrayList68 = new ArrayList();
        arrayList68.add(new Group(new r((Number) 1), "default group", true));
        LiveSettingModel liveSettingModel68 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveInteractSocialLiveMsgOptimizationSwitchSetting", ScopeValue.LINKMIC, "int", "live_interact_social_live_msg_optimization_switch", new r((Number) 1), "SocialLive msg optimization switch", "huangjian.jann", "live_interact_social_live_msg_optimization_switch", arrayList68);
        models.add(liveSettingModel68);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveInteractSocialLiveMsgOptimizationSwitchSetting", liveSettingModel68);
        ArrayList arrayList69 = new ArrayList();
        arrayList69.add(new Group(new r((Number) 55), "default group", true));
        LiveSettingModel liveSettingModel69 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveInteractSocialLiveReceiveInviteMessageTimeOutSetting", ScopeValue.LINKMIC, "int", "live_interact_social_live_receive_invite_message_time_out", new r((Number) 55), "SocialLive Invitee receive invite message timeout", "huangjian.jann", "live_interact_social_live_receive_invite_message_time_out", arrayList69);
        models.add(liveSettingModel69);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveInteractSocialLiveReceiveInviteMessageTimeOutSetting", liveSettingModel69);
        ArrayList arrayList70 = new ArrayList();
        arrayList70.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel70 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveLinkListOptiEnableSetting", ScopeValue.LINKMIC, "boolean", "live_link_list_opti_enable", new r((Boolean) false), "enable list opti", "tangwenjing.666", "live_link_list_opti_enable", arrayList70);
        models.add(liveSettingModel70);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveLinkListOptiEnableSetting", liveSettingModel70);
        ArrayList arrayList71 = new ArrayList();
        arrayList71.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel71 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveMtInteractEndPageEnableSetting", ScopeValue.LINKMIC, "boolean", "live_mt_interact_end_page_enable", new r((Boolean) true), "Decide whether to display the interact end page", "yangxu.616", "live_mt_interact_end_page_enable", arrayList71);
        models.add(liveSettingModel71);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveMtInteractEndPageEnableSetting", liveSettingModel71);
        ArrayList arrayList72 = new ArrayList();
        arrayList72.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel72 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveMtInteractInviterCancelEnableSetting", ScopeValue.LINKMIC, "boolean", "live_mt_interact_inviter_cancel_enable", new r((Boolean) true), "decide inviter is able to cancel invite", "yangxu.616", "live_mt_interact_inviter_cancel_enable", arrayList72);
        models.add(liveSettingModel72);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveMtInteractInviterCancelEnableSetting", liveSettingModel72);
        ArrayList arrayList73 = new ArrayList();
        arrayList73.add(new Group(new r((Number) 5), "default group", true));
        LiveSettingModel liveSettingModel73 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveNetworkTypeModeRateSetting", ScopeValue.LINKMIC, "int", "live_network_type_mode_rate", new r((Number) 5), "The standard for good network status in the mic-link scenario", "yangxu.616", "live_network_type_mode_rate", arrayList73);
        models.add(liveSettingModel73);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveNetworkTypeModeRateSetting", liveSettingModel73);
        ArrayList arrayList74 = new ArrayList();
        arrayList74.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel74 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveOnlineAudienceListSetting", ScopeValue.LINKMIC, "boolean", "live_online_audience_list", new r((Boolean) false), "judge show new ranklist or not", "yangxu.616", "live_online_audience_list", arrayList74);
        models.add(liveSettingModel74);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveOnlineAudienceListSetting", liveSettingModel74);
        ArrayList arrayList75 = new ArrayList();
        arrayList75.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel75 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveOnlineRanklistFollowSetting", ScopeValue.LINKMIC, "boolean", "live_online_ranklist_follow", new r((Boolean) false), "Decide whether to show the attention button to the audience in the list", "yangxu.616", "live_online_ranklist_follow", arrayList75);
        models.add(liveSettingModel75);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveOnlineRanklistFollowSetting", liveSettingModel75);
        ArrayList arrayList76 = new ArrayList();
        arrayList76.add(new Group(new r((Number) 20), "default group", true));
        LiveSettingModel liveSettingModel76 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LivePkConnectTimeoutIntervalSetting", ScopeValue.LINKMIC, "int", "live_pk_connect_timeout_interval", new r((Number) 20), "Video connection timeout", "wangyixu.1993", "live_pk_connect_timeout_interval", arrayList76);
        models.add(liveSettingModel76);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LivePkConnectTimeoutIntervalSetting", liveSettingModel76);
        ArrayList arrayList77 = new ArrayList();
        arrayList77.add(new Group(new r((Number) 10), "default group", true));
        LiveSettingModel liveSettingModel77 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveRandomLinkmicConnectTimeoutIntervalSetting", ScopeValue.LINKMIC, "int", "live_random_linkmic_connect_timeout_interval", new r((Number) 10), "random linkmic connection timeout", "yangxu.616", "live_random_linkmic_connect_timeout_interval", arrayList77);
        models.add(liveSettingModel77);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveRandomLinkmicConnectTimeoutIntervalSetting", liveSettingModel77);
        ArrayList arrayList78 = new ArrayList();
        arrayList78.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel78 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveRandomLinkmicSetting", ScopeValue.LINKMIC, "com.bytedance.android.livesdk.model.RandomLinkMicSetting", "live_random_linkmic", new r(""), "live_random_linkmic", "yangxu.616", "live_random_linkmic", arrayList78);
        models.add(liveSettingModel78);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveRandomLinkmicSetting", liveSettingModel78);
        ArrayList arrayList79 = new ArrayList();
        arrayList79.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel79 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveRankListCoHostEnableSetting", ScopeValue.LINKMIC, "boolean", "live_rank_list_match_enable", new r((Boolean) false), "live_rank_list_match_enable", "mengqingyu.21", "live_rank_list_match_enable", arrayList79);
        models.add(liveSettingModel79);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveRankListCoHostEnableSetting", liveSettingModel79);
        ArrayList arrayList80 = new ArrayList();
        arrayList80.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel80 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveRoomRechargeAgreementConfigSetting", ScopeValue.LINKMIC, "com.bytedance.android.livesdkapi.model.LiveRechargeAgreementConfig", "live_room_recharge_agreement_config", new r(""), "Live room wallet page recharge regulation configuration", "yangxu.616", "live_room_recharge_agreement_config", arrayList80);
        models.add(liveSettingModel80);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveRoomRechargeAgreementConfigSetting", liveSettingModel80);
        ArrayList arrayList81 = new ArrayList();
        arrayList81.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel81 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveShouldShowMultiGuestGuideMessageSetting", ScopeValue.LINKMIC, "boolean", "live_should_show_multi_guest_guide_message", new r((Boolean) false), "should show multi guest guide message", "wangyixu.1993", "live_should_show_multi_guest_guide_message", arrayList81);
        models.add(liveSettingModel81);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveShouldShowMultiGuestGuideMessageSetting", liveSettingModel81);
        ArrayList arrayList82 = new ArrayList();
        arrayList82.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel82 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveTestSkipLinkMicBundleCheckSetting", ScopeValue.LINKMIC, "boolean", "live_test_skip_link_mic_bundle_check", new r((Boolean) false), "During the testing process, skip the app bundle download check of the BYTE plug-in and force a successful download", "wangyixu.1993", "live_test_skip_link_mic_bundle_check", arrayList82);
        models.add(liveSettingModel82);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveTestSkipLinkMicBundleCheckSetting", liveSettingModel82);
        ArrayList arrayList83 = new ArrayList();
        arrayList83.add(new Group(new r((Number) 2L), "default group", true));
        LiveSettingModel liveSettingModel83 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveTimeIncrementForBattleSetting", ScopeValue.LINKMIC, "long", "live_time_increment_for_battle", new r((Number) 2L), "Link Mic Battle Duration", "yangxu.616", "live_time_increment_for_battle", arrayList83);
        models.add(liveSettingModel83);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveTimeIncrementForBattleSetting", liveSettingModel83);
        ArrayList arrayList84 = new ArrayList();
        arrayList84.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel84 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.LiveUseLinkWithNewArchSetting", ScopeValue.LINKMIC, "boolean", "live_use_link_with_new_arch", new r((Boolean) true), "Link architecture optimized ", "huangjian.jann", "live_use_link_with_new_arch", arrayList84);
        models.add(liveSettingModel84);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.LiveUseLinkWithNewArchSetting", liveSettingModel84);
        ArrayList arrayList85 = new ArrayList();
        arrayList85.add(new Group(new r((Number) 20), "default group", true));
        LiveSettingModel liveSettingModel85 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.MtCoHostInviteTimeOutSetting", ScopeValue.LINKMIC, "int", "mt_co_host_invite_time_out", new r((Number) 20), "Inviter invite other timeout", "wangyixu.1993", "mt_co_host_invite_time_out", arrayList85);
        models.add(liveSettingModel85);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.MtCoHostInviteTimeOutSetting", liveSettingModel85);
        ArrayList arrayList86 = new ArrayList();
        arrayList86.add(new Group(new r((Number) 15), "default group", true));
        LiveSettingModel liveSettingModel86 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.MtCoHostReceiveInviteMessageTimeOutSetting", ScopeValue.LINKMIC, "int", "mt_co_host_receive_invite_message_time_out", new r((Number) 15), "Invitee receive invite message timeout", "wangyixu.1993", "mt_co_host_receive_invite_message_time_out", arrayList86);
        models.add(liveSettingModel86);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.MtCoHostReceiveInviteMessageTimeOutSetting", liveSettingModel86);
        ArrayList arrayList87 = new ArrayList();
        arrayList87.add(new Group(new r((Number) 10), "default group", true));
        LiveSettingModel liveSettingModel87 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.MtCoHostReplyTimeOutSetting", ScopeValue.LINKMIC, "int", "mt_co_host_reply_time_out", new r((Number) 10), "Invitee reply timeout", "wangyixu.1993", "mt_co_host_reply_time_out", arrayList87);
        models.add(liveSettingModel87);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.MtCoHostReplyTimeOutSetting", liveSettingModel87);
        ArrayList arrayList88 = new ArrayList();
        arrayList88.add(new Group(new r((Number) 15), "default group", true));
        LiveSettingModel liveSettingModel88 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.MultiLiveAnchorSwitchFrequency", ScopeValue.LINKMIC, "int", "live_multi_live_anchor_switch_frequency", new r((Number) 15), "multi live anchor switch layout times per minute", "tangwenjing.666", "live_multi_live_anchor_switch_frequency", arrayList88);
        models.add(liveSettingModel88);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.MultiLiveAnchorSwitchFrequency", liveSettingModel88);
        ArrayList arrayList89 = new ArrayList();
        arrayList89.add(new Group(new r((Number) 0), "default group", true));
        arrayList89.add(new Group(new r((Number) 1), "new panel without video", false));
        arrayList89.add(new Group(new r((Number) 2), "new panel with video", false));
        LiveSettingModel liveSettingModel89 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.MultiLiveLinkPanelStyle", ScopeValue.LINKMIC, "int", "live_sdk_multilive_link_panel_style", new r((Number) 0), "multi live link pannel 0 default; 1 new panel without switch video; 2 new panel and switch audio", "longfan.1024", "live_sdk_multilive_link_panel_style", arrayList89);
        models.add(liveSettingModel89);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.MultiLiveLinkPanelStyle", liveSettingModel89);
        ArrayList arrayList90 = new ArrayList();
        arrayList90.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel90 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.MultiLiveServerAutoJoinChannel", ScopeValue.LINKMIC, "boolean", "live_interact_multi_guest_auto_joinchannel", new r((Boolean) false), "multi guest auto join channel", "lixing.raylee", "live_interact_multi_guest_auto_joinchannel", arrayList90);
        models.add(liveSettingModel90);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.MultiLiveServerAutoJoinChannel", liveSettingModel90);
        ArrayList arrayList91 = new ArrayList();
        arrayList91.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel91 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.RtcAbLabelSetting", ScopeValue.LINKMIC, "java.lang.String", "rtc_ab_label", new r(""), "rtc_ab_label", "binzhihao", "rtc_ab_label", arrayList91);
        models.add(liveSettingModel91);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.RtcAbLabelSetting", liveSettingModel91);
        ArrayList arrayList92 = new ArrayList();
        arrayList92.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel92 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.ShouldSyncClearLinkInRoomWindowSetting", ScopeValue.LINKMIC, "boolean", "should_sync_clear_link_in_room_window", new r((Boolean) false), "should_sync_clear_link_in_room_window", "yangxu.616", "should_sync_clear_link_in_room_window", arrayList92);
        models.add(liveSettingModel92);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.ShouldSyncClearLinkInRoomWindowSetting", liveSettingModel92);
        ArrayList arrayList93 = new ArrayList();
        arrayList93.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel93 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.ShowLinkCrossRoomResetStacktraceSetting", ScopeValue.LINKMIC, "boolean", "show_link_cross_room_reset_stacktrace", new r((Boolean) true), "LinkCrossRoomDataHolder reset whether ALOG print stack trace", "wangyixu.1993", "show_link_cross_room_reset_stacktrace", arrayList93);
        models.add(liveSettingModel93);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.ShowLinkCrossRoomResetStacktraceSetting", liveSettingModel93);
        ArrayList arrayList94 = new ArrayList();
        arrayList94.add(new Group(new r((Number) Float.valueOf(7.92f)), "default group", true));
        LiveSettingModel liveSettingModel94 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.TTliveAnchorDeviceRatingHighSetting", ScopeValue.LINKMIC, "float", "ttlive_anchor_device_rating_high", new r((Number) Float.valueOf(7.92f)), "The standard for high-end equipment in the mic-link scenario", "yangxu.616", "ttlive_anchor_device_rating_high", arrayList94);
        models.add(liveSettingModel94);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.TTliveAnchorDeviceRatingHighSetting", liveSettingModel94);
        ArrayList arrayList95 = new ArrayList();
        arrayList95.add(new Group(new r((Number) Float.valueOf(-1.0f)), "default group", true));
        LiveSettingModel liveSettingModel95 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.TTliveAnchorDeviceScoreSetting", ScopeValue.LINKMIC, "float", "ttlive_anchor_device_score", new r((Number) Float.valueOf(-1.0f)), "Device scoring in the mic-link scenario", "wangyixu.1993", "ttlive_anchor_device_score", arrayList95);
        models.add(liveSettingModel95);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.TTliveAnchorDeviceScoreSetting", liveSettingModel95);
        ArrayList arrayList96 = new ArrayList();
        arrayList96.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel96 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.TTliveLinkmicModeSwitchOpenSetting", ScopeValue.LINKMIC, "boolean", "ttlive_linkmic_mode_switch_open", new r((Boolean) true), "is open linkmic mode switch", "wangyixu.1993", "ttlive_linkmic_mode_switch_open", arrayList96);
        models.add(liveSettingModel96);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.TTliveLinkmicModeSwitchOpenSetting", liveSettingModel96);
        ArrayList arrayList97 = new ArrayList();
        arrayList97.add(new Group(new r((Number) 5), "default group", true));
        LiveSettingModel liveSettingModel97 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.TTliveLinkmicMsgOptimizationAtLeastAvailableTimeSetting", ScopeValue.LINKMIC, "int", "ttlive_linkmic_msg_optimization_at_least_available_time", new r((Number) 5), "Linkmic msg optimization at least available time", "wangyixu.1993", "ttlive_linkmic_msg_optimization_at_least_available_time", arrayList97);
        models.add(liveSettingModel97);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.TTliveLinkmicMsgOptimizationAtLeastAvailableTimeSetting", liveSettingModel97);
        ArrayList arrayList98 = new ArrayList();
        arrayList98.add(new Group(new r((Number) 1), "default group", true));
        LiveSettingModel liveSettingModel98 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.TTliveLinkmicMsgOptimizationSwitchSetting", ScopeValue.LINKMIC, "int", "ttlive_linkmic_msg_optimization_switch", new r((Number) 1), "ttlive linkmic msg optimization switch", "wangyixu.1993", "ttlive_linkmic_msg_optimization_switch", arrayList98);
        models.add(liveSettingModel98);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.TTliveLinkmicMsgOptimizationSwitchSetting", liveSettingModel98);
        ArrayList arrayList99 = new ArrayList();
        arrayList99.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel99 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.cohost.CoHostNeedWaitRtcJoinChannelSucceed", ScopeValue.LINKMIC, "boolean", "link_co_host_need_wait_rtc_joinchannel_succeed", new r((Boolean) false), "need wait joinchannel succeed when push stream", "wangyixu.1993", "link_co_host_need_wait_rtc_joinchannel_succeed", arrayList99);
        models.add(liveSettingModel99);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.cohost.CoHostNeedWaitRtcJoinChannelSucceed", liveSettingModel99);
        ArrayList arrayList100 = new ArrayList();
        arrayList100.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel100 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.cohost.CoHostUserRtcReplyMsgSetting", ScopeValue.LINKMIC, "boolean", "link_co_host_use_rtc_msg", new r((Boolean) true), "enable use rtc msg when reply in co-host", "wangyixu.1993", "link_co_host_use_rtc_msg", arrayList100);
        models.add(liveSettingModel100);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.cohost.CoHostUserRtcReplyMsgSetting", liveSettingModel100);
    }

    private static void findSettingsMethod_1() {
        ArrayList arrayList = new ArrayList();
        arrayList.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.cohost.LinkServerAutoJoinChannel", ScopeValue.LINKMIC, "boolean", "live_interact_cohost_auto_joinchannel", new r((Boolean) false), "enable remove server join channel api", "huangjian.jann", "live_interact_cohost_auto_joinchannel", arrayList);
        models.add(liveSettingModel);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.cohost.LinkServerAutoJoinChannel", liveSettingModel);
        ArrayList arrayList2 = new ArrayList();
        arrayList2.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel2 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.multilive.LiveSeiTalkSetting", ScopeValue.LINKMIC, "com.bytedance.android.livesdk.livesetting.linkmic.multilive.LiveSeiTalkSettingConfig", "live_sei_talk_setting", new r(""), "live_sei_talk_setting", "tangwenjing.666", "live_sei_talk_setting", arrayList2);
        models.add(liveSettingModel2);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.multilive.LiveSeiTalkSetting", liveSettingModel2);
        ArrayList arrayList3 = new ArrayList();
        arrayList3.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel3 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.linkmic.match.EnableBattleEggSetting", ScopeValue.LINKMIC, "boolean", "enable_match_egg", new r((Boolean) false), "enable show match egg logic ", "huangjian.jann", "enable_match_egg", arrayList3);
        models.add(liveSettingModel3);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.linkmic.match.EnableBattleEggSetting", liveSettingModel3);
        ArrayList arrayList4 = new ArrayList();
        arrayList4.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel4 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.publicscreen.LiveChatShowDelayEnabledSetting", ScopeValue.PUBLICSCREEN, "boolean", "live_chat_show_delay_enabled", new r((Boolean) false), "Enable chat message delay", "liuxiangdong.richard", "live_chat_show_delay_enabled", arrayList4);
        models.add(liveSettingModel4);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.publicscreen.LiveChatShowDelayEnabledSetting", liveSettingModel4);
        ArrayList arrayList5 = new ArrayList();
        arrayList5.add(new Group(new r((Number) 400), "default group", true));
        LiveSettingModel liveSettingModel5 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.publicscreen.LiveChatShowDelayForHotLiveSetting", ScopeValue.PUBLICSCREEN, "int", "live_chat_show_delay_for_hot_live", new r((Number) 400), "The delay(ms) of chat message in live comment area when too much message", "liuxiangdong.richard", "live_chat_show_delay_for_hot_live", arrayList5);
        models.add(liveSettingModel5);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.publicscreen.LiveChatShowDelayForHotLiveSetting", liveSettingModel5);
        ArrayList arrayList6 = new ArrayList();
        arrayList6.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel6 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.publicscreen.LiveCommentTranslationConfigSetting", ScopeValue.PUBLICSCREEN, "com.bytedance.android.livesdk.chatroom.model.LiveCommentTranslationConfig", "live_comment_translation_config", new r(""), "the configuration for comment translation feature", "liuxiangdong.richard", "live_comment_translation_config", arrayList6);
        models.add(liveSettingModel6);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.publicscreen.LiveCommentTranslationConfigSetting", liveSettingModel6);
        ArrayList arrayList7 = new ArrayList();
        arrayList7.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel7 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.publicscreen.LiveExternalConfigSetting", ScopeValue.PUBLICSCREEN, "com.bytedance.android.livesdk.chatroom.model.LiveExternalConfig", "live_external_config", new r(""), "Feed focus on live stream style optimization configuration", "liuxiangdong.richard", "live_external_config", arrayList7);
        models.add(liveSettingModel7);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.publicscreen.LiveExternalConfigSetting", liveSettingModel7);
        ArrayList arrayList8 = new ArrayList();
        arrayList8.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel8 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.publicscreen.LiveGameFloatMsgPanelConfigSetting", ScopeValue.PUBLICSCREEN, "com.bytedance.android.livesdk.config.LiveGameFloatMsgPanelConfig", "live_game_float_msg_panel_config", new r(""), "Floating window message public screen configuration", "liuxiangdong.richard", "live_game_float_msg_panel_config", arrayList8);
        models.add(liveSettingModel8);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.publicscreen.LiveGameFloatMsgPanelConfigSetting", liveSettingModel8);
        ArrayList arrayList9 = new ArrayList();
        arrayList9.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel9 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.publicscreen.LiveMtIgnoreRoomCheckSetting", ScopeValue.PUBLICSCREEN, "boolean", "live_mt_ignore_room_check", new r((Boolean) false), "live_mt_ignore_room_check", "liuxiangdong.richard", "live_mt_ignore_room_check", arrayList9);
        models.add(liveSettingModel9);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.publicscreen.LiveMtIgnoreRoomCheckSetting", liveSettingModel9);
        ArrayList arrayList10 = new ArrayList();
        arrayList10.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel10 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.publicscreen.LivePublicScreenConfigSetting", ScopeValue.PUBLICSCREEN, "com.bytedance.android.livesdk.chatroom.model.LivePublicScreenConfig", "live_public_screen_config", new r(""), "The configuration for public screen.", "liuxiangdong.richard", "live_public_screen_config", arrayList10);
        models.add(liveSettingModel10);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.publicscreen.LivePublicScreenConfigSetting", liveSettingModel10);
        ArrayList arrayList11 = new ArrayList();
        arrayList11.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel11 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.publicscreen.LivePublicScreenDebugEnabledSetting", ScopeValue.PUBLICSCREEN, "boolean", "live_public_screen_debug_enabled", new r((Boolean) false), "enable debug function of public screen", "liuxiangdong.richard", "live_public_screen_debug_enabled", arrayList11);
        models.add(liveSettingModel11);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.publicscreen.LivePublicScreenDebugEnabledSetting", liveSettingModel11);
        ArrayList arrayList12 = new ArrayList();
        arrayList12.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel12 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.publicscreen.LivePublicScreenUiOptimizationSetting", ScopeValue.PUBLICSCREEN, "boolean", "live_public_screen_ui_optimization", new r((Boolean) false), "choose between old and new public screen style", "liuxiangdong.richard", "live_public_screen_ui_optimization", arrayList12);
        models.add(liveSettingModel12);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.publicscreen.LivePublicScreenUiOptimizationSetting", liveSettingModel12);
        ArrayList arrayList13 = new ArrayList();
        arrayList13.add(new Group(new r((Number) 1000), "default group", true));
        LiveSettingModel liveSettingModel13 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.publicscreen.LiveTextWidgetShowMsgPerMillisSetting", ScopeValue.PUBLICSCREEN, "int", "live_text_widget_show_msg_per_millis", new r((Number) 1000), "The update interval of live comment area.(ms)", "liuxiangdong.richard", "live_text_widget_show_msg_per_millis", arrayList13);
        models.add(liveSettingModel13);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.publicscreen.LiveTextWidgetShowMsgPerMillisSetting", liveSettingModel13);
        ArrayList arrayList14 = new ArrayList();
        arrayList14.add(new Group(new r((Number) 100), "default group", true));
        LiveSettingModel liveSettingModel14 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.publicscreen.LiveTextWidgetShowMsgPerSizeSetting", ScopeValue.PUBLICSCREEN, "int", "live_text_widget_show_msg_per_size", new r((Number) 100), "The max visible message count of live comment area", "liuxiangdong.richard", "live_text_widget_show_msg_per_size", arrayList14);
        models.add(liveSettingModel14);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.publicscreen.LiveTextWidgetShowMsgPerSizeSetting", liveSettingModel14);
        ArrayList arrayList15 = new ArrayList();
        arrayList15.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel15 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.AdmServerCfgSetting", ScopeValue.BROADCAST, "java.lang.String", "adm_server_cfg", new r(""), "LiveCore's ByteAudio switch and configurations", "yanpeng.p", "adm_server_cfg", arrayList15);
        models.add(liveSettingModel15);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.AdmServerCfgSetting", liveSettingModel15);
        ArrayList arrayList16 = new ArrayList();
        arrayList16.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel16 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.AdmTypeSetting", ScopeValue.BROADCAST, "int", "adm_type", new r((Number) 0), "LiveCore's ByteAudio switch and configurations", "yanpeng.p", "adm_type", arrayList16);
        models.add(liveSettingModel16);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.AdmTypeSetting", liveSettingModel16);
        ArrayList arrayList17 = new ArrayList();
        arrayList17.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel17 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.BroadcastLiveAnchorIntroSetting", ScopeValue.BROADCAST, "int", "live_enable_anchor_intro", new r((Number) 0), "Live Intro Anchor Function Enable", "zhutianye", "live_enable_anchor_intro", arrayList17);
        models.add(liveSettingModel17);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.BroadcastLiveAnchorIntroSetting", liveSettingModel17);
        ArrayList arrayList18 = new ArrayList();
        arrayList18.add(new Group(new r((Number) 1), "default group", true));
        LiveSettingModel liveSettingModel18 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.BroadcastLiveAudienceIntroSetting", ScopeValue.BROADCAST, "int", "live_disable_audience_intro", new r((Number) 1), "Live Intro Audience Function Disable", "zhutianye", "live_disable_audience_intro", arrayList18);
        models.add(liveSettingModel18);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.BroadcastLiveAudienceIntroSetting", liveSettingModel18);
        ArrayList arrayList19 = new ArrayList();
        arrayList19.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel19 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.BroadcastLiveCenterSetting", ScopeValue.BROADCAST, "int", "live_anchor_center_type", new r((Number) 0), "Live Center Function Enable", "xunan", "live_anchor_center_type", arrayList19);
        models.add(liveSettingModel19);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.BroadcastLiveCenterSetting", liveSettingModel19);
        ArrayList arrayList20 = new ArrayList();
        arrayList20.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel20 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.BroadcastLiveCenterUrl", ScopeValue.BROADCAST, "java.lang.String", "live_anchor_center_lynx_url", new r(""), "show live anchor center lynx view", "zhutianye", "live_anchor_center_lynx_url", arrayList20);
        models.add(liveSettingModel20);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.BroadcastLiveCenterUrl", liveSettingModel20);
        ArrayList arrayList21 = new ArrayList();
        arrayList21.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel21 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.CameraTypeSettingSetting", ScopeValue.BROADCAST, "com.bytedance.android.livesdk.live.model.Camera2AB", "camera_type_setting", new r(""), "camera type and hardware level", "lishuo.oo", "camera_type_setting", arrayList21);
        models.add(liveSettingModel21);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.CameraTypeSettingSetting", liveSettingModel21);
        ArrayList arrayList22 = new ArrayList();
        arrayList22.add(new Group(new r((Number) 1), "default group", true));
        LiveSettingModel liveSettingModel22 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.CreatorToolLiveCenterSetting", ScopeValue.BROADCAST, "int", "mt_anchor_center_type", new r((Number) 1), "Live Center Function Enable in Creator Tool", "zhutianye", "mt_anchor_center_type", arrayList22);
        models.add(liveSettingModel22);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.CreatorToolLiveCenterSetting", liveSettingModel22);
        ArrayList arrayList23 = new ArrayList();
        arrayList23.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel23 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.CreatorToolsAgencyCenterUrl", ScopeValue.BROADCAST, "java.lang.String", "live_agency_center_scheme", new r(""), "show agency center lynx view in creator tools", "zhutianye", "live_agency_center_scheme", arrayList23);
        models.add(liveSettingModel23);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.CreatorToolsAgencyCenterUrl", liveSettingModel23);
        ArrayList arrayList24 = new ArrayList();
        arrayList24.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel24 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.CreatorToolsLiveCenterUrl", ScopeValue.BROADCAST, "java.lang.String", "mt_anchor_center_lynx_url", new r(""), "show live anchor center lynx view in creator tools", "zhutianye", "mt_anchor_center_lynx_url", arrayList24);
        models.add(liveSettingModel24);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.CreatorToolsLiveCenterUrl", liveSettingModel24);
        ArrayList arrayList25 = new ArrayList();
        arrayList25.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel25 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.DisableRoomStickerNewBackSetting", ScopeValue.BROADCAST, "int", "disable_room_sticker_new_back", new r((Number) 0), "Select sticker platform. 0:use new platform, 1:use old platform", "lishuo.oo", "disable_room_sticker_new_back", arrayList25);
        models.add(liveSettingModel25);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.DisableRoomStickerNewBackSetting", liveSettingModel25);
        ArrayList arrayList26 = new ArrayList();
        arrayList26.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel26 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.EnableSingleLooperPlayerPullStreamSetting", ScopeValue.BROADCAST, "boolean", "enable_single_looper_player_pull_stream", new r((Boolean) false), "Enable single looper for video player pull stream", "lishuo.oo", "enable_single_looper_player_pull_stream", arrayList26);
        models.add(liveSettingModel26);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.EnableSingleLooperPlayerPullStreamSetting", liveSettingModel26);
        ArrayList arrayList27 = new ArrayList();
        arrayList27.add(new Group(new r((Number) 1), "default group", true));
        LiveSettingModel liveSettingModel27 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.EnableTTCaptureSetting", ScopeValue.BROADCAST, "int", "enable_tt_capture", new r((Number) 1), "Whether to enable custom capture, 0:disable,1:enable", "lishuo.oo", "enable_tt_capture", arrayList27);
        models.add(liveSettingModel27);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.EnableTTCaptureSetting", liveSettingModel27);
        ArrayList arrayList28 = new ArrayList();
        arrayList28.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel28 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.FrisbeeTaskIconShowSetting", ScopeValue.BROADCAST, "boolean", "frisbee_task_icon_show", new r((Boolean) false), "There is a allowed list requirement for the entry switch of the anchor task in more panels, so it is different from live_broadcast_task_entry_show", "lishuo.oo", "frisbee_task_icon_show", arrayList28);
        models.add(liveSettingModel28);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.FrisbeeTaskIconShowSetting", liveSettingModel28);
        ArrayList arrayList29 = new ArrayList();
        arrayList29.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel29 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.Live3dtouchOptimizeEnableSetting", ScopeValue.BROADCAST, "boolean", "live_3dtouch_optimize_enable", new r((Boolean) false), "enable 3d touch", "xunan.mt", "live_3dtouch_optimize_enable", arrayList29);
        models.add(liveSettingModel29);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.Live3dtouchOptimizeEnableSetting", liveSettingModel29);
        ArrayList arrayList30 = new ArrayList();
        arrayList30.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel30 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveAnchorBeautyAbGroupSetting", ScopeValue.BROADCAST, "int", "live_anchor_beauty_ab_group", new r((Number) 0), "live small beauty ab group", "lishuo.oo", "live_anchor_beauty_ab_group", arrayList30);
        models.add(liveSettingModel30);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveAnchorBeautyAbGroupSetting", liveSettingModel30);
        ArrayList arrayList31 = new ArrayList();
        arrayList31.add(new Group(new r((Number) 20), "default group", true));
        LiveSettingModel liveSettingModel31 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveAnchorNetworkMonitorDurationSetting", ScopeValue.BROADCAST, "int", "live_anchor_network_monitor_duration", new r((Number) 20), "network speed monitor duration in anchor room", "lishuo.oo", "live_anchor_network_monitor_duration", arrayList31);
        models.add(liveSettingModel31);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveAnchorNetworkMonitorDurationSetting", liveSettingModel31);
        ArrayList arrayList32 = new ArrayList();
        arrayList32.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel32 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveAnchorPrivacyPageUrlSetting", ScopeValue.BROADCAST, "java.lang.String", "live_anchor_privacy_page_url", new r(""), "authorization url of vigo's asset", "lishuo.oo", "live_anchor_privacy_page_url", arrayList32);
        models.add(liveSettingModel32);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveAnchorPrivacyPageUrlSetting", liveSettingModel32);
        ArrayList arrayList33 = new ArrayList();
        arrayList33.add(new Group(new r((Number) 1), "default group", true));
        LiveSettingModel liveSettingModel33 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveAnchorScreenshotEnableSetting", ScopeValue.BROADCAST, "int", "live_anchor_screenshot_enable", new r((Number) 1), "live anchor screenshot enable", "lishuo.oo", "live_anchor_screenshot_enable", arrayList33);
        models.add(liveSettingModel33);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveAnchorScreenshotEnableSetting", liveSettingModel33);
        ArrayList arrayList34 = new ArrayList();
        arrayList34.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel34 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveBeautyParamSetting", ScopeValue.BROADCAST, "com.bytedance.android.livesdk.model.LiveBeautyParam", "live_beauty_param", new r(""), "live beauty's threshold", "lishuo.oo", "live_beauty_param", arrayList34);
        models.add(liveSettingModel34);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveBeautyParamSetting", liveSettingModel34);
        ArrayList arrayList35 = new ArrayList();
        arrayList35.add(new Group(new r((Number) 16), "default group", true));
        LiveSettingModel liveSettingModel35 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveBroadcastAgeThresholdSetting", ScopeValue.BROADCAST, "int", "live_broadcast_age_threshold", new r((Number) 16), "Age threshold of broadcast", "lishuo.oo", "live_broadcast_age_threshold", arrayList35);
        models.add(liveSettingModel35);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveBroadcastAgeThresholdSetting", liveSettingModel35);
        ArrayList arrayList36 = new ArrayList();
        arrayList36.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel36 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveBroadcastForceUploadVideoImageSetting", ScopeValue.BROADCAST, "int", "live_broadcast_force_upload_video_image", new r((Number) 0), "live broadcast force upload video image or not", "lishuo.oo", "live_broadcast_force_upload_video_image", arrayList36);
        models.add(liveSettingModel36);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveBroadcastForceUploadVideoImageSetting", liveSettingModel36);
        ArrayList arrayList37 = new ArrayList();
        arrayList37.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel37 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveBroadcastPauseEnableSetting", ScopeValue.BROADCAST, "boolean", "live_broadcast_pause_enable", new r((Boolean) false), "Anchor active pause function switch", "lishuo.oo", "live_broadcast_pause_enable", arrayList37);
        models.add(liveSettingModel37);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveBroadcastPauseEnableSetting", liveSettingModel37);
        ArrayList arrayList38 = new ArrayList();
        arrayList38.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel38 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveBroadcastTaskListUrlSetting", ScopeValue.BROADCAST, "java.lang.String", "live_broadcast_task_list_url", new r(""), "Anchor task list address", "lishuo.oo", "live_broadcast_task_list_url", arrayList38);
        models.add(liveSettingModel38);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveBroadcastTaskListUrlSetting", liveSettingModel38);
        ArrayList arrayList39 = new ArrayList();
        arrayList39.add(new Group(new r((Number) 43), "default group", true));
        LiveSettingModel liveSettingModel39 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveBroadcastTaskResourceIdSetting", ScopeValue.BROADCAST, "int", "live_broadcast_task_resource_id", new r((Number) 43), "Anchor task completion animation resource ID", "lishuo.oo", "live_broadcast_task_resource_id", arrayList39);
        models.add(liveSettingModel39);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveBroadcastTaskResourceIdSetting", liveSettingModel39);
        ArrayList arrayList40 = new ArrayList();
        Float valueOf = Float.valueOf(0.4f);
        arrayList40.add(new Group(new r((Number) valueOf), "default group", true));
        LiveSettingModel liveSettingModel40 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveBroadcastUploadVideoImageCompressRateSetting", ScopeValue.BROADCAST, "float", "live_broadcast_upload_video_image_compress_rate", new r((Number) valueOf), "live broadcast upload video image compress rate", "lishuo.oo", "live_broadcast_upload_video_image_compress_rate", arrayList40);
        models.add(liveSettingModel40);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveBroadcastUploadVideoImageCompressRateSetting", liveSettingModel40);
        ArrayList arrayList41 = new ArrayList();
        arrayList41.add(new Group(new r((Number) 640), "default group", true));
        LiveSettingModel liveSettingModel41 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveBroadcastUploadVideoImageHeightSetting", ScopeValue.BROADCAST, "int", "live_broadcast_upload_video_image_height", new r((Number) 640), "live broadcast upload video image height", "lishuo.oo", "live_broadcast_upload_video_image_height", arrayList41);
        models.add(liveSettingModel41);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveBroadcastUploadVideoImageHeightSetting", liveSettingModel41);
        ArrayList arrayList42 = new ArrayList();
        arrayList42.add(new Group(new r((Number) 2), "default group", true));
        LiveSettingModel liveSettingModel42 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveBroadcastUploadVideoImageIntervalSetting", ScopeValue.BROADCAST, "int", "live_broadcast_upload_video_image_interval", new r((Number) 2), "live broadcast upload video image interval", "lishuo.oo", "live_broadcast_upload_video_image_interval", arrayList42);
        models.add(liveSettingModel42);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveBroadcastUploadVideoImageIntervalSetting", liveSettingModel42);
        ArrayList arrayList43 = new ArrayList();
        arrayList43.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel43 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveBroadcastUploadVideoImageSetting", ScopeValue.BROADCAST, "int", "live_broadcast_upload_video_image", new r((Number) 0), "live broadcast upload video image or not", "lishuo.oo", "live_broadcast_upload_video_image", arrayList43);
        models.add(liveSettingModel43);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveBroadcastUploadVideoImageSetting", liveSettingModel43);
        ArrayList arrayList44 = new ArrayList();
        arrayList44.add(new Group(new r((Number) 360), "default group", true));
        LiveSettingModel liveSettingModel44 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveBroadcastUploadVideoImageWidthSetting", ScopeValue.BROADCAST, "int", "live_broadcast_upload_video_image_width", new r((Number) 360), "live broadcast upload video image width", "lishuo.oo", "live_broadcast_upload_video_image_width", arrayList44);
        models.add(liveSettingModel44);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveBroadcastUploadVideoImageWidthSetting", liveSettingModel44);
        ArrayList arrayList45 = new ArrayList();
        arrayList45.add(new Group(new r((Number) Float.valueOf(0.0f)), "default group", true));
        LiveSettingModel liveSettingModel45 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveCaptureVideoRecordDurationSetting", ScopeValue.BROADCAST, "float", "live_capture_video_record_duration", new r((Number) Float.valueOf(0.0f)), "The duration of capturing video in full link, unit second.", "lishuo.oo", "live_capture_video_record_duration", arrayList45);
        models.add(liveSettingModel45);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveCaptureVideoRecordDurationSetting", liveSettingModel45);
        ArrayList arrayList46 = new ArrayList();
        arrayList46.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel46 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveCoreCameraLogLevelSetting", ScopeValue.BROADCAST, "int", "live_core_camera_log_level", new r((Number) 0), "LiveCore camera log level, == 1 means enable log above verbose, ==0 means close log", "lishuo.oo", "live_core_camera_log_level", arrayList46);
        models.add(liveSettingModel46);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveCoreCameraLogLevelSetting", liveSettingModel46);
        ArrayList arrayList47 = new ArrayList();
        arrayList47.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel47 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveCoverCropCustomStyleSetting", ScopeValue.BROADCAST, "boolean", "live_cover_crop_custom_style", new r((Boolean) true), "broadcast preview crop cover use custom style", "xunan.mt", "live_cover_crop_custom_style", arrayList47);
        models.add(liveSettingModel47);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveCoverCropCustomStyleSetting", liveSettingModel47);
        ArrayList arrayList48 = new ArrayList();
        arrayList48.add(new Group(new r((Number) 250), "default group", true));
        LiveSettingModel liveSettingModel48 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveCoverMinSizeSetting", ScopeValue.BROADCAST, "int", "live_cover_min_size", new r((Number) 250), "Min crop size of live cover", "lishuo.oo", "live_cover_min_size", arrayList48);
        models.add(liveSettingModel48);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveCoverMinSizeSetting", liveSettingModel48);
        ArrayList arrayList49 = new ArrayList();
        arrayList49.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel49 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveDisableDownloadEffectAtAppLaunchSetting", ScopeValue.BROADCAST, "int", "live_disable_download_effect_at_app_launch", new r((Number) 0), "The switch of loading resources after cold start", "lishuo.oo", "live_disable_download_effect_at_app_launch", arrayList49);
        models.add(liveSettingModel49);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveDisableDownloadEffectAtAppLaunchSetting", liveSettingModel49);
        ArrayList arrayList50 = new ArrayList();
        arrayList50.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel50 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveEnableBitrateMonitorSetting", ScopeValue.BROADCAST, "int", "live_enable_bitrate_monitor", new r((Number) 0), "ab test, network speed monitor in anchor room", "lishuo.oo", "live_enable_bitrate_monitor", arrayList50);
        models.add(liveSettingModel50);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveEnableBitrateMonitorSetting", liveSettingModel50);
        ArrayList arrayList51 = new ArrayList();
        arrayList51.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel51 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveEnableFixLiveEndSetting", ScopeValue.BROADCAST, "boolean", "live_enable_fix_live_end", new r((Boolean) false), "During live, enable the scheme that fixed the problem of mi 9 not showing live end dialog. false:disable, true:enable", "lishuo.oo", "live_enable_fix_live_end", arrayList51);
        models.add(liveSettingModel51);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveEnableFixLiveEndSetting", liveSettingModel51);
        ArrayList arrayList52 = new ArrayList();
        arrayList52.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel52 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveEnableNewGestureDialogSetting", ScopeValue.BROADCAST, "boolean", "live_enable_new_gesture_dialog", new r((Boolean) false), "Whether to use the new interactive gesture panel", "lishuo.oo", "live_enable_new_gesture_dialog", arrayList52);
        models.add(liveSettingModel52);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveEnableNewGestureDialogSetting", liveSettingModel52);
        ArrayList arrayList53 = new ArrayList();
        arrayList53.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel53 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveEnableUseEffectCheckCacheSetting", ScopeValue.BROADCAST, "boolean", "live_enable_use_effect_check_cache", new r((Boolean) true), "Enable check effect resources using cache.)", "lishuo.oo", "live_enable_use_effect_check_cache", arrayList53);
        models.add(liveSettingModel53);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveEnableUseEffectCheckCacheSetting", liveSettingModel53);
        ArrayList arrayList54 = new ArrayList();
        arrayList54.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel54 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveEnableUseEffectDownloadCacheSetting", ScopeValue.BROADCAST, "boolean", "live_enable_use_effect_download_cache", new r((Boolean) false), "When the effect for anchor is downloading, use the cached path in presenter.", "lishuo.oo", "live_enable_use_effect_download_cache", arrayList54);
        models.add(liveSettingModel54);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveEnableUseEffectDownloadCacheSetting", liveSettingModel54);
        ArrayList arrayList55 = new ArrayList();
        arrayList55.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel55 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveEnableVeCamera2Setting", ScopeValue.BROADCAST, "boolean", "live_enable_ve_camera2", new r((Boolean) false), "Enable VE camera2 capture during live.", "lishuo.oo", "live_enable_ve_camera2", arrayList55);
        models.add(liveSettingModel55);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveEnableVeCamera2Setting", liveSettingModel55);
        ArrayList arrayList56 = new ArrayList();
        arrayList56.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel56 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveEventNoPenaltySetting", ScopeValue.BROADCAST, "boolean", "live_event_no_penalty", new r((Boolean) false), "live_event_no_penalty", "liukan.kk", "live_event_no_penalty", arrayList56);
        models.add(liveSettingModel56);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveEventNoPenaltySetting", liveSettingModel56);
        ArrayList arrayList57 = new ArrayList();
        arrayList57.add(new Group(new r((Number) 30L), "default group", true));
        LiveSettingModel liveSettingModel57 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveFaceStickerEffectivelyUseTimeSetting", ScopeValue.BROADCAST, "long", "live_face_sticker_effectively_use_time", new r((Number) 30L), "Duration of using sticker", "lishuo.oo", "live_face_sticker_effectively_use_time", arrayList57);
        models.add(liveSettingModel57);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveFaceStickerEffectivelyUseTimeSetting", liveSettingModel57);
        ArrayList arrayList58 = new ArrayList();
        arrayList58.add(new Group(new r((Number) 30L), "default group", true));
        LiveSettingModel liveSettingModel58 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveFilterEffectivelyUseTimeSetting", ScopeValue.BROADCAST, "long", "live_filter_effectively_use_time", new r((Number) 30L), "Duration of using filter", "lishuo.oo", "live_filter_effectively_use_time", arrayList58);
        models.add(liveSettingModel58);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveFilterEffectivelyUseTimeSetting", liveSettingModel58);
        ArrayList arrayList59 = new ArrayList();
        arrayList59.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel59 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveForbbidenDetailPageSetting", ScopeValue.BROADCAST, "java.lang.String", "live_forbbiden_detail_page", new r(""), "Block detail url, distinguish between domestic and Vigo.", "lishuo.oo", "live_forbbiden_detail_page", arrayList59);
        models.add(liveSettingModel59);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveForbbidenDetailPageSetting", liveSettingModel59);
        ArrayList arrayList60 = new ArrayList();
        arrayList60.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel60 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveForbidNotifyToolsStartBroadcastSetting", ScopeValue.BROADCAST, "boolean", "live_forbid_notify_tools_start_broadcast", new r((Boolean) false), "forbid notify tools start broadcast", "lishuo.oo", "live_forbid_notify_tools_start_broadcast", arrayList60);
        models.add(liveSettingModel60);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveForbidNotifyToolsStartBroadcastSetting", liveSettingModel60);
        ArrayList arrayList61 = new ArrayList();
        arrayList61.add(new Group(new r((Number) 0), "default_group", true));
        arrayList61.add(new Group(new r((Number) 1), "experiment_group", false));
        LiveSettingModel liveSettingModel61 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveGameCategoryEntranceSetting", ScopeValue.BROADCAST, "int", "show_game_category_entrance", new r((Number) 0), "Show Game Category Entrance", "lijianchang", "show_game_category_entrance", arrayList61);
        models.add(liveSettingModel61);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveGameCategoryEntranceSetting", liveSettingModel61);
        ArrayList arrayList62 = new ArrayList();
        arrayList62.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel62 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveGameStreamProportionAdaptSetting", ScopeValue.BROADCAST, "boolean", "live_game_stream_proportion_adapt", new r((Boolean) false), "Live streaming rate of Game Live is adjusted automatically according to the screen size", "lishuo.oo", "live_game_stream_proportion_adapt", arrayList62);
        models.add(liveSettingModel62);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveGameStreamProportionAdaptSetting", liveSettingModel62);
        ArrayList arrayList63 = new ArrayList();
        arrayList63.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel63 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveGroupToolbarReddotSetting", ScopeValue.BROADCAST, "java.lang.String", "live_group_toolbar_reddot", new r(""), "anchor's toolbar red dot settings", "lishuo.oo", "live_group_toolbar_reddot", arrayList63);
        models.add(liveSettingModel63);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveGroupToolbarReddotSetting", liveSettingModel63);
        ArrayList arrayList64 = new ArrayList();
        arrayList64.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel64 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveHashTagAnchorShowEntrance", ScopeValue.BROADCAST, "boolean", "live_hashtag_anchor_show_entrance", new r((Boolean) false), "The ab test of whether to display Hashtag entrance for streamers", "yanpeng.p", "live_hashtag_anchor_show_entrance", arrayList64);
        models.add(liveSettingModel64);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveHashTagAnchorShowEntrance", liveSettingModel64);
        ArrayList arrayList65 = new ArrayList();
        arrayList65.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel65 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveHashtagAudienceShowEntranceSetting", ScopeValue.BROADCAST, "boolean", "live_hashtag_audience_show_entrance", new r((Boolean) true), "The ab test of whether to display Hashtag entrance for audiences", "yanpeng.p", "live_hashtag_audience_show_entrance", arrayList65);
        models.add(liveSettingModel65);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveHashtagAudienceShowEntranceSetting", liveSettingModel65);
        ArrayList arrayList66 = new ArrayList();
        arrayList66.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel66 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveHostAndCoHostAddAgeSetting", ScopeValue.BROADCAST, "int", "live_host_and_co_host_add_age", new r((Number) 0), "live_host_and_co_host_add_age", "liukan.kk", "live_host_and_co_host_add_age", arrayList66);
        models.add(liveSettingModel66);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveHostAndCoHostAddAgeSetting", liveSettingModel66);
        ArrayList arrayList67 = new ArrayList();
        arrayList67.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel67 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveIntroLynxUrl", ScopeValue.BROADCAST, "java.lang.String", "live_intro_web_url", new r(""), "Live Intro DialogFragment Lynx Url", "zhutianye", "live_intro_web_url", arrayList67);
        models.add(liveSettingModel67);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveIntroLynxUrl", liveSettingModel67);
        ArrayList arrayList68 = new ArrayList();
        arrayList68.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel68 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveLowAgeCountrySetting", ScopeValue.BROADCAST, "boolean", "live_low_age_country", new r((Boolean) false), "The countries which should check low age", "lishuo.oo", "live_low_age_country", arrayList68);
        models.add(liveSettingModel68);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveLowAgeCountrySetting", liveSettingModel68);
        ArrayList arrayList69 = new ArrayList();
        arrayList69.add(new Group(new r((Number) 60000), "default group", true));
        LiveSettingModel liveSettingModel69 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveMaxEnterBackgroundTimeSetting", ScopeValue.BROADCAST, "int", "live_max_enter_background_time", new r((Number) 60000), "The end stream timeout, unit ms, of going to background after broadcasting.", "lishuo.oo", "live_max_enter_background_time", arrayList69);
        models.add(liveSettingModel69);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveMaxEnterBackgroundTimeSetting", liveSettingModel69);
        ArrayList arrayList70 = new ArrayList();
        arrayList70.add(new Group(new r((Number) 500), "default group", true));
        LiveSettingModel liveSettingModel70 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveMaxRetainAlogMessageSizeSetting", ScopeValue.BROADCAST, "int", "live_max_retain_alog_message_size", new r((Number) 500), "max retain message size for alog", "lishuo.oo", "live_max_retain_alog_message_size", arrayList70);
        models.add(liveSettingModel70);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveMaxRetainAlogMessageSizeSetting", liveSettingModel70);
        ArrayList arrayList71 = new ArrayList();
        arrayList71.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel71 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveMtCoverAbtestSetting", ScopeValue.BROADCAST, "boolean", "live_mt_cover_abtest", new r((Boolean) false), "The switch of uploading cover in the start broadcast page", "lishuo.oo", "live_mt_cover_abtest", arrayList71);
        models.add(liveSettingModel71);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveMtCoverAbtestSetting", liveSettingModel71);
        ArrayList arrayList72 = new ArrayList();
        arrayList72.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel72 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveMtEffectSettingSwitchSetting", ScopeValue.BROADCAST, "boolean", "live_mt_effect_setting_switch", new r((Boolean) true), "whether show effect entry", "lishuo.oo", "live_mt_effect_setting_switch", arrayList72);
        models.add(liveSettingModel72);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveMtEffectSettingSwitchSetting", liveSettingModel72);
        ArrayList arrayList73 = new ArrayList();
        arrayList73.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel73 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveMtForwardVideoCaptureSetting", ScopeValue.BROADCAST, "boolean", "live_mt_forward_video_capture", new r((Boolean) false), "forward broadcast video capture", "lishuo.oo", "live_mt_forward_video_capture", arrayList73);
        models.add(liveSettingModel73);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveMtForwardVideoCaptureSetting", liveSettingModel73);
        ArrayList arrayList74 = new ArrayList();
        arrayList74.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel74 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveObsBroadcastGuideStrategySetting", ScopeValue.BROADCAST, "int", "live_obs_broadcast_guide_strategy", new r((Number) 0), "The ab test of obs broadcast guide ui style", "yanpeng.p", "live_obs_broadcast_guide_strategy", arrayList74);
        models.add(liveSettingModel74);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveObsBroadcastGuideStrategySetting", liveSettingModel74);
        ArrayList arrayList75 = new ArrayList();
        arrayList75.add(new Group(new r("https://webcast.tiktokv.com/falcon/webcast_mt/page/obs_intro/index.html"), "default group", true));
        LiveSettingModel liveSettingModel75 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveObsHelpPageSetting", ScopeValue.BROADCAST, "java.lang.String", "live_obs_help_page", new r("https://webcast.tiktokv.com/falcon/webcast_mt/page/obs_intro/index.html"), "MT's Obs push stream address", "lishuo.oo", "live_obs_help_page", arrayList75);
        models.add(liveSettingModel75);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveObsHelpPageSetting", liveSettingModel75);
        ArrayList arrayList76 = new ArrayList();
        arrayList76.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel76 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveOptBroadcastStartSetting", ScopeValue.BROADCAST, "boolean", "live_opt_broadcast_start", new r((Boolean) false), "opt live broadcast start time", "lishuo.oo", "live_opt_broadcast_start", arrayList76);
        models.add(liveSettingModel76);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveOptBroadcastStartSetting", liveSettingModel76);
        ArrayList arrayList77 = new ArrayList();
        arrayList77.add(new Group(new r((Boolean) true), "Support Broadcast Pause Live", false));
        arrayList77.add(new Group(new r((Boolean) false), "Default", true));
        LiveSettingModel liveSettingModel77 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LivePauseLiveSetting", ScopeValue.BROADCAST, "boolean", "live_enable_room_pause", new r((Boolean) false), "Experiment allowing anchors to pause LIVEs", "xunan.mt", "live_enable_room_pause", arrayList77);
        models.add(liveSettingModel77);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LivePauseLiveSetting", liveSettingModel77);
        ArrayList arrayList78 = new ArrayList();
        arrayList78.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel78 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LivePermissionApplyLynx", ScopeValue.BROADCAST, "java.lang.String", "live_permission_apply_lynx_url", new r(""), "show live permission apply dialog", "zhutianye", "live_permission_apply_lynx_url", arrayList78);
        models.add(liveSettingModel78);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LivePermissionApplyLynx", liveSettingModel78);
        ArrayList arrayList79 = new ArrayList();
        arrayList79.add(new Group(new r((Boolean) false), "control_group", true));
        arrayList79.add(new Group(new r((Boolean) true), "experimental_group", false));
        LiveSettingModel liveSettingModel79 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LivePlayerPushStreamLogCpuMemoryOptimizationSetting", ScopeValue.BROADCAST, "boolean", "player_push_stream_log_opt", new r((Boolean) false), "\n    The setting controls whether to enable the optimization of reading the cpu and memory info \n    when live player push stream logging. \n    When enabled:\n    1. The cpu and memory info will be acquired from cache instead of reading immediately \n    2. We will remove the `start_memory` and `live_pull_memory` logging field\n    ", "lixinyang.a", "player_push_stream_log_opt", arrayList79);
        models.add(liveSettingModel79);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LivePlayerPushStreamLogCpuMemoryOptimizationSetting", liveSettingModel79);
        ArrayList arrayList80 = new ArrayList();
        arrayList80.add(new Group(new r((Number) 5), "default group", true));
        LiveSettingModel liveSettingModel80 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LivePushStreamLogLevelSetting", ScopeValue.BROADCAST, "int", "live_push_stream_log_level", new r((Number) 5), "The log level of anchor pushing stream. 2: VERBOSE, 3: DEBUG, 4: INFO, 5: WARN, 6: ERROR", "lishuo.oo", "live_push_stream_log_level", arrayList80);
        models.add(liveSettingModel80);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LivePushStreamLogLevelSetting", liveSettingModel80);
        ArrayList arrayList81 = new ArrayList();
        arrayList81.add(new Group(new r((Boolean) true), "Enable resuming LIVE", false));
        arrayList81.add(new Group(new r((Boolean) false), "Disable resuming LIVE", false));
        arrayList81.add(new Group(new r((Boolean) false), "Default", true));
        LiveSettingModel liveSettingModel81 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveResumeLiveSetting", ScopeValue.BROADCAST, "boolean", "live_enable_restart_room", new r((Boolean) false), "Experiment allowing anchors to resume interrupted LIVEs", "wangsiyue.kw", "live_enable_restart_room", arrayList81);
        models.add(liveSettingModel81);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveResumeLiveSetting", liveSettingModel81);
        ArrayList arrayList82 = new ArrayList();
        arrayList82.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel82 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveSdkNewEffectPlayerSetting", ScopeValue.BROADCAST, "boolean", "live_sdk_new_effect_player", new r((Boolean) true), "New Priority Queue for the Effect Msg", "lishuo.oo", "live_sdk_new_effect_player", arrayList82);
        models.add(liveSettingModel82);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveSdkNewEffectPlayerSetting", liveSettingModel82);
        ArrayList arrayList83 = new ArrayList();
        arrayList83.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel83 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveShareChannelListI18nSetting", ScopeValue.BROADCAST, "java.lang.String[]", "live_share_channel_list_i18n", new r(""), "share channels of I18n", "lishuo.oo", "live_share_channel_list_i18n", arrayList83);
        models.add(liveSettingModel83);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveShareChannelListI18nSetting", liveSettingModel83);
        ArrayList arrayList84 = new ArrayList();
        arrayList84.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel84 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveShowBlockInPreviewPageSetting", ScopeValue.BROADCAST, "boolean", "live_show_block_in_preview_page", new r((Boolean) false), "show block info in preview page", "lishuo.oo", "live_show_block_in_preview_page", arrayList84);
        models.add(liveSettingModel84);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveShowBlockInPreviewPageSetting", liveSettingModel84);
        ArrayList arrayList85 = new ArrayList();
        arrayList85.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel85 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveSlotExperiment", ScopeValue.SLOT, "com.bytedance.android.livesdk.livesetting.model.LiveSlotSettings", "live_slot_setting", new r(""), "live slot setting", "wuzhongle", "live_slot_setting", arrayList85);
        models.add(liveSettingModel85);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveSlotExperiment", liveSettingModel85);
        ArrayList arrayList86 = new ArrayList();
        arrayList86.add(new Group(new r((Number) -1), "default group", true));
        LiveSettingModel liveSettingModel86 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveStreamBitrateAdaptSetting", ScopeValue.BROADCAST, "int", "live_stream_bitrate_adapt", new r((Number) -1), "Live streaming rate automatically adapt. -1: The server sends the value, 0:BITRATE_ADAPT_STRATEGY_NORMAL, 1:BITRATE_ADAPT_STRATEGY_SENSITIVE, 2:BITRATE_ADAPT_STRATEGY_MORE_SENSITIVE", "lishuo.oo", "live_stream_bitrate_adapt", arrayList86);
        models.add(liveSettingModel86);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveStreamBitrateAdaptSetting", liveSettingModel86);
        ArrayList arrayList87 = new ArrayList();
        arrayList87.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel87 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveStreamBitrateSetting", ScopeValue.BROADCAST, "int[]", "live_stream_bitrate", new r(""), "Live streaming rate setting[default, lowest, highest]. Setting value uses server configuration by default", "lishuo.oo", "live_stream_bitrate", arrayList87);
        models.add(liveSettingModel87);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveStreamBitrateSetting", liveSettingModel87);
        ArrayList arrayList88 = new ArrayList();
        arrayList88.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel88 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveStreamEnableSdkParamsSetting", ScopeValue.BROADCAST, "boolean", "live_stream_enable_sdk_params", new r((Boolean) false), "Whether to open Live streaming SDK Params", "lishuo.oo", "live_stream_enable_sdk_params", arrayList88);
        models.add(liveSettingModel88);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveStreamEnableSdkParamsSetting", liveSettingModel88);
        ArrayList arrayList89 = new ArrayList();
        arrayList89.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel89 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveStreamEnableUrlListSetting", ScopeValue.BROADCAST, "boolean", "live_stream_enable_url_list", new r((Boolean) false), "Whether to enable Live streaming URL List interface", "lishuo.oo", "live_stream_enable_url_list", arrayList89);
        models.add(liveSettingModel89);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveStreamEnableUrlListSetting", liveSettingModel89);
        ArrayList arrayList90 = new ArrayList();
        arrayList90.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel90 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveStreamHwRoiSetting", ScopeValue.BROADCAST, "boolean", "live_stream_hw_roi", new r((Boolean) false), " Whether to open Live streaming hard decoding ROI", "lishuo.oo", "live_stream_hw_roi", arrayList90);
        models.add(liveSettingModel90);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveStreamHwRoiSetting", liveSettingModel90);
        ArrayList arrayList91 = new ArrayList();
        arrayList91.add(new Group(new r((Number) -1), "default group", true));
        LiveSettingModel liveSettingModel91 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveStreamProfileSetting", ScopeValue.BROADCAST, "int", "live_stream_profile", new r((Number) -1), "Live streaming DeCoding Algorithm", "lishuo.oo", "live_stream_profile", arrayList91);
        models.add(liveSettingModel91);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveStreamProfileSetting", liveSettingModel91);
        ArrayList arrayList92 = new ArrayList();
        arrayList92.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel92 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveStreamSizeSetting", ScopeValue.BROADCAST, "int[]", "live_stream_size", new r(""), "Live room Screen Resolution setting[width,height].Setting value uses server configuration by default", "lishuo.oo", "live_stream_size", arrayList92);
        models.add(liveSettingModel92);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveStreamSizeSetting", liveSettingModel92);
        ArrayList arrayList93 = new ArrayList();
        arrayList93.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel93 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveStreamSwRoiSetting", ScopeValue.BROADCAST, "boolean", "live_stream_sw_roi", new r((Boolean) false), "Whether to open Live streaming soft decoding ROI", "lishuo.oo", "live_stream_sw_roi", arrayList93);
        models.add(liveSettingModel93);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveStreamSwRoiSetting", liveSettingModel93);
        ArrayList arrayList94 = new ArrayList();
        arrayList94.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel94 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveSubscribeAnchorFaqGBSetting", ScopeValue.BROADCAST, "java.lang.String", "subscription_anchor_faq_for_gb", new r(""), "live subscription anchor's faq url for gb", "huangjian.jann", "subscription_anchor_faq_for_gb", arrayList94);
        models.add(liveSettingModel94);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveSubscribeAnchorFaqGBSetting", liveSettingModel94);
        ArrayList arrayList95 = new ArrayList();
        arrayList95.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel95 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveSubscribeAnchorFaqNonGBSetting", ScopeValue.BROADCAST, "java.lang.String", "subscription_anchor_faq_for_non_gb", new r(""), "live subscription anchor's faq page url not for gb", "huangjian.jann", "subscription_anchor_faq_for_non_gb", arrayList95);
        models.add(liveSettingModel95);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveSubscribeAnchorFaqNonGBSetting", liveSettingModel95);
        ArrayList arrayList96 = new ArrayList();
        arrayList96.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel96 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveUseEffectAlgorithmAbSetting", ScopeValue.BROADCAST, "int", "live_use_effect_algorithm_ab", new r((Number) 0), "The ab test of using Effect algorithm during live. 0:do not use Effect algorithm, 1:use Effect algorithm", "lishuo.oo", "live_use_effect_algorithm_ab", arrayList96);
        models.add(liveSettingModel96);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveUseEffectAlgorithmAbSetting", liveSettingModel96);
        ArrayList arrayList97 = new ArrayList();
        arrayList97.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel97 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.LiveUseNewAudioCodecSetting", ScopeValue.BROADCAST, "int", "live_use_new_audio_codec", new r((Number) 0), "Whether to use high profile for streaming audio，0:unuse，1:use", "lishuo.oo", "live_use_new_audio_codec", arrayList97);
        models.add(liveSettingModel97);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.LiveUseNewAudioCodecSetting", liveSettingModel97);
        ArrayList arrayList98 = new ArrayList();
        arrayList98.add(new Group(new r((Number) 1), "enable group", false));
        arrayList98.add(new Group(new r((Number) 0), "disable group", false));
        arrayList98.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel98 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.PushStreamSupportDnsSetting", ScopeValue.BROADCAST, "int", "live_sdk_enable_pushstream_dns_opt", new r((Number) 0), "push stream support dns or not", "lishuo.oo", "live_sdk_enable_pushstream_dns_opt", arrayList98);
        models.add(liveSettingModel98);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.PushStreamSupportDnsSetting", liveSettingModel98);
        ArrayList arrayList99 = new ArrayList();
        arrayList99.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel99 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.RemoveOnlineFollowersSetting", ScopeValue.BROADCAST, "int", "live_remove_online_followers", new r((Number) 0), "Whether show or dismiss online followers on brocast preview page", "zhutianye", "live_remove_online_followers", arrayList99);
        models.add(liveSettingModel99);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.RemoveOnlineFollowersSetting", liveSettingModel99);
        ArrayList arrayList100 = new ArrayList();
        arrayList100.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel100 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.ShowAnchorLevelSetting", ScopeValue.BROADCAST, "int", "show_anchor_level", new r((Number) 0), "Wheter to show anchor's level", "lishuo.oo", "show_anchor_level", arrayList100);
        models.add(liveSettingModel100);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.ShowAnchorLevelSetting", liveSettingModel100);
    }

    private static void findSettingsMethod_2() {
        ArrayList arrayList = new ArrayList();
        arrayList.add(new Group(new r((Number) 5), "default group", true));
        LiveSettingModel liveSettingModel = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.StartLiveShareTimeoutSetting", ScopeValue.BROADCAST, "int", "start_live_share_timeout", new r((Number) 5), "share timeout of start live", "lishuo.oo", "start_live_share_timeout", arrayList);
        models.add(liveSettingModel);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.StartLiveShareTimeoutSetting", liveSettingModel);
        ArrayList arrayList2 = new ArrayList();
        arrayList2.add(new Group(new r((Number) 1), "default group", true));
        LiveSettingModel liveSettingModel2 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.StartLiveStyleV2Setting", ScopeValue.BROADCAST, "int", "start_live_style_v2", new r((Number) 1), "Broadcasting page style. 0:old style, 1:new style", "lishuo.oo", "start_live_style_v2", arrayList2);
        models.add(liveSettingModel2);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.StartLiveStyleV2Setting", liveSettingModel2);
        ArrayList arrayList3 = new ArrayList();
        arrayList3.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel3 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.StreamDefinitionLevelSetting", ScopeValue.BROADCAST, "int", "stream_definition_level", new r((Number) 0), "0:online 1:normal 2:HD", "lishuo.oo", "stream_definition_level", arrayList3);
        models.add(liveSettingModel3);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.StreamDefinitionLevelSetting", liveSettingModel3);
        ArrayList arrayList4 = new ArrayList();
        arrayList4.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel4 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.StreamHardwareEncodeSetting", ScopeValue.BROADCAST, "int", "stream_hardware_encode", new r((Number) 0), "stream use hardware encode 0:online 1:close 2:open", "lishuo.oo", "stream_hardware_encode", arrayList4);
        models.add(liveSettingModel4);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.StreamHardwareEncodeSetting", liveSettingModel4);
        ArrayList arrayList5 = new ArrayList();
        arrayList5.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel5 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.UseNewStyleOpenLiveSetting", ScopeValue.BROADCAST, "int", "use_new_style_open_live", new r((Number) 0), "Broadcasting page style", "lishuo.oo", "use_new_style_open_live", arrayList5);
        models.add(liveSettingModel5);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.UseNewStyleOpenLiveSetting", liveSettingModel5);
        ArrayList arrayList6 = new ArrayList();
        arrayList6.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel6 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.broadcast.VBoostEnableSetting", ScopeValue.BROADCAST, "boolean", "live_vboost_enable", new r((Boolean) false), "", "liukan.kk", "live_vboost_enable", arrayList6);
        models.add(liveSettingModel6);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.broadcast.VBoostEnableSetting", liveSettingModel6);
        ArrayList arrayList7 = new ArrayList();
        arrayList7.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel7 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.banner.InteractEnsureLazyLoadBannerWebviewSetting", ScopeValue.BANNER, "boolean", "interact_ensure_lazy_load_banner_webview", new r((Boolean) false), "lazy load webview", "laiyangpei", "interact_ensure_lazy_load_banner_webview", arrayList7);
        models.add(liveSettingModel7);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.banner.InteractEnsureLazyLoadBannerWebviewSetting", liveSettingModel7);
        ArrayList arrayList8 = new ArrayList();
        arrayList8.add(new Group(new r((Number) 1), "default group", true));
        LiveSettingModel liveSettingModel8 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.banner.LiveUseBannerAnimationSetting", ScopeValue.BANNER, "int", "live_use_banner_animation", new r((Number) 1), "Show banner animation or not in live room.", "wugelin", "live_use_banner_animation", arrayList8);
        models.add(liveSettingModel8);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.banner.LiveUseBannerAnimationSetting", liveSettingModel8);
        ArrayList arrayList9 = new ArrayList();
        arrayList9.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel9 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.decoration.DefaultDonationStickerPositionSetting", ScopeValue.DECORATION, "com.bytedance.android.livesdk.live.model.DefaultDonationStickerPosition", "default_donation_sticker_position", new r(""), "default donation sticker position", "chenwenjie.19931007", "default_donation_sticker_position", arrayList9);
        models.add(liveSettingModel9);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.decoration.DefaultDonationStickerPositionSetting", liveSettingModel9);
        ArrayList arrayList10 = new ArrayList();
        arrayList10.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel10 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.decoration.DonationH5UrlSetting", ScopeValue.DECORATION, "java.lang.String", "donation_h5_url", new r(""), "donation h5 url", "chenwenjie.19931007", "donation_h5_url", arrayList10);
        models.add(liveSettingModel10);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.decoration.DonationH5UrlSetting", liveSettingModel10);
        ArrayList arrayList11 = new ArrayList();
        arrayList11.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel11 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.decoration.StickerAnchorEnableSetting", ScopeValue.DECORATION, "int", "live_sticker_anchor_enable", new r((Number) 0), "sticker_anchor", "yanpeng.p", "sticker_anchor", arrayList11);
        models.add(liveSettingModel11);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.decoration.StickerAnchorEnableSetting", liveSettingModel11);
        ArrayList arrayList12 = new ArrayList();
        arrayList12.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel12 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.decoration.StickerAudienceEnableSetting", ScopeValue.DECORATION, "int", "live_sticker_audience_enable", new r((Number) 0), "sticker_audience", "yanpeng.p", "sticker_audience", arrayList12);
        models.add(liveSettingModel12);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.decoration.StickerAudienceEnableSetting", liveSettingModel12);
        ArrayList arrayList13 = new ArrayList();
        arrayList13.add(new Group(new r((Number) 1), "new panel", false));
        arrayList13.add(new Group(new r((Number) 0), "old panel", false));
        arrayList13.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel13 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.effect.LiveNewEffectPanelSetting", ScopeValue.BROADCAST, "int", "live_anchor_new_beauty_framework_enable", new r((Number) 0), "The ab test of whether use new effect panel", "lishuo.oo", "live_anchor_new_beauty_framework_enable", arrayList13);
        models.add(liveSettingModel13);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.effect.LiveNewEffectPanelSetting", liveSettingModel13);
        ArrayList arrayList14 = new ArrayList();
        arrayList14.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel14 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.comment.ChatNeedBindPhoneSetting", ScopeValue.COMMENT, "boolean", "chat_need_bind_phone", new r((Boolean) false), "Is it necessary to bind a mobile phone number to send a comment", "liuxiangdong.richard", "chat_need_bind_phone", arrayList14);
        models.add(liveSettingModel14);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.comment.ChatNeedBindPhoneSetting", liveSettingModel14);
        ArrayList arrayList15 = new ArrayList();
        arrayList15.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel15 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.comment.EnableLiveKeyboardWithHeightSetting", ScopeValue.COMMENT, "boolean", "enable_live_keyboard_with_height", new r((Boolean) false), "select KeyBoardObservableByScreenHeight or KeyBoardObservable", "laiyangpei", "enable_live_keyboard_with_height", arrayList15);
        models.add(liveSettingModel15);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.comment.EnableLiveKeyboardWithHeightSetting", liveSettingModel15);
        ArrayList arrayList16 = new ArrayList();
        arrayList16.add(new Group(new r((Number) 4), "default group", true));
        LiveSettingModel liveSettingModel16 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.comment.LiveCommentEmoteInputMaxCount", ScopeValue.COMMENT, "int", "live_sub_emote_limit", new r((Number) 4), "The max input count of emote.", "liuxiangdong.richard", "live_sub_emote_limit", arrayList16);
        models.add(liveSettingModel16);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.comment.LiveCommentEmoteInputMaxCount", liveSettingModel16);
        ArrayList arrayList17 = new ArrayList();
        arrayList17.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel17 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.comment.LiveCommentInputDialogDismissFixSetting", ScopeValue.COMMENT, "com.bytedance.android.livesdk.livesetting.comment.InputDialogFixSettingModel", "live_comment_input_dialog_dismiss_fix", new r(""), "live_comment_input_dialog_dismiss_fix", "sunshuo.man", "live_comment_input_dialog_dismiss_fix", arrayList17);
        models.add(liveSettingModel17);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.comment.LiveCommentInputDialogDismissFixSetting", liveSettingModel17);
        ArrayList arrayList18 = new ArrayList();
        arrayList18.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel18 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.comment.LiveCommentMessageBadgeV2EnableSetting", ScopeValue.COMMENT, "boolean", "live_comment_message_badge_v2_enable", new r((Boolean) true), "The switch of the badge in the comment message", "liuxiangdong.richard", "live_comment_message_badge_v2_enable", arrayList18);
        models.add(liveSettingModel18);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.comment.LiveCommentMessageBadgeV2EnableSetting", liveSettingModel18);
        ArrayList arrayList19 = new ArrayList();
        arrayList19.add(new Group(new r((Number) 600), "default group", true));
        LiveSettingModel liveSettingModel19 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.comment.LiveCommentSubOnlyAnimationInterval", ScopeValue.COMMENT, "int", "live_sub_only_animation_interval", new r((Number) 600), "The animation interval of sub-only.", "liuxiangdong.richard", "live_sub_only_animation_interval", arrayList19);
        models.add(liveSettingModel19);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.comment.LiveCommentSubOnlyAnimationInterval", liveSettingModel19);
        ArrayList arrayList20 = new ArrayList();
        arrayList20.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel20 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.comment.LiveCommunityGuidelineSetting", ScopeValue.COMMENT, "java.lang.String", "live_community_guideline", new r(""), "the url of the community guideline", "liuxiangdong.richard", "live_community_guideline", arrayList20);
        models.add(liveSettingModel20);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.comment.LiveCommunityGuidelineSetting", liveSettingModel20);
        ArrayList arrayList21 = new ArrayList();
        arrayList21.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel21 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.comment.LiveInputDialogAnimationSetting", ScopeValue.COMMENT, "int", "live_comment_input_dialog_animation", new r((Number) 0), "Whether LiveEmojiInputDialogFragment plays animation when show or not", "sunshuo.man", "live_comment_input_dialog_animation", arrayList21);
        models.add(liveSettingModel21);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.comment.LiveInputDialogAnimationSetting", liveSettingModel21);
        ArrayList arrayList22 = new ArrayList();
        arrayList22.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel22 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.ChijiIsOpenSetting", ScopeValue.OTHER, "boolean", "chiji_is_open", new r((Boolean) false), "PUBG", "liukan.kk", "chiji_is_open", arrayList22);
        models.add(liveSettingModel22);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.ChijiIsOpenSetting", liveSettingModel22);
        ArrayList arrayList23 = new ArrayList();
        arrayList23.add(new Group(new r((Number) 1), "default group", true));
        LiveSettingModel liveSettingModel23 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.DecoTextModifyFrequencySetting", ScopeValue.OTHER, "int", "deco_text_modify_frequency", new r((Number) 1), "deco_text_modify_frequency", "liukan.kk", "deco_text_modify_frequency", arrayList23);
        models.add(liveSettingModel23);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.DecoTextModifyFrequencySetting", liveSettingModel23);
        ArrayList arrayList24 = new ArrayList();
        arrayList24.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel24 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.DeeplinkWebcastWebviewAllowedListSetting", ScopeValue.OTHER, "java.lang.String[]", "deeplink_webcast_webview_allowed_list", new r(""), "Broadcast Page Gift Can Config", "laiyangpei", "deeplink_webcast_webview_allowed_list", arrayList24);
        models.add(liveSettingModel24);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.DeeplinkWebcastWebviewAllowedListSetting", liveSettingModel24);
        ArrayList arrayList25 = new ArrayList();
        arrayList25.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel25 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.DeeplinkWebcastWebviewEnableSetting", ScopeValue.OTHER, "boolean", "deeplink_webcast_webview_enable", new r((Boolean) true), "Broadcast Page Gift Local or Default", "laiyangpei", "deeplink_webcast_webview_enable", arrayList25);
        models.add(liveSettingModel25);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.DeeplinkWebcastWebviewEnableSetting", liveSettingModel25);
        ArrayList arrayList26 = new ArrayList();
        arrayList26.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel26 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.EnableFlowCardTipNewStyleSetting", ScopeValue.OTHER, "boolean", "enable_flow_card_tip_new_style", new r((Boolean) false), "Data Flow Free Card Style", "liukan.kk", "enable_flow_card_tip_new_style", arrayList26);
        models.add(liveSettingModel26);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.EnableFlowCardTipNewStyleSetting", liveSettingModel26);
        ArrayList arrayList27 = new ArrayList();
        arrayList27.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel27 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.EnableImageDefault565Setting", ScopeValue.OTHER, "boolean", "enable_image_default_565", new r((Boolean) true), "turn on 565 by default", "liukan.kk", "enable_image_default_565", arrayList27);
        models.add(liveSettingModel27);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.EnableImageDefault565Setting", liveSettingModel27);
        ArrayList arrayList28 = new ArrayList();
        arrayList28.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel28 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.EnableParsePushSlimroomSetting", ScopeValue.OTHER, "boolean", "enable_parse_push_slimroom", new r((Boolean) false), "whether enable push parse liveslim", "wangyan.shang", "enable_parse_push_slimroom", arrayList28);
        models.add(liveSettingModel28);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.EnableParsePushSlimroomSetting", liveSettingModel28);
        ArrayList arrayList29 = new ArrayList();
        arrayList29.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel29 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.EnableSlideFinishSetting", ScopeValue.OTHER, "boolean", "enable_slide_finish", new r((Boolean) false), "Swipe right to exit page", "liukan.kk", "enable_slide_finish", arrayList29);
        models.add(liveSettingModel29);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.EnableSlideFinishSetting", liveSettingModel29);
        ArrayList arrayList30 = new ArrayList();
        arrayList30.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel30 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.EnableToastNetworkChangedSetting", ScopeValue.OTHER, "boolean", "enable_toast_network_changed", new r((Boolean) false), "The notice for network status changing", "liukan.kk", "enable_toast_network_changed", arrayList30);
        models.add(liveSettingModel30);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.EnableToastNetworkChangedSetting", liveSettingModel30);
        ArrayList arrayList31 = new ArrayList();
        arrayList31.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel31 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.FakeRegionsSetting", ScopeValue.OTHER, "int", "fake_regions", new r((Number) 0), "local_test fake Country", "liukan.kk", "fake_regions", arrayList31);
        models.add(liveSettingModel31);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.FakeRegionsSetting", liveSettingModel31);
        ArrayList arrayList32 = new ArrayList();
        arrayList32.add(new Group(new r((Number) 3), "default group", true));
        LiveSettingModel liveSettingModel32 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.GiftRepeatTimeoutSetting", ScopeValue.OTHER, "int", "gift_repeat_timeout", new r((Number) 3), "gift_repeat_timeout", "liukan.kk", "gift_repeat_timeout", arrayList32);
        models.add(liveSettingModel32);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.GiftRepeatTimeoutSetting", liveSettingModel32);
        ArrayList arrayList33 = new ArrayList();
        arrayList33.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel33 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.HasPropBundleSetting", ScopeValue.OTHER, "boolean", "has_prop_bundle", new r((Boolean) false), "Whether to request package purchase's api", "liukan.kk", "has_prop_bundle", arrayList33);
        models.add(liveSettingModel33);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.HasPropBundleSetting", liveSettingModel33);
        ArrayList arrayList34 = new ArrayList();
        arrayList34.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel34 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveAnchorInfoAbtestSetting", ScopeValue.OTHER, "int", "live_anchor_info_abtest", new r((Number) 0), "Anchor Personal Info Widget", "chenwenjie.19931007", "live_anchor_info_abtest", arrayList34);
        models.add(liveSettingModel34);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveAnchorInfoAbtestSetting", liveSettingModel34);
        ArrayList arrayList35 = new ArrayList();
        arrayList35.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel35 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveAutoDotEnableCountSetting", ScopeValue.OTHER, "boolean", "live_auto_dot_enable_count", new r((Boolean) true), "Enable auto event tracking or not, enabled by default. Can be disabled in case of any problems.", "liukan.kk", "live_auto_dot_enable_count", arrayList35);
        models.add(liveSettingModel35);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveAutoDotEnableCountSetting", liveSettingModel35);
        ArrayList arrayList36 = new ArrayList();
        arrayList36.add(new Group(new r((Number) 50), "default group", true));
        LiveSettingModel liveSettingModel36 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveAutoDotUploadCountSetting", ScopeValue.OTHER, "int", "live_auto_dot_upload_count", new r((Number) 50), "The aggregated number of auto event tracking, aggregate 50 by default, then upload directly.", "liukan.kk", "live_auto_dot_upload_count", arrayList36);
        models.add(liveSettingModel36);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveAutoDotUploadCountSetting", liveSettingModel36);
        ArrayList arrayList37 = new ArrayList();
        arrayList37.add(new Group(new r((Number) 1), "default group", true));
        LiveSettingModel liveSettingModel37 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveCameraTypeSetting", ScopeValue.OTHER, "int", "live_camera_type", new r((Number) 1), "live_camera_type", "liukan.kk", "live_camera_type", arrayList37);
        models.add(liveSettingModel37);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveCameraTypeSetting", liveSettingModel37);
        ArrayList arrayList38 = new ArrayList();
        arrayList38.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel38 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveChainMonitorExcludeErrorCodesSetting", ScopeValue.OTHER, "java.util.List<java.lang.Integer>", "live_chain_monitor_exclude_error_codes", new r(""), "enter room monitor exclude  error codes", "liukan.kk", "live_chain_monitor_exclude_error_codes", arrayList38);
        models.add(liveSettingModel38);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveChainMonitorExcludeErrorCodesSetting", liveSettingModel38);
        ArrayList arrayList39 = new ArrayList();
        arrayList39.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel39 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveCommerceBannerSetting", ScopeValue.OTHER, "com.bytedance.android.livesdk.commerce.LiveGoodsBanner", "live_commerce_banner", new r(""), "live_commerce_banner", "liukan.kk", "live_commerce_banner", arrayList39);
        models.add(liveSettingModel39);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveCommerceBannerSetting", liveSettingModel39);
        ArrayList arrayList40 = new ArrayList();
        arrayList40.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel40 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveDrawerVersion", ScopeValue.FEED, "boolean", "live_drawer_version", new r((Boolean) false), "live drawer version", "zengwei.godv", "live_drawer_version", arrayList40);
        models.add(liveSettingModel40);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveDrawerVersion", liveSettingModel40);
        ArrayList arrayList41 = new ArrayList();
        arrayList41.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel41 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveEffectNewEngineConfigSetting", ScopeValue.OTHER, "java.lang.String", "live_effect_new_engine_config", new r(""), "The configuration of effect new engine.", "laiyangpei", "live_effect_new_engine_config", arrayList41);
        models.add(liveSettingModel41);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveEffectNewEngineConfigSetting", liveSettingModel41);
        ArrayList arrayList42 = new ArrayList();
        arrayList42.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel42 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveEnableEffectNewEngineSetting", ScopeValue.OTHER, "boolean", "live_enable_effect_new_engine", new r((Boolean) false), "Enable effect new engine.", "laiyangpei", "live_enable_effect_new_engine", arrayList42);
        models.add(liveSettingModel42);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveEnableEffectNewEngineSetting", liveSettingModel42);
        ArrayList arrayList43 = new ArrayList();
        arrayList43.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel43 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveEnableGuardSetting", ScopeValue.OTHER, "int", "live_enable_guard", new r((Number) 0), "Whether to open the guard entrance", "liukan.kk", "live_enable_guard", arrayList43);
        models.add(liveSettingModel43);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveEnableGuardSetting", liveSettingModel43);
        ArrayList arrayList44 = new ArrayList();
        arrayList44.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel44 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveEnableNewPanelBannerSetting", ScopeValue.OTHER, "boolean", "live_enable_new_panel_banner", new r((Boolean) false), "New style of xigua live room bottom", "liukan.kk", "live_enable_new_panel_banner", arrayList44);
        models.add(liveSettingModel44);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveEnableNewPanelBannerSetting", liveSettingModel44);
        ArrayList arrayList45 = new ArrayList();
        arrayList45.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel45 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveEnablePopupQueueSettings", ScopeValue.OTHER, "boolean", "live_enable_popup_queue", new r((Boolean) true), "Enable popup queue", "liukan.kk", "live_enable_popup_queue", arrayList45);
        models.add(liveSettingModel45);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveEnablePopupQueueSettings", liveSettingModel45);
        ArrayList arrayList46 = new ArrayList();
        arrayList46.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel46 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveEventDetailSetting", ScopeValue.OTHER, "java.lang.String", "live_event_detail", new r(""), "live event detail page url", "xunan.mt", "live_event_detail", arrayList46);
        models.add(liveSettingModel46);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveEventDetailSetting", liveSettingModel46);
        ArrayList arrayList47 = new ArrayList();
        arrayList47.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel47 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveFakeRegionChannelSettings", ScopeValue.OTHER, "java.lang.String[]", "live_fake_region_channel", new r(""), "Report channel of fake region", "liukan.kk", "live_fake_region_channel", arrayList47);
        models.add(liveSettingModel47);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveFakeRegionChannelSettings", liveSettingModel47);
        ArrayList arrayList48 = new ArrayList();
        arrayList48.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel48 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveFansGroupUrlSetting", ScopeValue.OTHER, "java.lang.String", "live_fans_group_url", new r(""), "The url of new style live fans group", "liukan.kk", "live_fans_group_url", arrayList48);
        models.add(liveSettingModel48);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveFansGroupUrlSetting", liveSettingModel48);
        ArrayList arrayList49 = new ArrayList();
        arrayList49.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel49 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveFeedPreloadSetting", ScopeValue.OTHER, "com.bytedance.android.livesdk.model.FeedPreloadConfig", "live_feed_preload", new r(""), "feed load more config", "liukan.kk", "live_feed_preload", arrayList49);
        models.add(liveSettingModel49);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveFeedPreloadSetting", liveSettingModel49);
        ArrayList arrayList50 = new ArrayList();
        arrayList50.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel50 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveGuideShowTimeSetting", ScopeValue.OTHER, "int", "live_guide_show_time", new r((Number) 0), "The showing time of the up-down slide lead", "liukan.kk", "live_guide_show_time", arrayList50);
        models.add(liveSettingModel50);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveGuideShowTimeSetting", liveSettingModel50);
        ArrayList arrayList51 = new ArrayList();
        arrayList51.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel51 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveJsbAllowedListSetting", ScopeValue.OTHER, "java.lang.String[]", "live_jsb_allowed_list", new r(""), "", "yanpeng.p", "live_jsb_allowed_list", arrayList51);
        models.add(liveSettingModel51);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveJsbAllowedListSetting", liveSettingModel51);
        ArrayList arrayList52 = new ArrayList();
        arrayList52.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel52 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveLocalizationEnableSettings", ScopeValue.OTHER, "boolean", "live_localization_enable", new r((Boolean) false), "Live broadcast logo new style AB switch", "liukan.kk", "live_localization_enable", arrayList52);
        models.add(liveSettingModel52);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveLocalizationEnableSettings", liveSettingModel52);
        ArrayList arrayList53 = new ArrayList();
        arrayList53.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel53 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveMtCjPayMusicallyRegionHostSetting", ScopeValue.OTHER, "java.lang.String", "live_mt_cj_pay_musically_region_host", new r(""), "set cj host in M region", "liukan.kk", "live_mt_cj_pay_musically_region_host", arrayList53);
        models.add(liveSettingModel53);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveMtCjPayMusicallyRegionHostSetting", liveSettingModel53);
        ArrayList arrayList54 = new ArrayList();
        arrayList54.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel54 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveMtCjPayTiktokRegionHostSetting", ScopeValue.OTHER, "java.lang.String", "live_mt_cj_pay_tiktok_region_host", new r(""), "set cj host in T region", "liukan.kk", "live_mt_cj_pay_tiktok_region_host", arrayList54);
        models.add(liveSettingModel54);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveMtCjPayTiktokRegionHostSetting", liveSettingModel54);
        ArrayList arrayList55 = new ArrayList();
        arrayList55.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel55 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveMtEnableCjBoeEnvHostUrlSetting", ScopeValue.OTHER, "java.lang.String", "live_mt_enable_cj_boe_env_host_url", new r(""), "mt cjsdk host url on boe environment", "liukan.kk", "live_mt_enable_cj_boe_env_host_url", arrayList55);
        models.add(liveSettingModel55);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveMtEnableCjBoeEnvHostUrlSetting", liveSettingModel55);
        ArrayList arrayList56 = new ArrayList();
        arrayList56.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel56 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveMtEnableCjBoeEnvSetting", ScopeValue.OTHER, "boolean", "live_mt_enable_cj_boe_env", new r((Boolean) false), "Does mt support setting up cjsdk boe environment", "liukan.kk", "live_mt_enable_cj_boe_env", arrayList56);
        models.add(liveSettingModel56);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveMtEnableCjBoeEnvSetting", liveSettingModel56);
        ArrayList arrayList57 = new ArrayList();
        arrayList57.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel57 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveMtTikcastSwitcherParamSetting", ScopeValue.OTHER, "int", "live_mt_tikcast_switcher_param", new r((Number) 0), "this is request param  for server tc. 1 is open", "laiyangpei", "live_mt_tikcast_switcher_param", arrayList57);
        models.add(liveSettingModel57);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveMtTikcastSwitcherParamSetting", liveSettingModel57);
        ArrayList arrayList58 = new ArrayList();
        arrayList58.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel58 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveNavBlackSetting", ScopeValue.OTHER, "boolean", "live_nav_black", new r((Boolean) false), "live navigation color black", "zengwei.godv", "live_nav_black", arrayList58);
        models.add(liveSettingModel58);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveNavBlackSetting", liveSettingModel58);
        ArrayList arrayList59 = new ArrayList();
        arrayList59.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel59 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveNewCloseCardTypeSetting", ScopeValue.OTHER, "boolean", "live_new_close_card_type", new r((Boolean) false), "live card end style", "zengwei.godv", "live_new_close_card_type", arrayList59);
        models.add(liveSettingModel59);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveNewCloseCardTypeSetting", liveSettingModel59);
        ArrayList arrayList60 = new ArrayList();
        arrayList60.add(new Group(new r((Number) 1), "default group", true));
        LiveSettingModel liveSettingModel60 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveOptimizeStyleV1Setting", ScopeValue.OTHER, "int", "live_optimize_style_v1", new r((Number) 1), "Live new style optimize version 1", "liukan.kk", "live_optimize_style_v1", arrayList60);
        models.add(liveSettingModel60);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveOptimizeStyleV1Setting", liveSettingModel60);
        ArrayList arrayList61 = new ArrayList();
        arrayList61.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel61 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LivePipoHostSetting", ScopeValue.OTHER, "java.lang.String", "live_pipo_host", new r(""), "pipo host", "zengwei.godv", "live_pipo_host", arrayList61);
        models.add(liveSettingModel61);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LivePipoHostSetting", liveSettingModel61);
        ArrayList arrayList62 = new ArrayList();
        arrayList62.add(new Group(new r(LivePipoMonitorHostSetting.DEFAULT), "default group", true));
        LiveSettingModel liveSettingModel62 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LivePipoMonitorHostSetting", ScopeValue.OTHER, "java.lang.String", "live_pipo_monitor_host", new r(LivePipoMonitorHostSetting.DEFAULT), "pipo monitor host", "zengwei.godv", "live_pipo_monitor_host", arrayList62);
        models.add(liveSettingModel62);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LivePipoMonitorHostSetting", liveSettingModel62);
        ArrayList arrayList63 = new ArrayList();
        arrayList63.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel63 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LivePopularityCardUrlSetting", ScopeValue.OTHER, "java.lang.String", "live_popularity_card_url", new r(""), "Popular card entrance url", "liukan.kk", "live_popularity_card_url", arrayList63);
        models.add(liveSettingModel63);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LivePopularityCardUrlSetting", liveSettingModel63);
        ArrayList arrayList64 = new ArrayList();
        arrayList64.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel64 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveRemoveClosedLiveCardSetting", ScopeValue.OTHER, "boolean", "live_remove_closed_live_card", new r((Boolean) false), "enable feed live pre refresh", "zengwei.godv", "live_remove_closed_live_card", arrayList64);
        models.add(liveSettingModel64);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveRemoveClosedLiveCardSetting", liveSettingModel64);
        ArrayList arrayList65 = new ArrayList();
        arrayList65.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel65 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveScreenRecordEnableSetting", ScopeValue.OTHER, "boolean", "live_screen_record_enable", new r((Boolean) true), "The monitor of the screen recording.", "liukan.kk", "live_screen_record_enable", arrayList65);
        models.add(liveSettingModel65);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveScreenRecordEnableSetting", liveSettingModel65);
        ArrayList arrayList66 = new ArrayList();
        arrayList66.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel66 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveSdkEnableUseLiveThreadPoolSetting", ScopeValue.OTHER, "int", "live_sdk_enable_use_live_threadpool", new r((Number) 0), "thread pool ", "laiyangpei", "live_sdk_enable_use_live_threadpool", arrayList66);
        models.add(liveSettingModel66);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveSdkEnableUseLiveThreadPoolSetting", liveSettingModel66);
        ArrayList arrayList67 = new ArrayList();
        arrayList67.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel67 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveSdkNobleIntroduceShowAndroidSetting", ScopeValue.OTHER, "boolean", "live_sdk_noble_introduce_show_android", new r((Boolean) false), "Noble System", "liukan.kk", "live_sdk_noble_introduce_show_android", arrayList67);
        models.add(liveSettingModel67);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveSdkNobleIntroduceShowAndroidSetting", liveSettingModel67);
        ArrayList arrayList68 = new ArrayList();
        Double valueOf = Double.valueOf(0.01d);
        arrayList68.add(new Group(new r((Number) valueOf), "default group", true));
        LiveSettingModel liveSettingModel68 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveSdkWarningTagDelayEndDurationSetting", ScopeValue.OTHER, "double", "live_sdk_warning_tag_delay_end_duration", new r((Number) valueOf), "live sdk warning_tag delay end duration", "shizhongyu.001", "live_sdk_warning_tag_delay_end_duration", arrayList68);
        models.add(liveSettingModel68);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveSdkWarningTagDelayEndDurationSetting", liveSettingModel68);
        ArrayList arrayList69 = new ArrayList();
        Double valueOf2 = Double.valueOf(4.0d);
        arrayList69.add(new Group(new r((Number) valueOf2), "default group", true));
        LiveSettingModel liveSettingModel69 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveSdkWarningTagDelayStartDurationSetting", ScopeValue.OTHER, "double", "live_sdk_warning_tag_delay_start_duration", new r((Number) valueOf2), "live sdk warning_tag delay start duration", "shizhongyu.001", "live_sdk_warning_tag_delay_start_duration", arrayList69);
        models.add(liveSettingModel69);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveSdkWarningTagDelayStartDurationSetting", liveSettingModel69);
        ArrayList arrayList70 = new ArrayList();
        arrayList70.add(new Group(new r((Number) 500L), "default group", true));
        LiveSettingModel liveSettingModel70 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveSettingsWriteDelayTimeSetting", ScopeValue.OTHER, "long", "live_settings_write_delay_time", new r((Number) 500L), "delay to write settings into sp", "wangyan.shang", "live_settings_write_delay_time", arrayList70);
        models.add(liveSettingModel70);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveSettingsWriteDelayTimeSetting", liveSettingModel70);
        ArrayList arrayList71 = new ArrayList();
        arrayList71.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel71 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveShowGameQuizSetting", ScopeValue.OTHER, "boolean", "live_show_game_quiz", new r((Boolean) false), "Whether to display the game quiz button", "liukan.kk", "live_show_game_quiz", arrayList71);
        models.add(liveSettingModel71);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveShowGameQuizSetting", liveSettingModel71);
        ArrayList arrayList72 = new ArrayList();
        arrayList72.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel72 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveSkylightFrequentlyRefreshSetting", ScopeValue.OTHER, "boolean", "live_skylight_frequently_refresh", new r((Boolean) false), "enable feed live pre refresh", "zengwei.godv", "live_skylight_frequently_refresh", arrayList72);
        models.add(liveSettingModel72);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveSkylightFrequentlyRefreshSetting", liveSettingModel72);
        ArrayList arrayList73 = new ArrayList();
        arrayList73.add(new Group(new r((Number) 300), "default group", true));
        LiveSettingModel liveSettingModel73 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveSquareInboxRefreshIntervalSetting", ScopeValue.FEED, "int", "live_square_inbox_refresh_interval", new r((Number) 300), "enable feed live pre refresh interval", "zengwei.godv", "live_square_inbox_refresh_interval", arrayList73);
        models.add(liveSettingModel73);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveSquareInboxRefreshIntervalSetting", liveSettingModel73);
        ArrayList arrayList74 = new ArrayList();
        arrayList74.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel74 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveSquareInboxRefreshSetting", ScopeValue.OTHER, "boolean", "live_square_inbox_refresh", new r((Boolean) false), "enable feed live pre refresh", "zengwei.godv", "live_square_inbox_refresh", arrayList74);
        models.add(liveSettingModel74);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveSquareInboxRefreshSetting", liveSettingModel74);
        ArrayList arrayList75 = new ArrayList();
        arrayList75.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel75 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveSubscribeRegionEnableSetting", ScopeValue.OTHER, "boolean", "is_subscribe_region", new r((Boolean) false), "region enable subscribe", "huangjian.jann", "is_subscribe_region", arrayList75);
        models.add(liveSettingModel75);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveSubscribeRegionEnableSetting", liveSettingModel75);
        ArrayList arrayList76 = new ArrayList();
        arrayList76.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel76 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveTestSkipCMAFBundleCheckSettings", ScopeValue.OTHER, "boolean", "live_test_skip_cmaf_bundle_check", new r((Boolean) false), "During the testing process, skip the app bundle download check of the CMAF plug-in and force a successful download", "liukan.kk", "live_test_skip_cmaf_bundle_check", arrayList76);
        models.add(liveSettingModel76);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveTestSkipCMAFBundleCheckSettings", liveSettingModel76);
        ArrayList arrayList77 = new ArrayList();
        arrayList77.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel77 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveTestSkipQuicBundleCheckSettings", ScopeValue.OTHER, "boolean", "live_test_skip_quic_bundle_check", new r((Boolean) false), "During the testing process, skip the app bundle download check of the QUIC plug-in and force return to download successfully", "liukan.kk", "live_test_skip_quic_bundle_check", arrayList77);
        models.add(liveSettingModel77);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveTestSkipQuicBundleCheckSettings", liveSettingModel77);
        ArrayList arrayList78 = new ArrayList();
        arrayList78.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel78 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveTestSkipRTSBundleCheckSettings", ScopeValue.OTHER, "boolean", "live_test_skip_rts_bundle_check", new r((Boolean) false), "During the testing process, skip the app bundle download check of the RTS plug-in and force return to download successfully", "liukan.kk", "live_test_skip_rts_bundle_check", arrayList78);
        models.add(liveSettingModel78);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveTestSkipRTSBundleCheckSettings", liveSettingModel78);
        ArrayList arrayList79 = new ArrayList();
        arrayList79.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel79 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LiveTurntableUrlSetting", ScopeValue.OTHER, "java.lang.String", "live_turntable_url", new r(""), "Gift turntable url, do not show entry if empty.", "chenwenjie.19931007", "live_turntable_url", arrayList79);
        models.add(liveSettingModel79);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LiveTurntableUrlSetting", liveSettingModel79);
        ArrayList arrayList80 = new ArrayList();
        arrayList80.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel80 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.LoginGuideConfigSetting", ScopeValue.OTHER, "com.bytedance.android.livesdk.model.LoginGuideConfig", "login_guide_config", new r(""), "", "liukan.kk", "login_guide_config", arrayList80);
        models.add(liveSettingModel80);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.LoginGuideConfigSetting", liveSettingModel80);
        ArrayList arrayList81 = new ArrayList();
        arrayList81.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel81 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.NetMonitorAllowListSettings", ScopeValue.OTHER, "java.lang.String[]", "net_monitor_allow_list", new r(""), "Allowlist of network monitor ", "zengwei.godv", "net_monitor_allow_list", arrayList81);
        models.add(liveSettingModel81);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.NetMonitorAllowListSettings", liveSettingModel81);
        ArrayList arrayList82 = new ArrayList();
        arrayList82.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel82 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.NetMonitorBlockListSettings", ScopeValue.OTHER, "java.lang.String[]", "net_monitor_block_list", new r(""), "Blocklist of network monitor ", "liukan.kk", "net_monitor_block_list", arrayList82);
        models.add(liveSettingModel82);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.NetMonitorBlockListSettings", liveSettingModel82);
        ArrayList arrayList83 = new ArrayList();
        arrayList83.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel83 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.OpenQuizForAnchorSetting", ScopeValue.OTHER, "boolean", "open_quiz_for_anchor", new r((Boolean) false), "The game quiz switch in the anchor side", "liukan.kk", "open_quiz_for_anchor", arrayList83);
        models.add(liveSettingModel83);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.OpenQuizForAnchorSetting", liveSettingModel83);
        ArrayList arrayList84 = new ArrayList();
        arrayList84.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel84 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.OpenQuizForUserSetting", ScopeValue.OTHER, "boolean", "open_quiz_for_user", new r((Boolean) false), "The game quiz switch in the audience side", "liukan.kk", "open_quiz_for_user", arrayList84);
        models.add(liveSettingModel84);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.OpenQuizForUserSetting", liveSettingModel84);
        ArrayList arrayList85 = new ArrayList();
        arrayList85.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel85 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.PayMethodsDisabledAlertSetting", ScopeValue.OTHER, "java.lang.String", "pay_methods_disabled_alert", new r(""), "pay_methods_disabled_alert", "liukan.kk", "pay_methods_disabled_alert", arrayList85);
        models.add(liveSettingModel85);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.PayMethodsDisabledAlertSetting", liveSettingModel85);
        ArrayList arrayList86 = new ArrayList();
        arrayList86.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel86 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.PayMethodsSwitchSetting", ScopeValue.OTHER, "int", "pay_methods_switch", new r((Number) 0), "pay_methods_switch", "liukan.kk", "pay_methods_switch", arrayList86);
        models.add(liveSettingModel86);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.PayMethodsSwitchSetting", liveSettingModel86);
        ArrayList arrayList87 = new ArrayList();
        arrayList87.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel87 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.PromotionCardDisabledSetting", ScopeValue.OTHER, "boolean", "promotion_card_disabled", new r((Boolean) false), "promotion_card_disabled", "liukan.kk", "promotion_card_disabled", arrayList87);
        models.add(liveSettingModel87);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.PromotionCardDisabledSetting", liveSettingModel87);
        ArrayList arrayList88 = new ArrayList();
        Integer valueOf3 = Integer.valueOf((int) LiveFeedRefreshTimeSetting.DEFAULT);
        arrayList88.add(new Group(new r((Number) valueOf3), "default group", true));
        LiveSettingModel liveSettingModel88 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.RoomFollowNoticeDurationSetting", ScopeValue.OTHER, "int", "room_follow_notice_duration", new r((Number) valueOf3), "room_follow_notice_duration", "liukan.kk", "room_follow_notice_duration", arrayList88);
        models.add(liveSettingModel88);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.RoomFollowNoticeDurationSetting", liveSettingModel88);
        ArrayList arrayList89 = new ArrayList();
        arrayList89.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel89 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.ShowFansclubRenewalSetting", ScopeValue.OTHER, "boolean", "show_fansclub_renewal", new r((Boolean) false), "Fans Club Automatic Lit Up", "chenwenjie.19931007", "show_fansclub_renewal", arrayList89);
        models.add(liveSettingModel89);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.ShowFansclubRenewalSetting", liveSettingModel89);
        ArrayList arrayList90 = new ArrayList();
        arrayList90.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel90 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.TTliveGeckoFileInfoReportEnableSetting", ScopeValue.OTHER, "boolean", "ttlive_gecko_file_info_report_enable", new r((Boolean) true), "ttlive gecko file info report enable", "shizhongyu.001", "ttlive_gecko_file_info_report_enable", arrayList90);
        models.add(liveSettingModel90);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.TTliveGeckoFileInfoReportEnableSetting", liveSettingModel90);
        ArrayList arrayList91 = new ArrayList();
        arrayList91.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel91 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.TTliveGeckoLoadResourceStateSetting", ScopeValue.OTHER, "int", "ttlive_gecko_load_resource_state", new r((Number) 0), "ttlive gecko load resource state", "shizhongyu.001", "ttlive_gecko_load_resource_state", arrayList91);
        models.add(liveSettingModel91);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.TTliveGeckoLoadResourceStateSetting", liveSettingModel91);
        ArrayList arrayList92 = new ArrayList();
        arrayList92.add(new Group(new r("https://lf16-gecko-source.tiktokcdn.com/obj/byte-gurd-source-sg/10/gecko/resource"), "default group", true));
        LiveSettingModel liveSettingModel92 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.TikTokLiveGeckoBroadcastCdnPathSetting", ScopeValue.OTHER, "java.lang.String", "tiktok_live_broadcast_resource_gecko_base_url", new r("https://lf16-gecko-source.tiktokcdn.com/obj/byte-gurd-source-sg/10/gecko/resource"), "tiktok live broadcast resource gecko base url", "shizhongyu.001", "tiktok_live_broadcast_resource_gecko_base_url", arrayList92);
        models.add(liveSettingModel92);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.TikTokLiveGeckoBroadcastCdnPathSetting", liveSettingModel92);
        ArrayList arrayList93 = new ArrayList();
        arrayList93.add(new Group(new r("https://lf16-gecko-source.tiktokcdn.com/obj/byte-gurd-source-sg/10/gecko/resource"), "default group", true));
        LiveSettingModel liveSettingModel93 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.TiktokLiveBasicResourceGeckoBaseUrlSetting", ScopeValue.OTHER, "java.lang.String", "tiktok_live_basic_resource_gecko_base_url", new r("https://lf16-gecko-source.tiktokcdn.com/obj/byte-gurd-source-sg/10/gecko/resource"), "tiktok live basic resource gecko base url", "shizhongyu.001", "tiktok_live_basic_resource_gecko_base_url", arrayList93);
        models.add(liveSettingModel93);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.TiktokLiveBasicResourceGeckoBaseUrlSetting", liveSettingModel93);
        ArrayList arrayList94 = new ArrayList();
        arrayList94.add(new Group(new r("https://lf16-gecko-source.tiktokcdn.com/obj/byte-gurd-source-sg/10/gecko/resource"), "default group", true));
        LiveSettingModel liveSettingModel94 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.TiktokLiveInteractionResourceGeckoBaseUrlSetting", ScopeValue.OTHER, "java.lang.String", "tiktok_live_interaction_resource_gecko_base_url", new r("https://lf16-gecko-source.tiktokcdn.com/obj/byte-gurd-source-sg/10/gecko/resource"), "tiktok live interaction resource gecko base url", "shizhongyu.001", "tiktok_live_interaction_resource_gecko_base_url", arrayList94);
        models.add(liveSettingModel94);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.TiktokLiveInteractionResourceGeckoBaseUrlSetting", liveSettingModel94);
        ArrayList arrayList95 = new ArrayList();
        arrayList95.add(new Group(new r(TiktokLiveWatchResourceGeckoBaseUrlSetting.DEFAULT), "default group", true));
        LiveSettingModel liveSettingModel95 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.TiktokLiveWatchResourceGeckoBaseUrlSetting", ScopeValue.OTHER, "java.lang.String", "tiktok_live_watch_resource_gecko_base_url", new r(TiktokLiveWatchResourceGeckoBaseUrlSetting.DEFAULT), "tiktok live watch resource gecko base url", "shizhongyu.001", "tiktok_live_watch_resource_gecko_base_url", arrayList95);
        models.add(liveSettingModel95);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.TiktokLiveWatchResourceGeckoBaseUrlSetting", liveSettingModel95);
        ArrayList arrayList96 = new ArrayList();
        arrayList96.add(new Group(new r((Boolean) false), "control_group", true));
        arrayList96.add(new Group(new r((Boolean) true), "experimental_group", false));
        LiveSettingModel liveSettingModel96 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.ToolBarButtonWithTextExperiment", ScopeValue.WATCHLIVE, "boolean", "live_toolbar_with_title", new r((Boolean) false), "\n    The setting controls whether every tool bar button has its text.(only in portrait mode)\n    ", "lixinyang.a", "live_toolbar_with_title", arrayList96);
        models.add(liveSettingModel96);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.ToolBarButtonWithTextExperiment", liveSettingModel96);
        ArrayList arrayList97 = new ArrayList();
        arrayList97.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel97 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.other.WebcastAssetAnimIdMapSetting", ScopeValue.OTHER, "com.bytedance.android.livesdk.model.AssetIdMap", "webcast_asset_anim_id_map", new r(""), "Asset Id Collection", "liukan.kk", "webcast_asset_anim_id_map", arrayList97);
        models.add(liveSettingModel97);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.other.WebcastAssetAnimIdMapSetting", liveSettingModel97);
        ArrayList arrayList98 = new ArrayList();
        arrayList98.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel98 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.barrage.DiggParamsSetting", ScopeValue.BARRAGE, "com.bytedance.android.livesdk.chatroom.model.LikeConfig", "digg_params", new r(""), "the configuration for like feature", "liuxiangdong.richard", "digg_params", arrayList98);
        models.add(liveSettingModel98);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.barrage.DiggParamsSetting", liveSettingModel98);
        ArrayList arrayList99 = new ArrayList();
        Integer valueOf4 = Integer.valueOf((int) BackRefreshTimeoutSetting.DEFAULT);
        arrayList99.add(new Group(new r((Number) valueOf4), "default group", true));
        LiveSettingModel liveSettingModel99 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.feed.BackRefreshTimeoutSetting", ScopeValue.FEED, "int", "back_refresh_timeout", new r((Number) valueOf4), "", "wangyan.shang", "back_refresh_timeout", arrayList99);
        models.add(liveSettingModel99);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.feed.BackRefreshTimeoutSetting", liveSettingModel99);
        ArrayList arrayList100 = new ArrayList();
        arrayList100.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel100 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.feed.CloseLiveSwitchSquareParamSetting", ScopeValue.FEED, "com.bytedance.android.livesdk.model.SwitchLiveSquareParam", "close_live_switch_square_param", new r(""), "The params for swifting to Live feed.", "wangyan.shang", "close_live_switch_square_param", arrayList100);
        models.add(liveSettingModel100);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.feed.CloseLiveSwitchSquareParamSetting", liveSettingModel100);
    }

    private static void findSettingsMethod_3() {
        ArrayList arrayList = new ArrayList();
        Float valueOf = Float.valueOf(7.0f);
        arrayList.add(new Group(new r((Number) valueOf), "default group", true));
        LiveSettingModel liveSettingModel = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.feed.DefaultDurationShowPreviewTipSetting", ScopeValue.FEED, "float", "default_duration_show_preview_tip", new r((Number) valueOf), "Interval duration of mobile network broadcast prompt (unit: days)", "wangyan.shang", "default_duration_show_preview_tip", arrayList);
        models.add(liveSettingModel);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.feed.DefaultDurationShowPreviewTipSetting", liveSettingModel);
        ArrayList arrayList2 = new ArrayList();
        arrayList2.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel2 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.feed.EnableFeedLiveCardPrePullStreamSetting", ScopeValue.FEED, "boolean", "enable_feed_live_card_pre_pull_stream", new r((Boolean) false), "live card preload stream", "wangyan.shang", "enable_feed_live_card_pre_pull_stream", arrayList2);
        models.add(liveSettingModel2);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.feed.EnableFeedLiveCardPrePullStreamSetting", liveSettingModel2);
        ArrayList arrayList3 = new ArrayList();
        arrayList3.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel3 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.feed.EnableLiveFeedDebugMenuSetting", ScopeValue.FEED, "boolean", "enable_live_feed_debug_menu", new r((Boolean) false), "open live feed debugable menu", "wangyan.shang", "enable_live_feed_debug_menu", arrayList3);
        models.add(liveSettingModel3);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.feed.EnableLiveFeedDebugMenuSetting", liveSettingModel3);
        ArrayList arrayList4 = new ArrayList();
        arrayList4.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel4 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.feed.FeedDrawMtSetting", ScopeValue.FEED, "com.bytedance.android.livesdk.live.model.LiveFeedDraw", "feed_draw_mt", new r(""), "Feed draw.", "wangyan.shang", "feed_draw_mt", arrayList4);
        models.add(liveSettingModel4);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.feed.FeedDrawMtSetting", liveSettingModel4);
        ArrayList arrayList5 = new ArrayList();
        arrayList5.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel5 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.feed.FeedDrawerUrlsSetting", ScopeValue.FEED, "java.util.List<com.bytedance.android.livesdk.live.model.LiveDrawerUrl>", "feed_drawer_urls", new r(""), "null", "laiyangpei", "feed_drawer_urls", arrayList5);
        models.add(liveSettingModel5);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.feed.FeedDrawerUrlsSetting", liveSettingModel5);
        ArrayList arrayList6 = new ArrayList();
        arrayList6.add(new Group(new r((Number) 0), "0:top", true));
        arrayList6.add(new Group(new r((Number) 1), "1:middle", false));
        LiveSettingModel liveSettingModel6 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.feed.FeedLiveBannerPositionSetting", ScopeValue.FEED, "int", "feed_live_banner_position", new r((Number) 0), "Live Feed Banner Position", "wangyan.shang", "feed_live_banner_position", arrayList6);
        models.add(liveSettingModel6);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.feed.FeedLiveBannerPositionSetting", liveSettingModel6);
        ArrayList arrayList7 = new ArrayList();
        arrayList7.add(new Group(new r((Number) 4), "default group", true));
        LiveSettingModel liveSettingModel7 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.feed.FeedPreloadSetting", ScopeValue.FEED, "int", "feed_preload", new r((Number) 4), "", "wangyan.shang", "feed_preload", arrayList7);
        models.add(liveSettingModel7);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.feed.FeedPreloadSetting", liveSettingModel7);
        ArrayList arrayList8 = new ArrayList();
        arrayList8.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel8 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.feed.FreeFlowSetting", ScopeValue.FEED, "com.bytedance.android.livesdk.feed.feed.FreeFlowModel", "free_flow", new r(""), "", "wangyan.shang", "free_flow", arrayList8);
        models.add(liveSettingModel8);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.feed.FreeFlowSetting", liveSettingModel8);
        ArrayList arrayList9 = new ArrayList();
        arrayList9.add(new Group(new r((Boolean) true), "true:show", true));
        arrayList9.add(new Group(new r((Boolean) false), "false:gone", false));
        LiveSettingModel liveSettingModel9 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.feed.I18nZhibozhongAnimationTagSetting", ScopeValue.FEED, "boolean", "i18n_zhibozhong_animation_tag", new r((Boolean) true), "Whether I18N shows live animation on feed page", "wangyan.shang", "i18n_zhibozhong_animation_tag", arrayList9);
        models.add(liveSettingModel9);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.feed.I18nZhibozhongAnimationTagSetting", liveSettingModel9);
        ArrayList arrayList10 = new ArrayList();
        arrayList10.add(new Group(new r((Number) 300), "default group", true));
        LiveSettingModel liveSettingModel10 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.feed.InboxTopLivesCacheExpiredTimeSetting", ScopeValue.FEED, "int", "inbox_top_lives_cache_expired_time", new r((Number) 300), "the time interval of cache expired time", "zengwei.godv", "inbox_top_lives_cache_expired_time", arrayList10);
        models.add(liveSettingModel10);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.feed.InboxTopLivesCacheExpiredTimeSetting", liveSettingModel10);
        ArrayList arrayList11 = new ArrayList();
        arrayList11.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel11 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.feed.IsLoadGiftResourceAfterFirstFrameSetting", ScopeValue.FEED, "boolean", "is_load_gift_resource_after_first_frame", new r((Boolean) false), "Loading gift resources after the first frame.", "wangyan.shang", "is_load_gift_resource_after_first_frame", arrayList11);
        models.add(liveSettingModel11);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.feed.IsLoadGiftResourceAfterFirstFrameSetting", liveSettingModel11);
        ArrayList arrayList12 = new ArrayList();
        arrayList12.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel12 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.feed.LiveDrawerDraggableEnable", ScopeValue.FEED, "boolean", "live_drawer_draggable_enable", new r((Boolean) true), "Live feed drawer enable draggable fullscreen ", "zengwei.godv", "live_drawer_draggable_enable", arrayList12);
        models.add(liveSettingModel12);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.feed.LiveDrawerDraggableEnable", liveSettingModel12);
        ArrayList arrayList13 = new ArrayList();
        arrayList13.add(new Group(new r((Number) 300), "default group", true));
        LiveSettingModel liveSettingModel13 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.feed.LiveDrawerRefreshTimeSetting", ScopeValue.FEED, "int", "live_drawer_refresh_time", new r((Number) 300), "Live feed refresh time", "zengwei.godv", "live_drawer_refresh_time", arrayList13);
        models.add(liveSettingModel13);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.feed.LiveDrawerRefreshTimeSetting", liveSettingModel13);
        ArrayList arrayList14 = new ArrayList();
        Integer valueOf2 = Integer.valueOf((int) LiveFeedRefreshTimeSetting.DEFAULT);
        arrayList14.add(new Group(new r((Number) valueOf2), "default group", true));
        LiveSettingModel liveSettingModel14 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.feed.LiveFeedRefreshTimeSetting", ScopeValue.FEED, "int", "live_feed_refresh_time", new r((Number) valueOf2), "Live feed refresh time", "zengwei.godv", "live_feed_refresh_time", arrayList14);
        models.add(liveSettingModel14);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.feed.LiveFeedRefreshTimeSetting", liveSettingModel14);
        ArrayList arrayList15 = new ArrayList();
        arrayList15.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel15 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.feed.LiveFeedTabEntranceEnabledSetting", ScopeValue.FEED, "int", "live_feed_tab_entrance_enabled", new r((Number) 0), "Live broadcast start button placement", "wangyan.shang", "live_feed_tab_entrance_enabled", arrayList15);
        models.add(liveSettingModel15);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.feed.LiveFeedTabEntranceEnabledSetting", liveSettingModel15);
        ArrayList arrayList16 = new ArrayList();
        arrayList16.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel16 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.feed.LiveForYouPageTagSetting", ScopeValue.FEED, "int", "live_enable_preview_new_tag", new r((Number) 0), "live enable preview new tag", "shizhongyu.001", "live_enable_preview_new_tag", arrayList16);
        models.add(liveSettingModel16);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.feed.LiveForYouPageTagSetting", liveSettingModel16);
        ArrayList arrayList17 = new ArrayList();
        arrayList17.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel17 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.feed.LiveForuTopLivesEnterOptSetting", ScopeValue.FEED, "int", "live_foru_toplives_enter_opt", new r((Number) 0), "The optimization of first frame in new style version 1", "laiyangpei", "live_foru_toplives_enter_opt", arrayList17);
        models.add(liveSettingModel17);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.feed.LiveForuTopLivesEnterOptSetting", liveSettingModel17);
        ArrayList arrayList18 = new ArrayList();
        arrayList18.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel18 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.feed.LiveIsLoadGiftAfterFeedEndSetting", ScopeValue.FEED, "boolean", "live_is_load_gift_after_feed_end", new r((Boolean) false), "The switch of the resource loading after entering the feed", "wangyan.shang", "live_is_load_gift_after_feed_end", arrayList18);
        models.add(liveSettingModel18);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.feed.LiveIsLoadGiftAfterFeedEndSetting", liveSettingModel18);
        ArrayList arrayList19 = new ArrayList();
        arrayList19.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel19 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.feed.LiveMtDrawerFeedItemWithUserInfoSetting", ScopeValue.FEED, "boolean", "live_mt_drawer_feed_item_with_user_info", new r((Boolean) false), "The ab test of feed item style in drawer live, whether show user info", "yanpeng.p", "live_mt_drawer_feed_item_with_user_info", arrayList19);
        models.add(liveSettingModel19);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.feed.LiveMtDrawerFeedItemWithUserInfoSetting", liveSettingModel19);
        ArrayList arrayList20 = new ArrayList();
        arrayList20.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel20 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.feed.LiveNewFeedFirstFrameOpSetting", ScopeValue.FEED, "int", "live_new_feed_first_frame_op", new r((Number) 0), "The optimization of first frame in new style version 1", "wangyan.shang", "live_new_feed_first_frame_op", arrayList20);
        models.add(liveSettingModel20);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.feed.LiveNewFeedFirstFrameOpSetting", liveSettingModel20);
        ArrayList arrayList21 = new ArrayList();
        arrayList21.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel21 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.feed.RefreshShowSandBoxRoomSetting", ScopeValue.FEED, "boolean", "refresh_show_sand_box_room", new r((Boolean) false), "Pull down to refresh display test room", "wangyan.shang", "refresh_show_sand_box_room", arrayList21);
        models.add(liveSettingModel21);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.feed.RefreshShowSandBoxRoomSetting", liveSettingModel21);
        ArrayList arrayList22 = new ArrayList();
        arrayList22.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel22 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.feed.VideoPreloadAfterCoverSetting", ScopeValue.FEED, "boolean", "video_preload_after_cover", new r((Boolean) false), "Preload the video after the cover is displayed", "wangyan.shang", "video_preload_after_cover", arrayList22);
        models.add(liveSettingModel22);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.feed.VideoPreloadAfterCoverSetting", liveSettingModel22);
        ArrayList arrayList23 = new ArrayList();
        arrayList23.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel23 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.pullstream.DnsOptMethodSetting", ScopeValue.PULLSTREAM, "int", "dns_opt_method", new r((Number) 0), "The switch of the DNS optimization", "wangyan.shang", "dns_opt_method", arrayList23);
        models.add(liveSettingModel23);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.pullstream.DnsOptMethodSetting", liveSettingModel23);
        ArrayList arrayList24 = new ArrayList();
        arrayList24.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel24 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.pullstream.EnableEnterRoomOptReuseRoomPlayerSetting", ScopeValue.PULLSTREAM, "boolean", "enable_enter_room_opt_reuse_room_player", new r((Boolean) true), "Enable optimization for enter room: reuse video player in live rooms", "wangyan.shang", "enable_enter_room_opt_reuse_room_player", arrayList24);
        models.add(liveSettingModel24);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.pullstream.EnableEnterRoomOptReuseRoomPlayerSetting", liveSettingModel24);
        ArrayList arrayList25 = new ArrayList();
        arrayList25.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel25 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.pullstream.EnableSmoothEnterRoomSetting", ScopeValue.PULLSTREAM, "int", "enable_smooth_enter_room", new r((Number) 0), "video feed smooth enter live room", "wangyan.shang", "enable_smooth_enter_room", arrayList25);
        models.add(liveSettingModel25);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.pullstream.EnableSmoothEnterRoomSetting", liveSettingModel25);
        ArrayList arrayList26 = new ArrayList();
        arrayList26.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel26 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.pullstream.LiveHardwareDecodeBytevc1EnableSetting", ScopeValue.PULLSTREAM, "int", "live_hardware_decode_bytevc1_enable", new r((Number) 0), "bytevc1 Hard Decode Switch", "wangyan.shang", "live_hardware_decode_bytevc1_enable", arrayList26);
        models.add(liveSettingModel26);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.pullstream.LiveHardwareDecodeBytevc1EnableSetting", liveSettingModel26);
        ArrayList arrayList27 = new ArrayList();
        arrayList27.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel27 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.pullstream.LiveHardwareDecodeH264EnableSetting", ScopeValue.PULLSTREAM, "int", "live_hardware_decode_h264_enable", new r((Number) 0), "264 Hard Decode Switch", "wangyan.shang", "live_hardware_decode_h264_enable", arrayList27);
        models.add(liveSettingModel27);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.pullstream.LiveHardwareDecodeH264EnableSetting", liveSettingModel27);
        ArrayList arrayList28 = new ArrayList();
        arrayList28.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel28 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.pullstream.LiveHttpkDegradeEnabledSetting", ScopeValue.PULLSTREAM, "boolean", "live_httpk_degrade_enabled", new r((Boolean) false), "The switch of the Httpk Downgrade", "wangyan.shang", "live_httpk_degrade_enabled", arrayList28);
        models.add(liveSettingModel28);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.pullstream.LiveHttpkDegradeEnabledSetting", liveSettingModel28);
        ArrayList arrayList29 = new ArrayList();
        arrayList29.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel29 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.pullstream.LiveNetAdaptiveEnableSetting", ScopeValue.PULLSTREAM, "boolean", "live_net_adaptive_enable", new r((Boolean) false), "The Switch of the Adaptive Network", "wangyan.shang", "live_net_adaptive_enable", arrayList29);
        models.add(liveSettingModel29);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.pullstream.LiveNetAdaptiveEnableSetting", liveSettingModel29);
        ArrayList arrayList30 = new ArrayList();
        Float valueOf3 = Float.valueOf(1.0f);
        arrayList30.add(new Group(new r((Number) valueOf3), "default group", true));
        LiveSettingModel liveSettingModel30 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.pullstream.LiveNetAdaptiveHurrySpeedSetting", ScopeValue.PULLSTREAM, "float", "live_net_adaptive_hurry_speed", new r((Number) valueOf3), "Network Adaptive Chase Speed", "wangyan.shang", "live_net_adaptive_hurry_speed", arrayList30);
        models.add(liveSettingModel30);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.pullstream.LiveNetAdaptiveHurrySpeedSetting", liveSettingModel30);
        ArrayList arrayList31 = new ArrayList();
        Integer valueOf4 = Integer.valueOf((int) LiveNetAdaptiveHurryTimeSetting.DEFAULT);
        arrayList31.add(new Group(new r((Number) valueOf4), "default group", true));
        LiveSettingModel liveSettingModel31 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.pullstream.LiveNetAdaptiveHurryTimeSetting", ScopeValue.PULLSTREAM, "int", "live_net_adaptive_hurry_time", new r((Number) valueOf4), "The threshold of the beginning of the chase frame", "wangyan.shang", "live_net_adaptive_hurry_time", arrayList31);
        models.add(liveSettingModel31);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.pullstream.LiveNetAdaptiveHurryTimeSetting", liveSettingModel31);
        ArrayList arrayList32 = new ArrayList();
        arrayList32.add(new Group(new r((Number) valueOf3), "default group", true));
        LiveSettingModel liveSettingModel32 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.pullstream.LiveNetAdaptiveSlowSpeedSetting", ScopeValue.PULLSTREAM, "float", "live_net_adaptive_slow_speed", new r((Number) valueOf3), "Slow Play Speed", "wangyan.shang", "live_net_adaptive_slow_speed", arrayList32);
        models.add(liveSettingModel32);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.pullstream.LiveNetAdaptiveSlowSpeedSetting", liveSettingModel32);
        ArrayList arrayList33 = new ArrayList();
        arrayList33.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel33 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.pullstream.LiveNetAdaptiveSlowTimeSetting", ScopeValue.PULLSTREAM, "int", "live_net_adaptive_slow_time", new r((Number) 0), "Slow Play Threshold Period", "wangyan.shang", "live_net_adaptive_slow_time", arrayList33);
        models.add(liveSettingModel33);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.pullstream.LiveNetAdaptiveSlowTimeSetting", liveSettingModel33);
        ArrayList arrayList34 = new ArrayList();
        arrayList34.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel34 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.pullstream.LiveSdkEnableTfoPreconnectSetting", ScopeValue.PULLSTREAM, "boolean", "live_sdk_enable_tfo_preconnect", new r((Boolean) false), "before pulling stream, preConnecting cache cookies to reduce connect tcp time", "wangyan.shang", "live_sdk_enable_tfo_preconnect", arrayList34);
        models.add(liveSettingModel34);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.pullstream.LiveSdkEnableTfoPreconnectSetting", liveSettingModel34);
        ArrayList arrayList35 = new ArrayList();
        arrayList35.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel35 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.pullstream.LiveSdkFastOpenDisableSetting", ScopeValue.PULLSTREAM, "int", "live_sdk_fast_open_disable", new r((Number) 0), "The switch of the optimization for the first frame pulling", "wangyan.shang", "live_sdk_fast_open_disable", arrayList35);
        models.add(liveSettingModel35);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.pullstream.LiveSdkFastOpenDisableSetting", liveSettingModel35);
        ArrayList arrayList36 = new ArrayList();
        arrayList36.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel36 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.pullstream.LiveSdkNtpEnableSetting", ScopeValue.PULLSTREAM, "int", "live_sdk_ntp_enable", new r((Number) 0), "The switch of the NTP", "wangyan.shang", "live_sdk_ntp_enable", arrayList36);
        models.add(liveSettingModel36);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.pullstream.LiveSdkNtpEnableSetting", liveSettingModel36);
        ArrayList arrayList37 = new ArrayList();
        arrayList37.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel37 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.pullstream.LiveStreamStrategySdkEnableSetting", ScopeValue.PULLSTREAM, "int", "live_stream_strategy_sdk_enable", new r((Number) 0), "The switch of the live stream strategy", "sunqiang.2759", "live_stream_strategy_sdk_enable", arrayList37);
        models.add(liveSettingModel37);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.pullstream.LiveStreamStrategySdkEnableSetting", liveSettingModel37);
        ArrayList arrayList38 = new ArrayList();
        arrayList38.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel38 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.pullstream.PlayerEnableUploadTimeLineSetting", ScopeValue.PULLSTREAM, "boolean", "player_enable_upload_time_line", new r((Boolean) false), "Player Timeline Switch", "wangyan.shang", "player_enable_upload_time_line", arrayList38);
        models.add(liveSettingModel38);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.pullstream.PlayerEnableUploadTimeLineSetting", liveSettingModel38);
        ArrayList arrayList39 = new ArrayList();
        arrayList39.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel39 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.LiveBannerExperiment", ScopeValue.BANNER, "com.bytedance.android.livesdk.livesetting.model.LiveBannerSettings", "live_banner", new r(""), "live banner setting", "wuzhongle", "live_banner", arrayList39);
        models.add(liveSettingModel39);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.LiveBannerExperiment", liveSettingModel39);
        ArrayList arrayList40 = new ArrayList();
        arrayList40.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel40 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.NegativeTestExperiment", ScopeValue.PERFORMANCE, "com.bytedance.android.livesdk.livesetting.NegativeTestSettings", "live_negative_test", new r(""), "negative test", "laiyangpei", "live_negative_test", arrayList40);
        models.add(liveSettingModel40);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.NegativeTestExperiment", liveSettingModel40);
        ArrayList arrayList41 = new ArrayList();
        arrayList41.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel41 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.redenvelope.AgeRestrictedConfig", ScopeValue.GIFT, "boolean", "profit_low_age_restricted", new r((Boolean) false), "low age user", "guoruidong", "profit_low_age_restricted", arrayList41);
        models.add(liveSettingModel41);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.redenvelope.AgeRestrictedConfig", liveSettingModel41);
        ArrayList arrayList42 = new ArrayList();
        arrayList42.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel42 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.redenvelope.RedEnvelopeLibraConfig", ScopeValue.GIFT, "boolean", "live_enable_envelope", new r((Boolean) true), "red envelope function switch", "guoruidong", "live_enable_envelope", arrayList42);
        models.add(liveSettingModel42);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.redenvelope.RedEnvelopeLibraConfig", liveSettingModel42);
        ArrayList arrayList43 = new ArrayList();
        arrayList43.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel43 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.redenvelope.RedEnvelopeURLConfig", ScopeValue.GIFT, "com.bytedance.android.livesdk.livesetting.model.RedEnvelopeUrls", "live_golden_envelope_schemes", new r(""), "red envelope url config", "guoruidong", "live_golden_envelope_schemes", arrayList43);
        models.add(liveSettingModel43);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.redenvelope.RedEnvelopeURLConfig", liveSettingModel43);
        ArrayList arrayList44 = new ArrayList();
        arrayList44.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel44 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.AllowHtmlVideoSetting", ScopeValue.HYBRID, "boolean", "allow_html_video", new r((Boolean) true), "allow_html_video", "liukan.kk", "allow_html_video", arrayList44);
        models.add(liveSettingModel44);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.AllowHtmlVideoSetting", liveSettingModel44);
        ArrayList arrayList45 = new ArrayList();
        arrayList45.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel45 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.ContainerBehaviorEnableSetting", ScopeValue.HYBRID, "boolean", "mt_live_container_behavior_enable", new r((Boolean) true), "live container use container's behavior to handle webview touch event", "mengxiangzhao", "mt_live_container_behavior_enable", arrayList45);
        models.add(liveSettingModel45);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.ContainerBehaviorEnableSetting", liveSettingModel45);
        ArrayList arrayList46 = new ArrayList();
        arrayList46.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel46 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.EnableLynxDebugBadgeSetting", ScopeValue.HYBRID, "boolean", "enable_lynx_debug_badge", new r((Boolean) false), "enable lynx debug badge", "wugelin", "enable_lynx_debug_badge", arrayList46);
        models.add(liveSettingModel46);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.EnableLynxDebugBadgeSetting", liveSettingModel46);
        ArrayList arrayList47 = new ArrayList();
        arrayList47.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel47 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.EnableLynxShareGroupSetting", ScopeValue.HYBRID, "boolean", "enable_lynx_share_group", new r((Boolean) true), "enable Lynx Runtime share", "wugelin", "enable_lynx_share_group", arrayList47);
        models.add(liveSettingModel47);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.EnableLynxShareGroupSetting", liveSettingModel47);
        ArrayList arrayList48 = new ArrayList();
        arrayList48.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel48 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.EnableWebviewDebuggingSetting", ScopeValue.HYBRID, "boolean", "enable_webview_debugging", new r((Boolean) false), "enable_webview_debugging", "liukan.kk", "enable_webview_debugging", arrayList48);
        models.add(liveSettingModel48);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.EnableWebviewDebuggingSetting", liveSettingModel48);
        ArrayList arrayList49 = new ArrayList();
        arrayList49.add(new Group(new r((Number) -1), "default group", true));
        LiveSettingModel liveSettingModel49 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.ForceJsPermissionSetting", ScopeValue.HYBRID, "int", "force_js_permission", new r((Number) -1), "force_js_permission", "liukan.kk", "force_js_permission", arrayList49);
        models.add(liveSettingModel49);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.ForceJsPermissionSetting", liveSettingModel49);
        ArrayList arrayList50 = new ArrayList();
        arrayList50.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel50 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.HybridDialogEnableActivityDim", ScopeValue.HYBRID, "boolean", "mt_live_hybrid_dialog_enable_dim_activity", new r((Boolean) true), "enable hybrid dialog dim activity", "wugelin", "mt_live_hybrid_dialog_enable_dim_activity", arrayList50);
        models.add(liveSettingModel50);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.HybridDialogEnableActivityDim", liveSettingModel50);
        ArrayList arrayList51 = new ArrayList();
        arrayList51.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel51 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.JsbEnablePermissionCheckSetting", ScopeValue.HYBRID, "boolean", "jsb_enable_permission_check", new r((Boolean) false), "enable JSB remote Auth", "wugelin", "jsb_enable_permission_check", arrayList51);
        models.add(liveSettingModel51);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.JsbEnablePermissionCheckSetting", liveSettingModel51);
        ArrayList arrayList52 = new ArrayList();
        arrayList52.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel52 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.LiveBattleContributeListLynxUrlSetting", ScopeValue.HYBRID, "java.lang.String", "live_battle_contribute_list_lynx_url", new r(""), "whether enable lynx for battle contribute list page", "wugelin", "live_battle_contribute_list_lynx_url", arrayList52);
        models.add(liveSettingModel52);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.LiveBattleContributeListLynxUrlSetting", liveSettingModel52);
        ArrayList arrayList53 = new ArrayList();
        arrayList53.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel53 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.LiveDisableWebviewFileUriMtSetting", ScopeValue.HYBRID, "boolean", "live_disable_webview_file_uri_mt", new r((Boolean) true), "Disable file scheme of webview", "wugelin", "live_disable_webview_file_uri_mt", arrayList53);
        models.add(liveSettingModel53);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.LiveDisableWebviewFileUriMtSetting", liveSettingModel53);
        ArrayList arrayList54 = new ArrayList();
        arrayList54.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel54 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.LiveEnableWebviewGlobalpropsSetting", ScopeValue.HYBRID, "boolean", "live_enable_webview_globalprops", new r((Boolean) true), "enable webview globalprops", "wugelin", "live_enable_webview_globalprops", arrayList54);
        models.add(liveSettingModel54);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.LiveEnableWebviewGlobalpropsSetting", liveSettingModel54);
        ArrayList arrayList55 = new ArrayList();
        arrayList55.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel55 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.LiveEnableXBridgeSetting", ScopeValue.HYBRID, "boolean", "live_enable_x_bridge", new r((Boolean) true), "enable live xbridge", "wugelin", "live_enable_x_bridge", arrayList55);
        models.add(liveSettingModel55);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.LiveEnableXBridgeSetting", liveSettingModel55);
        ArrayList arrayList56 = new ArrayList();
        arrayList56.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel56 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.LiveEndUseLynx", ScopeValue.HYBRID, "boolean", "mt_endlive_use_lynx", new r((Boolean) false), "end live page use lynx", "yangying.clover", "mt_endlive_use_lynx", arrayList56);
        models.add(liveSettingModel56);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.LiveEndUseLynx", liveSettingModel56);
        ArrayList arrayList57 = new ArrayList();
        arrayList57.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel57 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.LiveForceLynxFallback", ScopeValue.HYBRID, "boolean", "mt_live_force_lynx_fallback", new r((Boolean) false), "force lynx page run to fallback", "mengxiangzhao", "mt_live_force_lynx_fallback", arrayList57);
        models.add(liveSettingModel57);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.LiveForceLynxFallback", liveSettingModel57);
        ArrayList arrayList58 = new ArrayList();
        arrayList58.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel58 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.LiveGurdChannelsSetting", ScopeValue.HYBRID, "java.lang.String[]", "live_gurd_channels", new r(""), "live_gurd_channels", "mengxiangzhao", "live_gurd_channels", arrayList58);
        models.add(liveSettingModel58);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.LiveGurdChannelsSetting", liveSettingModel58);
        ArrayList arrayList59 = new ArrayList();
        arrayList59.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel59 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.LiveGurdPatternsSetting", ScopeValue.HYBRID, "java.lang.String[]", "live_gurd_patterns", new r(""), "live_gurd_patterns", "mengxiangzhao", "live_gurd_patterns", arrayList59);
        models.add(liveSettingModel59);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.LiveGurdPatternsSetting", liveSettingModel59);
        ArrayList arrayList60 = new ArrayList();
        arrayList60.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel60 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.LiveHostDemotionSetting", ScopeValue.HYBRID, "boolean", "mt_show_live_deepLink_schema", new r((Boolean) false), "if demotion use deepLink else use smartRouter", "fanchenyang336688", "mt_show_live_deepLink_schema", arrayList60);
        models.add(liveSettingModel60);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.LiveHostDemotionSetting", liveSettingModel60);
        ArrayList arrayList61 = new ArrayList();
        arrayList61.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel61 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.LiveImportHostLynxJsb", ScopeValue.HYBRID, "boolean", "mt_live_import_lynx_jsb", new r((Boolean) true), "lynx page import host's jsb", "mengxiangzhao", "mt_live_import_lynx_jsb", arrayList61);
        models.add(liveSettingModel61);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.LiveImportHostLynxJsb", liveSettingModel61);
        ArrayList arrayList62 = new ArrayList();
        arrayList62.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel62 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.LiveJsbEnableHostSetting", ScopeValue.HYBRID, "boolean", "live_jsb_enable_host", new r((Boolean) true), "Enable host method import of JSB", "wugelin", "live_jsb_enable_host", arrayList62);
        models.add(liveSettingModel62);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.LiveJsbEnableHostSetting", liveSettingModel62);
        ArrayList arrayList63 = new ArrayList();
        arrayList63.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel63 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.LiveLynxJsbReportEventSetting", ScopeValue.HYBRID, "boolean", "mt_lynx_jsb_report_event", new r((Boolean) true), "report time event of lynx jsb", "mengxiangzhao", "mt_lynx_jsb_report_event", arrayList63);
        models.add(liveSettingModel63);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.LiveLynxJsbReportEventSetting", liveSettingModel63);
        ArrayList arrayList64 = new ArrayList();
        arrayList64.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel64 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.LiveSchemaSkipDeepLinkEnableSetting", ScopeValue.HYBRID, "boolean", "mt_live_schema_skip_deep_link_android", new r((Boolean) true), "live schema skip deeplink,directly use smart router", "mengxiangzhao", "mt_live_schema_skip_deep_link_android", arrayList64);
        models.add(liveSettingModel64);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.LiveSchemaSkipDeepLinkEnableSetting", liveSettingModel64);
        ArrayList arrayList65 = new ArrayList();
        arrayList65.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel65 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.LiveSchemaSkipDeepLinkSetting", ScopeValue.HYBRID, "java.lang.String[]", "mt_live_schema_skip_deep_link_host_android", new r(""), "if schema's host in this list,will use SmartRouter to jump", "mengxiangzhao", "mt_live_schema_skip_deep_link_host_android", arrayList65);
        models.add(liveSettingModel65);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.LiveSchemaSkipDeepLinkSetting", liveSettingModel65);
        ArrayList arrayList66 = new ArrayList();
        arrayList66.add(new Group(new r(""), "default", true));
        LiveSettingModel liveSettingModel66 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.LynxCardConfig", ScopeValue.HYBRID, "com.bytedance.android.livesdk.livesetting.hybrid.LynxCardWidget", "lynx_card_widget_new_config", new r(""), "the config of the lynx card widget", "just", "lynx_card_widget_config", arrayList66);
        models.add(liveSettingModel66);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.LynxCardConfig", liveSettingModel66);
        ArrayList arrayList67 = new ArrayList();
        arrayList67.add(new Group(new r(""), "default", true));
        LiveSettingModel liveSettingModel67 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.LynxCardPriority", ScopeValue.HYBRID, "java.lang.String[]", "live_short_touch_type_priority", new r(""), "the priority of the lynx card widget", "just", "live_short_touch_type_priority", arrayList67);
        models.add(liveSettingModel67);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.LynxCardPriority", liveSettingModel67);
        ArrayList arrayList68 = new ArrayList();
        arrayList68.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel68 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.LynxDelayDestroyJSB", ScopeValue.HYBRID, "boolean", "mt_live_delay_destroy_jsb", new r((Boolean) true), "destroy lynx jsb by View.post() instance of invoke immediately", "mengxiangzhao", "mt_live_delay_destroy_jsb", arrayList68);
        models.add(liveSettingModel68);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.LynxDelayDestroyJSB", liveSettingModel68);
        ArrayList arrayList69 = new ArrayList();
        arrayList69.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel69 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.ShowNewContainerLabel", ScopeValue.HYBRID, "boolean", "mt_show_live_new_container_label", new r((Boolean) false), "end live page use lynx", "mengxiangzhao", "mt_show_live_new_container_label", arrayList69);
        models.add(liveSettingModel69);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.ShowNewContainerLabel", liveSettingModel69);
        ArrayList arrayList70 = new ArrayList();
        arrayList70.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel70 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.TTLiveWebviewMonitorConfigSlardarAndroidSetting", ScopeValue.HYBRID, "java.lang.String", "tt_live_webview_monitor_config_slardar_android", new r(""), "The Switch of the WebView Slardar Monitor", "wugelin", "tt_live_webview_monitor_config_slardar_android", arrayList70);
        models.add(liveSettingModel70);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.TTLiveWebviewMonitorConfigSlardarAndroidSetting", liveSettingModel70);
        ArrayList arrayList71 = new ArrayList();
        arrayList71.add(new Group(new r((Number) -1L), "default group", true));
        LiveSettingModel liveSettingModel71 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.WapLoadTimeLimitMobileSetting", ScopeValue.HYBRID, "long", "wap_load_time_limit_mobile", new r((Number) -1L), "wap_load_time_limit_mobile", "liukan.kk", "wap_load_time_limit_mobile", arrayList71);
        models.add(liveSettingModel71);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.WapLoadTimeLimitMobileSetting", liveSettingModel71);
        ArrayList arrayList72 = new ArrayList();
        arrayList72.add(new Group(new r((Number) -1L), "default group", true));
        LiveSettingModel liveSettingModel72 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.WapLoadTimeLimitWifiSetting", ScopeValue.HYBRID, "long", "wap_load_time_limit_wifi", new r((Number) -1L), "wap_load_time_limit_wifi", "liukan.kk", "wap_load_time_limit_wifi", arrayList72);
        models.add(liveSettingModel72);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.WapLoadTimeLimitWifiSetting", liveSettingModel72);
        ArrayList arrayList73 = new ArrayList();
        arrayList73.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel73 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.WebOfflineEnabledSetting", ScopeValue.HYBRID, "boolean", "web_offline_enabled", new r((Boolean) true), "Enable web offline.", "wugelin", "web_offline_enabled", arrayList73);
        models.add(liveSettingModel73);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.WebOfflineEnabledSetting", liveSettingModel73);
        ArrayList arrayList74 = new ArrayList();
        arrayList74.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel74 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.WebViewUseBoeHeaderSetting", ScopeValue.HYBRID, "boolean", "mt_webview_use_boe_header", new r((Boolean) true), "webview use boe header", "mengxiangzhao", "mt_webview_use_boe_header", arrayList74);
        models.add(liveSettingModel74);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.WebViewUseBoeHeaderSetting", liveSettingModel74);
        ArrayList arrayList75 = new ArrayList();
        arrayList75.add(new Group(new r((Number) -1), "default group", true));
        LiveSettingModel liveSettingModel75 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.WebviewDestroyModeSetting", ScopeValue.HYBRID, "int", "webview_destroy_mode", new r((Number) -1), "webview_destroy_mode", "liukan.kk", "webview_destroy_mode", arrayList75);
        models.add(liveSettingModel75);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.WebviewDestroyModeSetting", liveSettingModel75);
        ArrayList arrayList76 = new ArrayList();
        arrayList76.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel76 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.hybrid.WebviewNativeImageLoadingSetting", ScopeValue.HYBRID, "boolean", "webview_native_image_loading", new r((Boolean) false), "Enable WebView to use native image loader library to load image resources.", "wugelin", "webview_native_image_loading", arrayList76);
        models.add(liveSettingModel76);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.hybrid.WebviewNativeImageLoadingSetting", liveSettingModel76);
        ArrayList arrayList77 = new ArrayList();
        arrayList77.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel77 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.roomfunction.EnableAnchorLiveLongPressShareSetting", ScopeValue.ROOMFUNCTION, "int", "enable_anchor_live_long_press_share", new r((Number) 0), "Whether long press share for audience is enabled.", "liuxiangdong.richard", "enable_anchor_live_long_press_share", arrayList77);
        models.add(liveSettingModel77);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.roomfunction.EnableAnchorLiveLongPressShareSetting", liveSettingModel77);
        ArrayList arrayList78 = new ArrayList();
        arrayList78.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel78 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.roomfunction.EnableLiveLongPressShareSetting", ScopeValue.ROOMFUNCTION, "int", "enable_live_long_press_share", new r((Number) 0), "Whether long press share for audience is enabled.", "liuxiangdong.richard", "enable_live_long_press_share", arrayList78);
        models.add(liveSettingModel78);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.roomfunction.EnableLiveLongPressShareSetting", liveSettingModel78);
        ArrayList arrayList79 = new ArrayList();
        arrayList79.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel79 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.roomfunction.LiveAnchorShareCountShowSetting", ScopeValue.ROOMFUNCTION, "int", "live_anchor_share_count_show", new r((Number) 0), "", "fengdianzhang", "live_anchor_share_count_show", arrayList79);
        models.add(liveSettingModel79);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.roomfunction.LiveAnchorShareCountShowSetting", liveSettingModel79);
        ArrayList arrayList80 = new ArrayList();
        arrayList80.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel80 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.roomfunction.LiveCheckQuestionTooShortSetting", ScopeValue.ROOMFUNCTION, "int", "live_intercept_invalid_qa", new r((Number) 0), "check if question is short than 6 characters", "lishuo.oo", "live_intercept_invalid_qa", arrayList80);
        models.add(liveSettingModel80);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.roomfunction.LiveCheckQuestionTooShortSetting", liveSettingModel80);
        ArrayList arrayList81 = new ArrayList();
        arrayList81.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel81 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.roomfunction.LiveEnablePushSettingSetting", ScopeValue.ROOMFUNCTION, "boolean", "live_enable_push_setting", new r((Boolean) false), "Show notification in profile detail page", "caoyanyao", "live_enable_push_setting", arrayList81);
        models.add(liveSettingModel81);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.roomfunction.LiveEnablePushSettingSetting", liveSettingModel81);
        ArrayList arrayList82 = new ArrayList();
        arrayList82.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel82 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.roomfunction.LiveHideAudienceFollowingSetting", ScopeValue.ROOMFUNCTION, "boolean", "live_hide_audience_following", new r((Boolean) true), "live_hide_audience_following", "liuxiangdong.richard", "live_hide_audience_following", arrayList82);
        models.add(liveSettingModel82);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.roomfunction.LiveHideAudienceFollowingSetting", liveSettingModel82);
        ArrayList arrayList83 = new ArrayList();
        arrayList83.add(new Group(new r((Number) 3000), "default group", true));
        LiveSettingModel liveSettingModel83 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.roomfunction.LiveLikeFirstShowTimeSetting", ScopeValue.ROOMFUNCTION, "int", "live_like_first_show_time", new r((Number) 3000), "", "fengdianzhang", "live_like_first_show_time", arrayList83);
        models.add(liveSettingModel83);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.roomfunction.LiveLikeFirstShowTimeSetting", liveSettingModel83);
        ArrayList arrayList84 = new ArrayList();
        arrayList84.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel84 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.roomfunction.LiveMtFollowButtonStyleSetting", ScopeValue.ROOMFUNCTION, "int", "live_mt_follow_button_style", new r((Number) 0), "The ab test of follow button style in live room, 0 for original style, 1 for plus style, 2 for solid style, 3 for stroke style", "liuxiangdong.richard", "live_mt_follow_button_style", arrayList84);
        models.add(liveSettingModel84);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.roomfunction.LiveMtFollowButtonStyleSetting", liveSettingModel84);
        ArrayList arrayList85 = new ArrayList();
        arrayList85.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel85 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.roomfunction.LiveMtMockLandscapeSetting", ScopeValue.ROOMFUNCTION, "boolean", "live_mt_mock_landscape", new r((Boolean) false), "live_mt_mock_landscape", "chenwenjie.19931007", "live_mt_mock_landscape", arrayList85);
        models.add(liveSettingModel85);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.roomfunction.LiveMtMockLandscapeSetting", liveSettingModel85);
        ArrayList arrayList86 = new ArrayList();
        arrayList86.add(new Group(new r((Number) 300L), "default group", true));
        LiveSettingModel liveSettingModel86 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.roomfunction.LiveMuteCommentsDefaultSetting", ScopeValue.ROOMFUNCTION, "long", "live_mute_comments_default", new r((Number) 300L), "default duration value for temporary mute", "fengdianzhang", "live_mute_comments_default", arrayList86);
        models.add(liveSettingModel86);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.roomfunction.LiveMuteCommentsDefaultSetting", liveSettingModel86);
        ArrayList arrayList87 = new ArrayList();
        arrayList87.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel87 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.roomfunction.LiveMuteCommentsListSetting", ScopeValue.ROOMFUNCTION, "double[]", "live_mute_comments_list", new r(""), "the list of duration for temporary mute", "fengdianzhang", "live_mute_comments_list", arrayList87);
        models.add(liveSettingModel87);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.roomfunction.LiveMuteCommentsListSetting", liveSettingModel87);
        ArrayList arrayList88 = new ArrayList();
        arrayList88.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel88 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.roomfunction.LiveNtpServerUrlSetting", ScopeValue.ROOMFUNCTION, "java.lang.String", "live_ntp_server_url", new r(""), "NTP server url.", "chenwenjie.19931007", "live_ntp_server_url", arrayList88);
        models.add(liveSettingModel88);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.roomfunction.LiveNtpServerUrlSetting", liveSettingModel88);
        ArrayList arrayList89 = new ArrayList();
        arrayList89.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel89 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.roomfunction.LiveReplaceObjUnicodeSetting", ScopeValue.ROOMFUNCTION, "boolean", "live_replace_obj_unicode", new r((Boolean) false), "whether replace obj unicode as white space", "liuxiangdong.richard", "live_replace_obj_unicode", arrayList89);
        models.add(liveSettingModel89);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.roomfunction.LiveReplaceObjUnicodeSetting", liveSettingModel89);
        ArrayList arrayList90 = new ArrayList();
        arrayList90.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel90 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.roomfunction.LiveReportOptimizeUrlSetting", ScopeValue.ROOMFUNCTION, "java.lang.String", "live_report_optimize_url", new r(""), "Live report url.", "chenwenjie.19931007", "live_report_optimize_url", arrayList90);
        models.add(liveSettingModel90);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.roomfunction.LiveReportOptimizeUrlSetting", liveSettingModel90);
        ArrayList arrayList91 = new ArrayList();
        arrayList91.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel91 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.roomfunction.LiveRoomUserInfoIconSetting", ScopeValue.ROOMFUNCTION, "int", "live_room_user_info_icon_enable", new r((Number) 0), "Live Room User Info Icon Enable", "liujinyang.jeanee", "live_room_user_info_icon_enable", arrayList91);
        models.add(liveSettingModel91);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.roomfunction.LiveRoomUserInfoIconSetting", liveSettingModel91);
        ArrayList arrayList92 = new ArrayList();
        arrayList92.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel92 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.roomfunction.LiveRoomUserInfoLanguageSetting", ScopeValue.ROOMFUNCTION, "java.lang.String[]", "live_room_user_info_show_icon_language", new r(""), "live room user info show icon language", "liujinyang.jeanee", "live_room_user_info_show_icon_language", arrayList92);
        models.add(liveSettingModel92);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.roomfunction.LiveRoomUserInfoLanguageSetting", liveSettingModel92);
        ArrayList arrayList93 = new ArrayList();
        arrayList93.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel93 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.roomfunction.LiveSdkAppealWebviewSetting", ScopeValue.ROOMFUNCTION, "java.lang.String", "live_sdk_appeal_webview", new r(""), "The url for the appeal of the low age", "caoyanyao", "live_sdk_appeal_webview", arrayList93);
        models.add(liveSettingModel93);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.roomfunction.LiveSdkAppealWebviewSetting", liveSettingModel93);
        ArrayList arrayList94 = new ArrayList();
        arrayList94.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel94 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.roomfunction.LiveShareCountShowSetting", ScopeValue.ROOMFUNCTION, "int", "live_share_count_show", new r((Number) 0), "", "fengdianzhang", "live_share_count_show", arrayList94);
        models.add(liveSettingModel94);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.roomfunction.LiveShareCountShowSetting", liveSettingModel94);
        ArrayList arrayList95 = new ArrayList();
        arrayList95.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel95 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.roomfunction.LiveSharePanelShowDislikeSetting", ScopeValue.ROOMFUNCTION, "boolean", "live_share_panel_show_dislike", new r((Boolean) false), "toggle dislike button at live share panel", "liuxiangdong.richard", "live_share_panel_show_dislike", arrayList95);
        models.add(liveSettingModel95);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.roomfunction.LiveSharePanelShowDislikeSetting", liveSettingModel95);
        ArrayList arrayList96 = new ArrayList();
        arrayList96.add(new Group(new r((Number) 3000), "default group", true));
        LiveSettingModel liveSettingModel96 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.roomfunction.LiveShareShowTimeSetting", ScopeValue.ROOMFUNCTION, "int", "live_share_show_time", new r((Number) 3000), "", "fengdianzhang", "live_share_show_time", arrayList96);
        models.add(liveSettingModel96);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.roomfunction.LiveShareShowTimeSetting", liveSettingModel96);
        ArrayList arrayList97 = new ArrayList();
        arrayList97.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel97 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.roomfunction.LiveUseEmojiCompatSetting", ScopeValue.ROOMFUNCTION, "boolean", "live_use_emoji_compat", new r((Boolean) false), "use emoji compat to deal with the obj problem", "liuxiangdong.richard", "live_use_emoji_compat", arrayList97);
        models.add(liveSettingModel97);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.roomfunction.LiveUseEmojiCompatSetting", liveSettingModel97);
        ArrayList arrayList98 = new ArrayList();
        arrayList98.add(new Group(new r("18"), "default group", true));
        LiveSettingModel liveSettingModel98 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.roomfunction.LowAgeAnchorLimitSetting", ScopeValue.ROOMFUNCTION, "java.lang.String", "low_age_anchor_limit", new r("18"), "The age gate of the anchor", "caoyanyao", "low_age_anchor_limit", arrayList98);
        models.add(liveSettingModel98);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.roomfunction.LowAgeAnchorLimitSetting", liveSettingModel98);
        ArrayList arrayList99 = new ArrayList();
        arrayList99.add(new Group(new r((Number) 3), "default group", true));
        LiveSettingModel liveSettingModel99 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.roomfunction.PostponeRequestBatchShareListSetting", ScopeValue.ROOMFUNCTION, "int", "postpone_request_batch_share_list", new r((Number) 3), "batch share request delay", "liuxiangdong.richard", "postpone_request_batch_share_list", arrayList99);
        models.add(liveSettingModel99);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.roomfunction.PostponeRequestBatchShareListSetting", liveSettingModel99);
        ArrayList arrayList100 = new ArrayList();
        arrayList100.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel100 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.roomfunction.ReturnBackSettingsSetting", ScopeValue.ROOMFUNCTION, "com.bytedance.android.livesdk.chatroom.model.backroom.LiveBackToPreRoomSetting", "return_back_settings", new r(""), "return to pre room", "laiyangpei", "return_back_settings", arrayList100);
        models.add(liveSettingModel100);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.roomfunction.ReturnBackSettingsSetting", liveSettingModel100);
    }

    private static void findSettingsMethod_4() {
        ArrayList arrayList = new ArrayList();
        arrayList.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.roomfunction.UserWithAgeSetting", ScopeValue.ROOMFUNCTION, "boolean", "user_with_age", new r((Boolean) false), "User should fill in age when broadcast and send gift", "caoyanyao", "user_with_age", arrayList);
        models.add(liveSettingModel);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.roomfunction.UserWithAgeSetting", liveSettingModel);
        ArrayList arrayList2 = new ArrayList();
        arrayList2.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel2 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.recharge.LiveWebRechargeAuditing", ScopeValue.WALLET, "boolean", "live_app_in_auditing", new r((Boolean) false), "dismiss entrance when app in auditing ", "zengwei.godv", "live_app_in_auditing", arrayList2);
        models.add(liveSettingModel2);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.recharge.LiveWebRechargeAuditing", liveSettingModel2);
        ArrayList arrayList3 = new ArrayList();
        arrayList3.add(new Group(new r("sslocal://webcast_lynxview?type=popup&url=https%3A%2F%2Ftosv.byted.org%2Fobj%2Fgecko-internal-sg%2Fmusically%2Ffe%2Flive%2Ftiktok_live_revenue%2Frevenue%2Fpages%2Fguide%2Flarge-sum-entrance.js&height=390&width_percent=80&hide_nav_bar=1&mask_alpha=0.8&show_dim=1&radius=8&web_bg_color=FFFFFF"), "default group", true));
        LiveSettingModel liveSettingModel3 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.recharge.LiveWebRechargeDialog", ScopeValue.WALLET, "java.lang.String", "live_custom_recharge_dialog_url", new r("sslocal://webcast_lynxview?type=popup&url=https%3A%2F%2Ftosv.byted.org%2Fobj%2Fgecko-internal-sg%2Fmusically%2Ffe%2Flive%2Ftiktok_live_revenue%2Frevenue%2Fpages%2Fguide%2Flarge-sum-entrance.js&height=390&width_percent=80&hide_nav_bar=1&mask_alpha=0.8&show_dim=1&radius=8&web_bg_color=FFFFFF"), "live web recharge dialog", "zengwei.godv", "live_custom_recharge_dialog_url", arrayList3);
        models.add(liveSettingModel3);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.recharge.LiveWebRechargeDialog", liveSettingModel3);
        ArrayList arrayList4 = new ArrayList();
        arrayList4.add(new Group(new r("sslocal://webcast_webview?url=https%3A%2F%2Fwww.tiktok.com%2Frecharge&show_title_bar=true&type=popup&gravity=bottom&title=TikTok.com&show_title_close=true&show_title_share=true&inapp=true&large=true"), "default group", true));
        LiveSettingModel liveSettingModel4 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.recharge.LiveWebRechargeUrl", ScopeValue.WALLET, "java.lang.String", "live_custom_recharge_card_url", new r("sslocal://webcast_webview?url=https%3A%2F%2Fwww.tiktok.com%2Frecharge&show_title_bar=true&type=popup&gravity=bottom&title=TikTok.com&show_title_close=true&show_title_share=true&inapp=true&large=true"), "live web recharge url", "zengwei.godv", "live_custom_recharge_card_url", arrayList4);
        models.add(liveSettingModel4);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.recharge.LiveWebRechargeUrl", liveSettingModel4);
        ArrayList arrayList5 = new ArrayList();
        arrayList5.add(new Group(new r((Number) 80), "default group", true));
        LiveSettingModel liveSettingModel5 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.message.HotLiveMessageSizeSetting", ScopeValue.MESSAGE, "int", "hot_live_message_size", new r((Number) 80), "The amount of the hot message", "wugelin", "hot_live_message_size", arrayList5);
        models.add(liveSettingModel5);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.message.HotLiveMessageSizeSetting", liveSettingModel5);
        ArrayList arrayList6 = new ArrayList();
        arrayList6.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel6 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.message.LiveAnchorMessageFoldTypeSetting", ScopeValue.MESSAGE, "int", "live_anchor_message_fold_type", new r((Number) 0), "the anchor side fold style for social message", "liuxiangdong.richard", "live_anchor_message_fold_type", arrayList6);
        models.add(liveSettingModel6);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.message.LiveAnchorMessageFoldTypeSetting", liveSettingModel6);
        ArrayList arrayList7 = new ArrayList();
        arrayList7.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel7 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.message.LiveMessageForceHttpSetting", ScopeValue.MESSAGE, "boolean", "live_message_force_http", new r((Boolean) false), "Live message fore to use Http", "wugelin", "live_message_force_http", arrayList7);
        models.add(liveSettingModel7);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.message.LiveMessageForceHttpSetting", liveSettingModel7);
        ArrayList arrayList8 = new ArrayList();
        arrayList8.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel8 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.message.LiveMessageListPreloadSetting", ScopeValue.MESSAGE, "int", "live_message_list_preload", new r((Number) 0), "Whether to display the message in advance without buffer in public screen.", "liuxiangdong.richard", "live_message_list_preload", arrayList8);
        models.add(liveSettingModel8);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.message.LiveMessageListPreloadSetting", liveSettingModel8);
        ArrayList arrayList9 = new ArrayList();
        arrayList9.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel9 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.message.LiveMessageManagerV2EnableSetting", ScopeValue.MESSAGE, "boolean", "live_message_manager_v2_enable", new r((Boolean) false), "Whether enable live MessageManagerV2", "wugelin", "live_message_manager_v2_enable", arrayList9);
        models.add(liveSettingModel9);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.message.LiveMessageManagerV2EnableSetting", liveSettingModel9);
        ArrayList arrayList10 = new ArrayList();
        arrayList10.add(new Group(new r((Number) 200), "default group", true));
        LiveSettingModel liveSettingModel10 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.message.LiveMessageQueueMaxLengthSetting", ScopeValue.MESSAGE, "int", "live_message_queue_max_length", new r((Number) 200), "Maximum length of gift message queue in room", "wugelin", "live_message_queue_max_length", arrayList10);
        models.add(liveSettingModel10);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.message.LiveMessageQueueMaxLengthSetting", liveSettingModel10);
        ArrayList arrayList11 = new ArrayList();
        arrayList11.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel11 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.message.LiveMessageSetting", ScopeValue.MESSAGE, "com.bytedance.android.livesdk.livesetting.message.LiveMessageConfig", "live_message_config", new r(""), "Live Message Configuration", "wugelin", "live_message_config", arrayList11);
        models.add(liveSettingModel11);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.message.LiveMessageSetting", liveSettingModel11);
        ArrayList arrayList12 = new ArrayList();
        arrayList12.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel12 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.message.LiveMessageTimeoutSetting", ScopeValue.MESSAGE, "com.bytedance.android.livesdk.model.LiveMessageTimeoutConfig", "live_message_timeout", new r(""), "live message timeout config", "wuzhongle", "live_message_timeout", arrayList12);
        models.add(liveSettingModel12);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.message.LiveMessageTimeoutSetting", liveSettingModel12);
        ArrayList arrayList13 = new ArrayList();
        arrayList13.add(new Group(new r((Number) 3), "default group", true));
        LiveSettingModel liveSettingModel13 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.message.LiveMsgTypeAlogDurationSetting", ScopeValue.MESSAGE, "int", "live_msg_type_alog_duration", new r((Number) 3), "Duration of msg type log(seconds).", "wugelin", "live_msg_type_alog_duration", arrayList13);
        models.add(liveSettingModel13);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.message.LiveMsgTypeAlogDurationSetting", liveSettingModel13);
        ArrayList arrayList14 = new ArrayList();
        arrayList14.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel14 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.message.LiveMsgTypeAlogEnableSetting", ScopeValue.MESSAGE, "boolean", "live_msg_type_alog_enable", new r((Boolean) false), "Enable message type alog in live room.", "wugelin", "live_msg_type_alog_enable", arrayList14);
        models.add(liveSettingModel14);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.message.LiveMsgTypeAlogEnableSetting", liveSettingModel14);
        ArrayList arrayList15 = new ArrayList();
        arrayList15.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel15 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.message.LiveMtPbRequestsSetting", ScopeValue.MESSAGE, "com.bytedance.android.live.network.model.RequestPb", "live_mt_pb_requests", new r(""), "Api change to PB.", "wugelin", "live_mt_pb_requests", arrayList15);
        models.add(liveSettingModel15);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.message.LiveMtPbRequestsSetting", liveSettingModel15);
        ArrayList arrayList16 = new ArrayList();
        arrayList16.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel16 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.message.LiveUplinkStrategySetting", ScopeValue.MESSAGE, "com.bytedance.android.livesdk.model.LiveUplinkConfig", "live_uplink_strategy", new r(""), "live message uplink strategy", "wuzhongle", "live_uplink_strategy", arrayList16);
        models.add(liveSettingModel16);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.message.LiveUplinkStrategySetting", liveSettingModel16);
        ArrayList arrayList17 = new ArrayList();
        arrayList17.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel17 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.message.LiveWsMessageDecodeUploadLarkCloudSetting", ScopeValue.MESSAGE, "boolean", "live_ws_message_decode_upload_lark_cloud", new r((Boolean) false), "Live message decode upload", "wugelin", "live_ws_message_decode_upload_lark_cloud", arrayList17);
        models.add(liveSettingModel17);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.message.LiveWsMessageDecodeUploadLarkCloudSetting", liveSettingModel17);
        ArrayList arrayList18 = new ArrayList();
        arrayList18.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel18 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.message.UsePbObjectJsonPassThroughSetting", ScopeValue.MESSAGE, "int", "use_pb_object_json_pass_through", new r((Number) 0), "PB pass through switch（0：close；1：readonly；2：read&write）", "wugelin", "use_pb_object_json_pass_through", arrayList18);
        models.add(liveSettingModel18);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.message.UsePbObjectJsonPassThroughSetting", liveSettingModel18);
        ArrayList arrayList19 = new ArrayList();
        arrayList19.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel19 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.firstscreen.LiveMultiPlayerDeviceScore", ScopeValue.WATCHLIVE, "com.bytedance.android.livesdk.livesetting.watchlive.firstscreen.MultiPlayerScoreLimit", "multi_player_device_score", new r(""), "multi-player device score limit", "laiyangpei", "multi_player_device_score", arrayList19);
        models.add(liveSettingModel19);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.firstscreen.LiveMultiPlayerDeviceScore", liveSettingModel19);
        ArrayList arrayList20 = new ArrayList();
        arrayList20.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel20 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.firstscreen.LiveMultiPlayerEnableSetting", ScopeValue.WATCHLIVE, "boolean", "live_multi_player_enable", new r((Boolean) false), "enable multi-player", "laiyangpei", "live_multi_player_enable", arrayList20);
        models.add(liveSettingModel20);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.firstscreen.LiveMultiPlayerEnableSetting", liveSettingModel20);
        ArrayList arrayList21 = new ArrayList();
        arrayList21.add(new Group(new r((Number) 60), "default group", true));
        LiveSettingModel liveSettingModel21 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.AudiencePingIntervalSetting", ScopeValue.WATCHLIVE, "int", "audience_ping_interval", new r((Number) 60), "Audience ping interval", "wangyan.shang", "audience_ping_interval", arrayList21);
        models.add(liveSettingModel21);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.AudiencePingIntervalSetting", liveSettingModel21);
        ArrayList arrayList22 = new ArrayList();
        arrayList22.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel22 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.BackRoomListSettingConfigSetting", ScopeValue.WATCHLIVE, "com.bytedance.android.livesdk.chatroom.model.backroom.BackRoomListSettingConfig", "back_room_list_setting_config", new r(""), "back to room list config", "laiyangpei", "back_room_list_setting_config", arrayList22);
        models.add(liveSettingModel22);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.BackRoomListSettingConfigSetting", liveSettingModel22);
        ArrayList arrayList23 = new ArrayList();
        arrayList23.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel23 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.EnableEnterRoomOptFromLiveAudienceEndSetting", ScopeValue.WATCHLIVE, "boolean", "enable_enter_room_opt_from_live_audience_end", new r((Boolean) true), "Enable optimization of  enter room:  live end page of audience", "wangyan.shang", "enable_enter_room_opt_from_live_audience_end", arrayList23);
        models.add(liveSettingModel23);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.EnableEnterRoomOptFromLiveAudienceEndSetting", liveSettingModel23);
        ArrayList arrayList24 = new ArrayList();
        arrayList24.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel24 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.EnableFeedLiveCardReusePlayerSetting", ScopeValue.WATCHLIVE, "boolean", "enable_feed_live_card_reuse_player", new r((Boolean) false), "live card reuse player", "laiyangpei", "enable_feed_live_card_reuse_player", arrayList24);
        models.add(liveSettingModel24);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.EnableFeedLiveCardReusePlayerSetting", liveSettingModel24);
        ArrayList arrayList25 = new ArrayList();
        arrayList25.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel25 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.EnablePreloadFirstScreenFrameSetting", ScopeValue.WATCHLIVE, "int", "enable_preload_first_screen_frame", new r((Number) 0), "toggle preload interaction layer", "wangyan.shang", "enable_preload_first_screen_frame", arrayList25);
        models.add(liveSettingModel25);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.EnablePreloadFirstScreenFrameSetting", liveSettingModel25);
        ArrayList arrayList26 = new ArrayList();
        arrayList26.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel26 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.EnablePreviewCardUsePreviewSetting", ScopeValue.WATCHLIVE, "int", "enable_preview_card_use_preview", new r((Number) 0), "whether enable preview card use preview", "wangyan.shang", "enable_preview_card_use_preview", arrayList26);
        models.add(liveSettingModel26);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.EnablePreviewCardUsePreviewSetting", liveSettingModel26);
        ArrayList arrayList27 = new ArrayList();
        arrayList27.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel27 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.EnableReusePlayerWithoutFirstFrameSetting", ScopeValue.WATCHLIVE, "boolean", "enable_reuse_player_without_first_frame", new r((Boolean) false), "live card reuse player when live card does not have first frame", "laiyangpei", "enable_reuse_player_without_first_frame", arrayList27);
        models.add(liveSettingModel27);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.EnableReusePlayerWithoutFirstFrameSetting", liveSettingModel27);
        ArrayList arrayList28 = new ArrayList();
        arrayList28.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel28 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.EnableSlideEnterRoomOptSetting", ScopeValue.WATCHLIVE, "boolean", "enable_slide_enter_room_opt", new r((Boolean) false), "Enable optimization of vertical slide to enter room", "wangyan.shang", "enable_slide_enter_room_opt", arrayList28);
        models.add(liveSettingModel28);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.EnableSlideEnterRoomOptSetting", liveSettingModel28);
        ArrayList arrayList29 = new ArrayList();
        arrayList29.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel29 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.EnableSlideVideoLastFrameSetting", ScopeValue.WATCHLIVE, "boolean", "enable_slide_video_last_frame", new r((Boolean) false), "Enable optimization of last frame when vertical slide to enter room", "wangyan.shang", "enable_slide_video_last_frame", arrayList29);
        models.add(liveSettingModel29);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.EnableSlideVideoLastFrameSetting", liveSettingModel29);
        ArrayList arrayList30 = new ArrayList();
        arrayList30.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel30 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.FollowFeedDrawLoopSetting", ScopeValue.WATCHLIVE, "com.bytedance.android.livesdk.live.model.LiveFollowFeedDrawLoop", "follow_feed_draw_loop", new r(""), "Follow feed draw loop.", "wangyan.shang", "follow_feed_draw_loop", arrayList30);
        models.add(liveSettingModel30);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.FollowFeedDrawLoopSetting", liveSettingModel30);
        ArrayList arrayList31 = new ArrayList();
        arrayList31.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel31 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.InRoomPreloadWebViewUrlSetting", ScopeValue.WATCHLIVE, "java.lang.String", "in_room_preload_web_view_url", new r(""), "The url of preloaded WebView information in live room.", "wangyan.shang", "in_room_preload_web_view_url", arrayList31);
        models.add(liveSettingModel31);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.InRoomPreloadWebViewUrlSetting", liveSettingModel31);
        ArrayList arrayList32 = new ArrayList();
        arrayList32.add(new Group(new r((Number) 60000), "default group", true));
        LiveSettingModel liveSettingModel32 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.InboxTopLivesCheckFinishTimeSetting", ScopeValue.WATCHLIVE, "int", "inbox_top_lives_check_finish_time", new r((Number) 60000), "the time interval of checking preload toplive feed room status. alive or not", "laiyangpei", "inbox_top_lives_check_finish_time", arrayList32);
        models.add(liveSettingModel32);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.InboxTopLivesCheckFinishTimeSetting", liveSettingModel32);
        ArrayList arrayList33 = new ArrayList();
        arrayList33.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel33 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.InboxTopLivesCollectUnreadSetting", ScopeValue.WATCHLIVE, "boolean", "inbox_top_lives_collect_unread", new r((Boolean) false), "the time interval of preload feed data", "laiyangpei", "inbox_top_lives_collect_unread", arrayList33);
        models.add(liveSettingModel33);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.InboxTopLivesCollectUnreadSetting", liveSettingModel33);
        ArrayList arrayList34 = new ArrayList();
        arrayList34.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel34 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.InboxTopLivesEnterRoomOptiSetting", ScopeValue.WATCHLIVE, "boolean", "inbox_top_lives_enter_room_opti", new r((Boolean) false), "preload toplive feed switch", "laiyangpei", "inbox_top_lives_enter_room_opti", arrayList34);
        models.add(liveSettingModel34);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.InboxTopLivesEnterRoomOptiSetting", liveSettingModel34);
        ArrayList arrayList35 = new ArrayList();
        arrayList35.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel35 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.InteractEnsureLazyLoadWidgetSetting", ScopeValue.WATCHLIVE, "boolean", "interact_ensure_lazy_load_widget", new r((Boolean) false), "lazy load widget", "laiyangpei", "interact_ensure_lazy_load_widget", arrayList35);
        models.add(liveSettingModel35);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.InteractEnsureLazyLoadWidgetSetting", liveSettingModel35);
        ArrayList arrayList36 = new ArrayList();
        Long valueOf = Long.valueOf((long) InteractFirstFrameTimeOutDurationSetting.DEFAULT);
        arrayList36.add(new Group(new r((Number) valueOf), "default group", true));
        LiveSettingModel liveSettingModel36 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.InteractFirstFrameTimeOutDurationSetting", ScopeValue.WATCHLIVE, "long", "interact_first_frame_time_out_duration", new r((Number) valueOf), "1:after room phase 2.after first frame phase", "laiyangpei", "interact_first_frame_time_out_duration", arrayList36);
        models.add(liveSettingModel36);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.InteractFirstFrameTimeOutDurationSetting", liveSettingModel36);
        ArrayList arrayList37 = new ArrayList();
        arrayList37.add(new Group(new r((Number) 2), "default group", true));
        LiveSettingModel liveSettingModel37 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.InteractStartFetchingMessageStyleSetting", ScopeValue.WATCHLIVE, "int", "interact_start_fetching_message_style", new r((Number) 2), "1:after room phase 2.after first frame phase", "laiyangpei", "interact_start_fetching_message_style", arrayList37);
        models.add(liveSettingModel37);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.InteractStartFetchingMessageStyleSetting", liveSettingModel37);
        ArrayList arrayList38 = new ArrayList();
        arrayList38.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel38 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LiveChatEnterRoomOptSetting", ScopeValue.WATCHLIVE, "int", "live_chat_enter_room_opt", new r((Number) 0), "0 is default;1 is enter room and async request room/info api;2 is enter room after api.", "laiyangpei", "live_chat_enter_room_opt", arrayList38);
        models.add(liveSettingModel38);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LiveChatEnterRoomOptSetting", liveSettingModel38);
        ArrayList arrayList39 = new ArrayList();
        arrayList39.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel39 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LiveClickEnterDelayShowLoadingTimeSetting", ScopeValue.WATCHLIVE, "int", "live_click_enter_delay_show_loading_time", new r((Number) 0), "Delay loading animation when clicking enter room, try to weaken loading animation", "laiyangpei", "live_click_enter_delay_show_loading_time", arrayList39);
        models.add(liveSettingModel39);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LiveClickEnterDelayShowLoadingTimeSetting", liveSettingModel39);
        ArrayList arrayList40 = new ArrayList();
        arrayList40.add(new Group(new r((Boolean) false), "default", true));
        arrayList40.add(new Group(new r((Boolean) true), "v1", false));
        LiveSettingModel liveSettingModel40 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LiveDrawPreEnterRoom", ScopeValue.WATCHLIVE, "boolean", "live_draw_pre_enter_room", new r((Boolean) false), "live draw pre enter room", "zengwei", "live_draw_pre_enter_room", arrayList40);
        models.add(liveSettingModel40);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LiveDrawPreEnterRoom", liveSettingModel40);
        ArrayList arrayList41 = new ArrayList();
        arrayList41.add(new Group(new r((Number) 200), "default", true));
        LiveSettingModel liveSettingModel41 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LiveDrawPreEnterRoomDelayTime", ScopeValue.WATCHLIVE, "int", "live_draw_pre_enter_room_interaction_interval", new r((Number) 200), "live draw pre enter room interaction interval", "zengwei", "live_draw_pre_enter_room_interaction_interval", arrayList41);
        models.add(liveSettingModel41);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LiveDrawPreEnterRoomDelayTime", liveSettingModel41);
        ArrayList arrayList42 = new ArrayList();
        arrayList42.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel42 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LiveEnableDrawSetting", ScopeValue.WATCHLIVE, "boolean", "live_enable_draw", new r((Boolean) false), "Enable other feed draw.", "wangyan.shang", "live_enable_draw", arrayList42);
        models.add(liveSettingModel42);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LiveEnableDrawSetting", liveSettingModel42);
        ArrayList arrayList43 = new ArrayList();
        arrayList43.add(new Group(new r((Number) 200), "default group", true));
        LiveSettingModel liveSettingModel43 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LiveEnterDelayShowLoadingTimeSetting", ScopeValue.WATCHLIVE, "int", "live_enter_delay_show_loading_time", new r((Number) 200), "Delay loading animation when vertical sliding enter room, try to weaken loading animation", "wangyan.shang", "live_enter_delay_show_loading_time", arrayList43);
        models.add(liveSettingModel43);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LiveEnterDelayShowLoadingTimeSetting", liveSettingModel43);
        ArrayList arrayList44 = new ArrayList();
        arrayList44.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel44 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LiveFeedInnerStyleSetting", ScopeValue.WATCHLIVE, "int", "live_feed_inner_style", new r((Number) 0), "Live feed inner and outer double feed, 0: disable inner feed, 1: inner feed reinsert; 2: inner feed do not reinsert", "wangyan.shang", "live_feed_inner_style", arrayList44);
        models.add(liveSettingModel44);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LiveFeedInnerStyleSetting", liveSettingModel44);
        ArrayList arrayList45 = new ArrayList();
        arrayList45.add(new Group(new r((Number) 15), "default group", true));
        LiveSettingModel liveSettingModel45 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LiveFinishPagePushTipsDaysSetting", ScopeValue.WATCHLIVE, "int", "live_finish_page_push_tips_days", new r((Number) 15), "live finish page push tips days", "shizhongyu.001", "live_finish_page_push_tips_days", arrayList45);
        models.add(liveSettingModel45);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LiveFinishPagePushTipsDaysSetting", liveSettingModel45);
        ArrayList arrayList46 = new ArrayList();
        arrayList46.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel46 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LiveFinishPagePushTipsEnableSetting", ScopeValue.WATCHLIVE, "boolean", "live_finish_page_push_tips_enable", new r((Boolean) false), "live finish page push tips enable", "shizhongyu.001", "live_finish_page_push_tips_enable", arrayList46);
        models.add(liveSettingModel46);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LiveFinishPagePushTipsEnableSetting", liveSettingModel46);
        ArrayList arrayList47 = new ArrayList();
        arrayList47.add(new Group(new r((Number) 3), "default group", true));
        LiveSettingModel liveSettingModel47 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LiveFinishPagePushTipsMaxSetting", ScopeValue.WATCHLIVE, "int", "live_finish_page_push_tips_max", new r((Number) 3), "live finish page push tips max", "shizhongyu.001", "live_finish_page_push_tips_max", arrayList47);
        models.add(liveSettingModel47);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LiveFinishPagePushTipsMaxSetting", liveSettingModel47);
        ArrayList arrayList48 = new ArrayList();
        arrayList48.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel48 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LiveFirstFrameCallbackInsertMqHeadSetting", ScopeValue.WATCHLIVE, "boolean", "live_first_frame_callback_insert_mq_head", new r((Boolean) false), "Live first frame callback message insert into mq head", "wangyan.shang", "live_first_frame_callback_insert_mq_head", arrayList48);
        models.add(liveSettingModel48);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LiveFirstFrameCallbackInsertMqHeadSetting", liveSettingModel48);
        ArrayList arrayList49 = new ArrayList();
        arrayList49.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel49 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LiveHostCardLongPressEnableSetting", ScopeValue.WATCHLIVE, "boolean", "live_host_card_long_press_enable", new r((Boolean) false), "live_host_card_long_press_enable", "wangyan.shang", "live_host_card_long_press_enable", arrayList49);
        models.add(liveSettingModel49);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LiveHostCardLongPressEnableSetting", liveSettingModel49);
        ArrayList arrayList50 = new ArrayList();
        arrayList50.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel50 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LiveIsEeaRegionSetting", ScopeValue.WATCHLIVE, "boolean", "live_is_eea_region", new r((Boolean) false), "pre-fetch room info when click", "laiyangpei", "live_is_eea_region", arrayList50);
        models.add(liveSettingModel50);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LiveIsEeaRegionSetting", liveSettingModel50);
        ArrayList arrayList51 = new ArrayList();
        arrayList51.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel51 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LiveMtFeedDrawerShowMoreLiveSetting", ScopeValue.WATCHLIVE, "boolean", "live_mt_feed_drawer_show_more_live", new r((Boolean) false), "Show drawer of more live in live room", "wangyan.shang", "live_mt_feed_drawer_show_more_live", arrayList51);
        models.add(liveSettingModel51);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LiveMtFeedDrawerShowMoreLiveSetting", liveSettingModel51);
        ArrayList arrayList52 = new ArrayList();
        arrayList52.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel52 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LiveMtForyouEntranceShowMoreLiveSetting", ScopeValue.WATCHLIVE, "boolean", "live_mt_foryou_entrance_show_more_live", new r((Boolean) false), "Show full screen live video and more live entrance in foryou feed", "wangyan.shang", "live_mt_foryou_entrance_show_more_live", arrayList52);
        models.add(liveSettingModel52);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LiveMtForyouEntranceShowMoreLiveSetting", liveSettingModel52);
        ArrayList arrayList53 = new ArrayList();
        arrayList53.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel53 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LiveMtRemoveTrafficDialogSetting", ScopeValue.WATCHLIVE, "int", "live_mt_remove_traffic_dialog", new r((Number) 0), "Remove traffic dialog in live room", "wangyan.shang", "live_mt_remove_traffic_dialog", arrayList53);
        models.add(liveSettingModel53);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LiveMtRemoveTrafficDialogSetting", liveSettingModel53);
        ArrayList arrayList54 = new ArrayList();
        arrayList54.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel54 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LiveMtRoomSlideUpGuideSetting", ScopeValue.WATCHLIVE, "com.bytedance.android.livesdk.live.model.RoomSlideUpGuide", "live_mt_room_slide_up_guide", new r(""), "The aggregation of the slide up and down guidance in live room.", "wangyan.shang", "live_mt_room_slide_up_guide", arrayList54);
        models.add(liveSettingModel54);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LiveMtRoomSlideUpGuideSetting", liveSettingModel54);
        ArrayList arrayList55 = new ArrayList();
        arrayList55.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel55 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LiveNewAudienceFinishPageSetting", ScopeValue.WATCHLIVE, "com.bytedance.android.livesdk.model.LiveNewAudienceEndModel", "live_new_audience_finish_page", new r(""), "live_new_audience_finish_page", "wangyan.shang", "live_new_audience_finish_page", arrayList55);
        models.add(liveSettingModel55);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LiveNewAudienceFinishPageSetting", liveSettingModel55);
        ArrayList arrayList56 = new ArrayList();
        arrayList56.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel56 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LiveOptEnterRoomSuccessSetting", ScopeValue.WATCHLIVE, "int", "live_opt_enter_room_success", new r((Number) 0), "live opt enter room success", "zengwei.godv", "live_opt_enter_room_success", arrayList56);
        models.add(liveSettingModel56);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LiveOptEnterRoomSuccessSetting", liveSettingModel56);
        ArrayList arrayList57 = new ArrayList();
        arrayList57.add(new Group(new r((Boolean) false), "default", true));
        arrayList57.add(new Group(new r((Boolean) true), "v1", false));
        LiveSettingModel liveSettingModel57 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LiveOptRoomNetUnavailable", ScopeValue.WATCHLIVE, "boolean", "live_opt_room_net_unavailable", new r((Boolean) false), "live opt room net unavailable", "zengwei", "live_opt_room_net_unavailable", arrayList57);
        models.add(liveSettingModel57);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LiveOptRoomNetUnavailable", liveSettingModel57);
        ArrayList arrayList58 = new ArrayList();
        arrayList58.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel58 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LiveOptSchemaWatchLiveSetting", ScopeValue.WATCHLIVE, "boolean", "live_opt_schema_watch_live", new r((Boolean) true), "opt schema watch live code", "chenyue.200", "live_opt_schema_watch_live", arrayList58);
        models.add(liveSettingModel58);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LiveOptSchemaWatchLiveSetting", liveSettingModel58);
        ArrayList arrayList59 = new ArrayList();
        arrayList59.add(new Group(new r(""), "default", true));
        LiveSettingModel liveSettingModel59 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LivePaidEventSchema", ScopeValue.WATCHLIVE, "java.lang.String", "live_paid_event_recharge_page", new r(""), "live paid event schema", "zengwei", "live_paid_event_recharge_page", arrayList59);
        models.add(liveSettingModel59);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LivePaidEventSchema", liveSettingModel59);
        ArrayList arrayList60 = new ArrayList();
        arrayList60.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel60 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LivePerformanceMonitorSetting", ScopeValue.BROADCAST, "int", "live_performance_monitor_type", new r((Number) 0), "live performance monitor type", "shizhongyu.001", "live_performance_monitor_type", arrayList60);
        models.add(liveSettingModel60);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LivePerformanceMonitorSetting", liveSettingModel60);
        ArrayList arrayList61 = new ArrayList();
        arrayList61.add(new Group(new r((Number) 1), "default group", true));
        LiveSettingModel liveSettingModel61 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LivePlayerErrorCountSetting", ScopeValue.WATCHLIVE, "int", "live_player_error_count", new r((Number) 1), "enter room link session upload count", "wangyan.shang", "live_player_error_count", arrayList61);
        models.add(liveSettingModel61);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LivePlayerErrorCountSetting", liveSettingModel61);
        ArrayList arrayList62 = new ArrayList();
        arrayList62.add(new Group(new r((Boolean) false), "control_group", true));
        arrayList62.add(new Group(new r((Boolean) true), "experimental_group", false));
        LiveSettingModel liveSettingModel62 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LivePlayerPullStreamLogCpuMemoryOptimizationSetting", ScopeValue.WATCHLIVE, "boolean", "player_pull_stream_log_opt", new r((Boolean) false), "\n    The setting controls whether to enable the optimization of reading the cpu and memory info \n    when live player pull stream logging. \n    When enabled:\n    1. The cpu and memory info will be acquired from cache instead of reading immediately \n    2. We will remove the `start_memory` and `live_pull_memory` logging field\n    3. The amount of event tracks which need to read memory will be limited to \n    only 4 (`playing` | `first_frame` | `render_stall` | `decode_stall`).\n    ", "lixinyang.a", "player_pull_stream_log_opt", arrayList62);
        models.add(liveSettingModel62);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LivePlayerPullStreamLogCpuMemoryOptimizationSetting", liveSettingModel62);
        ArrayList arrayList63 = new ArrayList();
        arrayList63.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel63 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LivePreCreateSurfaceSetting", ScopeValue.WATCHLIVE, "boolean", "live_pre_create_surface", new r((Boolean) false), "pre create surface", "laiyangpei", "live_pre_create_surface", arrayList63);
        models.add(liveSettingModel63);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LivePreCreateSurfaceSetting", liveSettingModel63);
        ArrayList arrayList64 = new ArrayList();
        arrayList64.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel64 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LivePrefetchRoomInfoEveryTimeSetting", ScopeValue.WATCHLIVE, "int", "live_prefetch_room_info_every_time", new r((Number) 0), "pre-fetch room info when click", "laiyangpei", "live_prefetch_room_info_every_time", arrayList64);
        models.add(liveSettingModel64);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LivePrefetchRoomInfoEveryTimeSetting", liveSettingModel64);
        ArrayList arrayList65 = new ArrayList();
        arrayList65.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel65 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LivePrefetchRoomInfoSetting", ScopeValue.WATCHLIVE, "int", "live_prefetch_room_info", new r((Number) 0), "pre-fetch room info when click", "wangyan.shang", "live_prefetch_room_info", arrayList65);
        models.add(liveSettingModel65);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LivePrefetchRoomInfoSetting", liveSettingModel65);
        ArrayList arrayList66 = new ArrayList();
        arrayList66.add(new Group(new r((Number) 60000), "default group", true));
        LiveSettingModel liveSettingModel66 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LivePreloadInboxFeedFetchIntervalSetting", ScopeValue.WATCHLIVE, "int", "live_preload_inbox_feed_fetch_interval", new r((Number) 60000), "the time interval of preload feed data", "laiyangpei", "live_preload_inbox_feed_fetch_interval", arrayList66);
        models.add(liveSettingModel66);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LivePreloadInboxFeedFetchIntervalSetting", liveSettingModel66);
        ArrayList arrayList67 = new ArrayList();
        arrayList67.add(new Group(new r((Number) -1), "control_group", true));
        arrayList67.add(new Group(new r((Number) 1), "experimental_group", false));
        LiveSettingModel liveSettingModel67 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LivePreviewCardEnableSrSetting", ScopeValue.WATCHLIVE, "int", "live_sdk_preview_sr_support", new r((Number) -1), "whether to enable sr support in live preview card", "lixinyang.a", "live_sdk_preview_sr_support", arrayList67);
        models.add(liveSettingModel67);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LivePreviewCardEnableSrSetting", liveSettingModel67);
        ArrayList arrayList68 = new ArrayList();
        arrayList68.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel68 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LiveReplayFaqSetting", ScopeValue.WATCHLIVE, "java.lang.String", "live_replay_faq", new r(""), "live replay FAQ", "zengwei.godv", "live_replay_faq", arrayList68);
        models.add(liveSettingModel68);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LiveReplayFaqSetting", liveSettingModel68);
        ArrayList arrayList69 = new ArrayList();
        arrayList69.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel69 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LiveSubscribeLynxUrl", ScopeValue.WATCHLIVE, "com.bytedance.android.livesdk.livesetting.model.LiveSubscribeLynxMap", "live_subscription_lynx_url", new r(""), "live subscription lynx url map", "sunqiang.2759", "live_subscription_lynx_url", arrayList69);
        models.add(liveSettingModel69);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LiveSubscribeLynxUrl", liveSettingModel69);
        ArrayList arrayList70 = new ArrayList();
        arrayList70.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel70 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LiveTestEnableRoomStreamToastSetting", ScopeValue.WATCHLIVE, "boolean", "live_test_enable_room_stream_toast", new r((Boolean) false), "During the test, turn on the Toast prompt for the incoming room address.", "wangyan.shang", "live_test_enable_room_stream_toast", arrayList70);
        models.add(liveSettingModel70);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LiveTestEnableRoomStreamToastSetting", liveSettingModel70);
        ArrayList arrayList71 = new ArrayList();
        arrayList71.add(new Group(new r((Boolean) false), "default", true));
        arrayList71.add(new Group(new r((Boolean) true), "v1", false));
        LiveSettingModel liveSettingModel71 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LiveUseSurfaceViewExperiment", ScopeValue.WATCHLIVE, "boolean", "live_use_surface_view", new r((Boolean) false), "textureView to surfaceView", "laiyangpei", "live_use_surface_view", arrayList71);
        models.add(liveSettingModel71);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LiveUseSurfaceViewExperiment", liveSettingModel71);
        ArrayList arrayList72 = new ArrayList();
        arrayList72.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel72 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.LiveViewpagerSlideBlockSwitchSetting", ScopeValue.WATCHLIVE, "boolean", "live_viewpager_slide_block_switch", new r((Boolean) false), "Enable optimization of viewpager slide block switch", "wangyan.shang", "live_viewpager_slide_block_switch", arrayList72);
        models.add(liveSettingModel72);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.LiveViewpagerSlideBlockSwitchSetting", liveSettingModel72);
        ArrayList arrayList73 = new ArrayList();
        arrayList73.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel73 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.MtPipWatchLiveEnableSetting", ScopeValue.WATCHLIVE, "boolean", "mt_pip_watch_live_enable", new r((Boolean) false), "is PIP enable", "laiyangpei", "mt_pip_watch_live_enable", arrayList73);
        models.add(liveSettingModel73);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.MtPipWatchLiveEnableSetting", liveSettingModel73);
        ArrayList arrayList74 = new ArrayList();
        arrayList74.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel74 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.MtPipWatchLiveUnderWindowFocusSetting", ScopeValue.WATCHLIVE, "boolean", "mt_pip_watch_live_under_window_focus", new r((Boolean) true), "if window focus, it can enter pip", "laiyangpei", "mt_pip_watch_live_under_window_focus", arrayList74);
        models.add(liveSettingModel74);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.MtPipWatchLiveUnderWindowFocusSetting", liveSettingModel74);
        ArrayList arrayList75 = new ArrayList();
        arrayList75.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel75 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.MtPlayerInvokeStopBeforePlaySetting", ScopeValue.WATCHLIVE, "boolean", "mt_player_invoke_stop_before_play", new r((Boolean) false), "when enter live room, player is playing before next play, invoke player stop", "laiyangpei", "mt_player_invoke_stop_before_play", arrayList75);
        models.add(liveSettingModel75);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.MtPlayerInvokeStopBeforePlaySetting", liveSettingModel75);
        ArrayList arrayList76 = new ArrayList();
        arrayList76.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel76 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.PipModeBrandListSetting", ScopeValue.WATCHLIVE, "java.lang.String[]", "pip_mode_brand_list", new r(""), "Brands that do not support picture-in-picture mode for gesture navigation", "laiyangpei", "pip_mode_brand_list", arrayList76);
        models.add(liveSettingModel76);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.PipModeBrandListSetting", liveSettingModel76);
        ArrayList arrayList77 = new ArrayList();
        arrayList77.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel77 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.PipModeHandnaviEnableSetting", ScopeValue.WATCHLIVE, "boolean", "pip_mode_handnavi_enable", new r((Boolean) false), "Whether gesture navigation allows picture-in-picture mode", "laiyangpei", "pip_mode_handnavi_enable", arrayList77);
        models.add(liveSettingModel77);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.PipModeHandnaviEnableSetting", liveSettingModel77);
        ArrayList arrayList78 = new ArrayList();
        arrayList78.add(new Group(new r((Boolean) false), "default", true));
        arrayList78.add(new Group(new r((Boolean) true), "v1", false));
        LiveSettingModel liveSettingModel78 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.SearchCardReusePlayerSetting", ScopeValue.WATCHLIVE, "boolean", "enable_search_live_card_reuse_player", new r((Boolean) false), "search live card reuse player", "laiyangpei", "enable_search_live_card_reuse_player", arrayList78);
        models.add(liveSettingModel78);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.SearchCardReusePlayerSetting", liveSettingModel78);
        ArrayList arrayList79 = new ArrayList();
        arrayList79.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel79 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.SearchLiveCardReusePlayerSetting", ScopeValue.WATCHLIVE, "boolean", "search_live_card_reuse_player", new r((Boolean) true), "search_live_card_reuse_player", "chenyue.200", "search live card reuse player", arrayList79);
        models.add(liveSettingModel79);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.SearchLiveCardReusePlayerSetting", liveSettingModel79);
        ArrayList arrayList80 = new ArrayList();
        arrayList80.add(new Group(new r((Number) 0), "default_group", true));
        arrayList80.add(new Group(new r((Number) 1), "experiment_group", false));
        LiveSettingModel liveSettingModel80 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.ShowAudienceDefinitionSelectionSetting", ScopeValue.WATCHLIVE, "int", "show_audience_definition_selection", new r((Number) 0), "Show audience definition selection button", "lijianchang", "show_audience_definition_selection", arrayList80);
        models.add(liveSettingModel80);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.ShowAudienceDefinitionSelectionSetting", liveSettingModel80);
        ArrayList arrayList81 = new ArrayList();
        arrayList81.add(new Group(new r((Boolean) false), "default", true));
        arrayList81.add(new Group(new r((Boolean) true), "v1", false));
        LiveSettingModel liveSettingModel81 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.ShowBackgroundBelowVideoExperiment", ScopeValue.WATCHLIVE, "boolean", "show_background_below_video", new r((Boolean) false), "Show background below video", "laiyangpei", "show_background_below_video", arrayList81);
        models.add(liveSettingModel81);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.ShowBackgroundBelowVideoExperiment", liveSettingModel81);
        ArrayList arrayList82 = new ArrayList();
        Float valueOf2 = Float.valueOf(-1.0f);
        arrayList82.add(new Group(new r((Number) valueOf2), "default group", true));
        LiveSettingModel liveSettingModel82 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.TTliveAudienceDeviceRatingLowSetting", ScopeValue.WATCHLIVE, "float", "ttlive_audience_device_rating_low", new r((Number) valueOf2), "low device benchmark score", "laiyangpei", "ttlive_audience_device_rating_low", arrayList82);
        models.add(liveSettingModel82);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.TTliveAudienceDeviceRatingLowSetting", liveSettingModel82);
        ArrayList arrayList83 = new ArrayList();
        arrayList83.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel83 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.TestDisableCameraCaptureSetting", ScopeValue.PERFORMANCE, "boolean", "test_disable_camera_capture", new r((Boolean) false), "shield camera capture", "zengwei.godv", "test_disable_camera_capture", arrayList83);
        models.add(liveSettingModel83);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.TestDisableCameraCaptureSetting", liveSettingModel83);
        ArrayList arrayList84 = new ArrayList();
        arrayList84.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel84 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.TestDisableCommentAreaSetting", ScopeValue.PERFORMANCE, "boolean", "test_disable_comment_area", new r((Boolean) false), "shield comment area", "zengwei.godv", "test_disable_comment_area", arrayList84);
        models.add(liveSettingModel84);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.TestDisableCommentAreaSetting", liveSettingModel84);
        ArrayList arrayList85 = new ArrayList();
        arrayList85.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel85 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.TestDisableEffectSetting", ScopeValue.PERFORMANCE, "boolean", "test_disable_effect", new r((Boolean) false), "shield effect", "zengwei.godv", "test_disable_effect", arrayList85);
        models.add(liveSettingModel85);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.TestDisableEffectSetting", liveSettingModel85);
        ArrayList arrayList86 = new ArrayList();
        arrayList86.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel86 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.TestDisableMixStreamTypeSetting", ScopeValue.PERFORMANCE, "boolean", "test_disable_mix_stream_type", new r((Boolean) false), "mix stream type", "zengwei.godv", "test_disable_mix_stream_type", arrayList86);
        models.add(liveSettingModel86);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.TestDisableMixStreamTypeSetting", liveSettingModel86);
        ArrayList arrayList87 = new ArrayList();
        arrayList87.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel87 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.TestDisableNormalGiftSetting", ScopeValue.PERFORMANCE, "boolean", "test_disable_normal_gift", new r((Boolean) false), "shield normal gift", "zengwei.godv", "test_disable_normal_gift", arrayList87);
        models.add(liveSettingModel87);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.TestDisableNormalGiftSetting", liveSettingModel87);
        ArrayList arrayList88 = new ArrayList();
        arrayList88.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel88 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.TestDisablePullStreamInfoSetting", ScopeValue.PERFORMANCE, "boolean", "test_disable_pull_stream_info", new r((Boolean) false), "stream info", "zengwei.godv", "test_disable_pull_stream_info", arrayList88);
        models.add(liveSettingModel88);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.TestDisablePullStreamInfoSetting", liveSettingModel88);
        ArrayList arrayList89 = new ArrayList();
        arrayList89.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel89 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.TestDisablePullStreamSetting", ScopeValue.PERFORMANCE, "boolean", "test_disable_pull_stream", new r((Boolean) false), "shield pull stream", "zengwei.godv", "test_disable_pull_stream", arrayList89);
        models.add(liveSettingModel89);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.TestDisablePullStreamSetting", liveSettingModel89);
        ArrayList arrayList90 = new ArrayList();
        arrayList90.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel90 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.TestDisablePushStreamSetting", ScopeValue.PERFORMANCE, "boolean", "test_disable_push_stream", new r((Boolean) false), "shield push stream", "zengwei.godv", "test_disable_push_stream", arrayList90);
        models.add(liveSettingModel90);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.TestDisablePushStreamSetting", liveSettingModel90);
        ArrayList arrayList91 = new ArrayList();
        arrayList91.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel91 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.TestDisableStreamPreviewSetting", ScopeValue.PERFORMANCE, "boolean", "test_disable_stream_preview", new r((Boolean) false), "shield stream preview", "zengwei.godv", "test_disable_stream_preview", arrayList91);
        models.add(liveSettingModel91);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.TestDisableStreamPreviewSetting", liveSettingModel91);
        ArrayList arrayList92 = new ArrayList();
        arrayList92.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel92 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.TestDisableVideoGiftSetting", ScopeValue.PERFORMANCE, "boolean", "test_disable_video_gift", new r((Boolean) false), "shield video gift", "zengwei.godv", "test_disable_video_gift", arrayList92);
        models.add(liveSettingModel92);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.TestDisableVideoGiftSetting", liveSettingModel92);
        ArrayList arrayList93 = new ArrayList();
        arrayList93.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel93 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.watchlive.TestStreamConfigSetting", ScopeValue.PERFORMANCE, "com.bytedance.android.livesdk.config.LiveStreamTestConfig", "test_stream_config", new r(""), "stream config", "zengwei.godv", "test_stream_config", arrayList93);
        models.add(liveSettingModel93);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.watchlive.TestStreamConfigSetting", liveSettingModel93);
        ArrayList arrayList94 = new ArrayList();
        arrayList94.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel94 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.wallet.CanRechargeSetting", ScopeValue.WALLET, "boolean", "can_recharge", new r((Boolean) true), "The recharge switch", "zengwei.godv", "can_recharge", arrayList94);
        models.add(liveSettingModel94);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.wallet.CanRechargeSetting", liveSettingModel94);
        ArrayList arrayList95 = new ArrayList();
        arrayList95.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel95 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.wallet.FirstChargeSetting", ScopeValue.WALLET, "com.bytedance.android.livesdk.model.FirstChargeTipInfo", "first_charge", new r(""), "settings of first charge guide", "zengwei.godv", "first_charge", arrayList95);
        models.add(liveSettingModel95);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.wallet.FirstChargeSetting", liveSettingModel95);
        ArrayList arrayList96 = new ArrayList();
        arrayList96.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel96 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.wallet.HideChargeIconForUserSetting", ScopeValue.WALLET, "boolean", "hide_charge_icon_for_user", new r((Boolean) false), "Hide Recharge Icon", "zengwei.godv", "hide_charge_icon_for_user", arrayList96);
        models.add(liveSettingModel96);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.wallet.HideChargeIconForUserSetting", liveSettingModel96);
        ArrayList arrayList97 = new ArrayList();
        arrayList97.add(new Group(new r("sslocal://webcast_lynxview?type=fullscreen&url=https%3A%2F%2Ftosv.byted.org%2Fobj%2Fgecko-internal-sg%2Fmusically%2Ffe%2Flive%2Ftiktok_live_revenue%2Frevenue%2Fpages%2Fguide%2Ffeedback-and-guide.js&web_bg_color=FFFFFF&hide_nav_bar=1"), "default group", true));
        LiveSettingModel liveSettingModel97 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.wallet.LiveCustomRechargeFeedbackUrlSetting", ScopeValue.WALLET, "java.lang.String", "live_custom_recharge_feedback_url", new r("sslocal://webcast_lynxview?type=fullscreen&url=https%3A%2F%2Ftosv.byted.org%2Fobj%2Fgecko-internal-sg%2Fmusically%2Ffe%2Flive%2Ftiktok_live_revenue%2Frevenue%2Fpages%2Fguide%2Ffeedback-and-guide.js&web_bg_color=FFFFFF&hide_nav_bar=1"), "live recharge report url", "zengwei.godv", "live_custom_recharge_feedback_url", arrayList97);
        models.add(liveSettingModel97);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.wallet.LiveCustomRechargeFeedbackUrlSetting", liveSettingModel97);
        ArrayList arrayList98 = new ArrayList();
        arrayList98.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel98 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.wallet.LiveEnableRechargeSucceedAnimationSetting", ScopeValue.WALLET, "boolean", "live_enable_recharge_succeed_animation", new r((Boolean) false), "enable recharge succeed animation", "zhutianye", "live_enable_recharge_succeed_animation", arrayList98);
        models.add(liveSettingModel98);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.wallet.LiveEnableRechargeSucceedAnimationSetting", liveSettingModel98);
        ArrayList arrayList99 = new ArrayList();
        arrayList99.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel99 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.wallet.LiveFirstRechargeUpgradePackageSetting", ScopeValue.WALLET, "com.bytedance.android.livesdk.model.FirstChargeRewardList", "live_first_recharge_upgrade_package", new r(""), "The Configuration of the First Charge", "zengwei.godv", "live_first_recharge_upgrade_package", arrayList99);
        models.add(liveSettingModel99);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.wallet.LiveFirstRechargeUpgradePackageSetting", liveSettingModel99);
        ArrayList arrayList100 = new ArrayList();
        arrayList100.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel100 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.wallet.LiveFirstRechargeUpgradePackageV2Setting", ScopeValue.WALLET, "com.bytedance.android.livesdk.model.FirstChargeRewardV2List", "live_first_recharge_upgrade_package_v2", new r(""), "The Configuration of the First Charge for Vigo, Edition 2", "zengwei.godv", "live_first_recharge_upgrade_package_v2", arrayList100);
        models.add(liveSettingModel100);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.wallet.LiveFirstRechargeUpgradePackageV2Setting", liveSettingModel100);
    }

    private static void findSettingsMethod_5() {
        ArrayList arrayList = new ArrayList();
        arrayList.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.wallet.LiveFullScreenRechargeUrlSetting", ScopeValue.WALLET, "java.lang.String", "live_full_screen_recharge_url", new r(""), "Hotsoon full screen recharge url.", "zengwei.godv", "live_full_screen_recharge_url", arrayList);
        models.add(liveSettingModel);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.wallet.LiveFullScreenRechargeUrlSetting", liveSettingModel);
        ArrayList arrayList2 = new ArrayList();
        arrayList2.add(new Group(new r((Number) 18), "default group", true));
        LiveSettingModel liveSettingModel2 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.wallet.LiveRechargeAgeThresholdSetting", ScopeValue.WALLET, "int", "live_recharge_age_threshold", new r((Number) 18), "Age threshold of recharge", "zengwei.godv", "live_recharge_age_threshold", arrayList2);
        models.add(liveSettingModel2);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.wallet.LiveRechargeAgeThresholdSetting", liveSettingModel2);
        ArrayList arrayList3 = new ArrayList();
        arrayList3.add(new Group(new r("sslocal://webcast_lynxview?type=fullscreen&url=https%3A%2F%2Ftosv.byted.org%2Fobj%2Fgecko-internal-sg%2Fmusically%2Ffe%2Flive%2Ftiktok_live_revenue%2Frevenue%2Fpages%2Fguide%2Ffeedback-and-guide.js&web_bg_color=FFFFFF&hide_nav_bar=1"), "default group", true));
        LiveSettingModel liveSettingModel3 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.wallet.LiveRechargeContactUsUrlSetting", ScopeValue.WALLET, "java.lang.String", "live_recharge_contact_us_url", new r("sslocal://webcast_lynxview?type=fullscreen&url=https%3A%2F%2Ftosv.byted.org%2Fobj%2Fgecko-internal-sg%2Fmusically%2Ffe%2Flive%2Ftiktok_live_revenue%2Frevenue%2Fpages%2Fguide%2Ffeedback-and-guide.js&web_bg_color=FFFFFF&hide_nav_bar=1"), "live recharge report url", "zengwei.godv", "live_recharge_contact_us_url", arrayList3);
        models.add(liveSettingModel3);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.wallet.LiveRechargeContactUsUrlSetting", liveSettingModel3);
        ArrayList arrayList4 = new ArrayList();
        arrayList4.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel4 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.wallet.LiveRechargeDialogTypeSetting", ScopeValue.WALLET, "int", "live_recharge_dialog_type", new r((Number) 0), "Live Room Recharge Dialog Pop up Method", "zengwei.godv", "live_recharge_dialog_type", arrayList4);
        models.add(liveSettingModel4);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.wallet.LiveRechargeDialogTypeSetting", liveSettingModel4);
        ArrayList arrayList5 = new ArrayList();
        arrayList5.add(new Group(new r("aweme://webview/?hide_nav_bar=1&url=https%3A%2F%2Fwww.tiktok.com%2Finapp%2Ffeedback%2Fmain%2F%3Fhide_nav_bar%3D1%26id%3D13000%26isfromfaq%3D1"), "default group", true));
        LiveSettingModel liveSettingModel5 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.wallet.LiveRechargeFeedbackUrlSetting", ScopeValue.WALLET, "java.lang.String", "live_recharge_feedback_url", new r("aweme://webview/?hide_nav_bar=1&url=https%3A%2F%2Fwww.tiktok.com%2Finapp%2Ffeedback%2Fmain%2F%3Fhide_nav_bar%3D1%26id%3D13000%26isfromfaq%3D1"), "show faq dialog", "zhutianye", "live_recharge_feedback_url", arrayList5);
        models.add(liveSettingModel5);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.wallet.LiveRechargeFeedbackUrlSetting", liveSettingModel5);
        ArrayList arrayList6 = new ArrayList();
        arrayList6.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel6 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.wallet.LiveRechargeUrlSetting", ScopeValue.WALLET, "java.lang.String", "live_recharge_url", new r(""), "Hotsoon half screen recharge url.", "zengwei.godv", "live_recharge_url", arrayList6);
        models.add(liveSettingModel6);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.wallet.LiveRechargeUrlSetting", liveSettingModel6);
        ArrayList arrayList7 = new ArrayList();
        arrayList7.add(new Group(new r((Number) 1), "default group", true));
        LiveSettingModel liveSettingModel7 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.wallet.LiveRoomChargeTypeSetting", ScopeValue.WALLET, "int", "live_room_charge_type", new r((Number) 1), "charge dialog or jump to page", "zengwei.godv", "live_room_charge_type", arrayList7);
        models.add(liveSettingModel7);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.wallet.LiveRoomChargeTypeSetting", liveSettingModel7);
        ArrayList arrayList8 = new ArrayList();
        arrayList8.add(new Group(new r("aweme://webview/?hide_nav_bar=1&url=https%3A%2F%2Fwww.tiktok.com%2Finapp%2Ffeedback%2Fmain%2F%3Fhide_nav_bar%3D1%26id%3D13000%26isfromfaq%3D1"), "default group", true));
        LiveSettingModel liveSettingModel8 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.wallet.LiveSubscribeFeedbackUrlSetting", ScopeValue.WALLET, "java.lang.String", "live_subscribe_feedback_url", new r("aweme://webview/?hide_nav_bar=1&url=https%3A%2F%2Fwww.tiktok.com%2Finapp%2Ffeedback%2Fmain%2F%3Fhide_nav_bar%3D1%26id%3D13000%26isfromfaq%3D1"), "show faq dialog", "zhutianye", "live_subscribe_feedback_url", arrayList8);
        models.add(liveSettingModel8);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.wallet.LiveSubscribeFeedbackUrlSetting", liveSettingModel8);
        ArrayList arrayList9 = new ArrayList();
        arrayList9.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel9 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.wallet.ShowExchangeScoreSetting", ScopeValue.WALLET, "int", "show_exchange_score", new r((Number) 0), "The switch for exchanging from fire to diamond", "zengwei.godv", "show_exchange_score", arrayList9);
        models.add(liveSettingModel9);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.wallet.ShowExchangeScoreSetting", liveSettingModel9);
        ArrayList arrayList10 = new ArrayList();
        arrayList10.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel10 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.wallet.ShowHuoliBuyDiamondSetting", ScopeValue.WALLET, "int", "show_huoli_buy_diamond", new r((Number) 0), "The switch of showing remain amount shopping", "zengwei.godv", "show_huoli_buy_diamond", arrayList10);
        models.add(liveSettingModel10);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.wallet.ShowHuoliBuyDiamondSetting", liveSettingModel10);
        ArrayList arrayList11 = new ArrayList();
        arrayList11.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel11 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.wallet.TTlivePayTypeSetting", ScopeValue.WALLET, "int", "ttlive_pay_type", new r((Number) 0), "Cash Desk : 0, Finance: 1", "zengwei.godv", "ttlive_pay_type", arrayList11);
        models.add(liveSettingModel11);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.wallet.TTlivePayTypeSetting", liveSettingModel11);
        ArrayList arrayList12 = new ArrayList();
        arrayList12.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel12 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.wallet.VigoFlameDiamondGuideSwitchSetting", ScopeValue.WALLET, "boolean", "vigo_flame_diamond_guide_switch", new r((Boolean) false), "Whether to show flame diamond guide", "zengwei.godv", "vigo_flame_diamond_guide_switch", arrayList12);
        models.add(liveSettingModel12);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.wallet.VigoFlameDiamondGuideSwitchSetting", liveSettingModel12);
        ArrayList arrayList13 = new ArrayList();
        arrayList13.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel13 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.wallet.WalletEducationPopupRechargeUrlSetting", ScopeValue.WALLET, "java.lang.String", "wallet_education_popup_recharge_url", new r(""), "wallet_education_popup_recharge_url", "sunqiang.2759", "wallet_education_popup_recharge_url", arrayList13);
        models.add(liveSettingModel13);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.wallet.WalletEducationPopupRechargeUrlSetting", liveSettingModel13);
        ArrayList arrayList14 = new ArrayList();
        arrayList14.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel14 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.wallet.WalletToLiveJsbSetting", ScopeValue.WALLET, "boolean", "wallet_to_live_jsb", new r((Boolean) false), "Wallet page use live jsb or wallet jsb", "zengwei.godv", "wallet_to_live_jsb", arrayList14);
        models.add(liveSettingModel14);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.wallet.WalletToLiveJsbSetting", liveSettingModel14);
        ArrayList arrayList15 = new ArrayList();
        arrayList15.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel15 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.rank.AutoRefreshRankListSetting", ScopeValue.RANK, "com.bytedance.android.livesdk.livesetting.rank.AutoRefreshRankInterval", "live_refresh_ranklist_interval", new r(""), "live_refresh_ranklist_interval", "mengqingyu.21", "live_refresh_ranklist_interval", arrayList15);
        models.add(liveSettingModel15);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.rank.AutoRefreshRankListSetting", liveSettingModel15);
        ArrayList arrayList16 = new ArrayList();
        arrayList16.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel16 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.rank.AutoRefreshWeeklyRankListSetting", ScopeValue.RANK, "boolean", "live_auto_refresh_ranklist", new r((Boolean) true), "", "liukan.kk", "live_auto_refresh_ranklist", arrayList16);
        models.add(liveSettingModel16);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.rank.AutoRefreshWeeklyRankListSetting", liveSettingModel16);
        ArrayList arrayList17 = new ArrayList();
        arrayList17.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel17 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.rank.HourlyRankEnableSetting", ScopeValue.RANK, "int", "hourly_rank_enable", new r((Number) 0), "tabs style of daily rank", "liukan.kk", "hourly_rank_enable", arrayList17);
        models.add(liveSettingModel17);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.rank.HourlyRankEnableSetting", liveSettingModel17);
        ArrayList arrayList18 = new ArrayList();
        arrayList18.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel18 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.rank.LiveEnableRankListSlideWithRoomIdsFeedDrawerSettings", ScopeValue.RANK, "boolean", "live_enable_ranklist_slide_with_roomids_feed_drawer", new r((Boolean) false), "Enable vertical slide in normal live room when come from daily rank", "liukan.kk", "live_enable_ranklist_slide_with_roomids_feed_drawer", arrayList18);
        models.add(liveSettingModel18);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.rank.LiveEnableRankListSlideWithRoomIdsFeedDrawerSettings", liveSettingModel18);
        ArrayList arrayList19 = new ArrayList();
        arrayList19.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel19 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.rank.LiveEnableRankListSlideWithRoomIdsSettings", ScopeValue.RANK, "boolean", "live_enable_ranklist_slide_with_roomids", new r((Boolean) false), "Enable vertical slide in normal live room when come from daily rank", "liukan.kk", "live_enable_ranklist_slide_with_roomids", arrayList19);
        models.add(liveSettingModel19);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.rank.LiveEnableRankListSlideWithRoomIdsSettings", liveSettingModel19);
        ArrayList arrayList20 = new ArrayList();
        arrayList20.add(new Group(new r((Number) 99), "default group", true));
        LiveSettingModel liveSettingModel20 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.rank.LiveHourlyRankLengthSetting", ScopeValue.RANK, "int", "live_hourrank_length", new r((Number) 99), "length or threshold of the hourly rank", "tangwenjing.666", "live_hourrank_length", arrayList20);
        models.add(liveSettingModel20);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.rank.LiveHourlyRankLengthSetting", liveSettingModel20);
        ArrayList arrayList21 = new ArrayList();
        arrayList21.add(new Group(new r((Number) 3000), "default group", true));
        LiveSettingModel liveSettingModel21 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.rank.LiveHourlyRankQueryEntranceDelaySetting", ScopeValue.RANK, "int", "live_hourly_rank_query_entrance_delay", new r((Number) 3000), "delay for querying the entrance api of the hourly rank", "liuxiangdong.richard", "live_hourly_rank_query_entrance_delay", arrayList21);
        models.add(liveSettingModel21);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.rank.LiveHourlyRankQueryEntranceDelaySetting", liveSettingModel21);
        ArrayList arrayList22 = new ArrayList();
        arrayList22.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel22 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.rank.LiveRankAnchorConfigSetting", ScopeValue.RANK, "com.bytedance.android.livesdk.model.LiveRankAnchorConfig", "live_rank_anchor_config", new r(""), "settings of anchor's rank", "liukan.kk", "live_rank_anchor_config", arrayList22);
        models.add(liveSettingModel22);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.rank.LiveRankAnchorConfigSetting", liveSettingModel22);
        ArrayList arrayList23 = new ArrayList();
        arrayList23.add(new Group(new r("#6DA0FD"), "default group", true));
        LiveSettingModel liveSettingModel23 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.rank.RankComboColorSetting", ScopeValue.RANK, "java.lang.String", "live_weekly_bonus_combo_color", new r("#6DA0FD"), "weekly rank combo background color", "liukan.kk", "live_weekly_bonus_combo_color", arrayList23);
        models.add(liveSettingModel23);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.rank.RankComboColorSetting", liveSettingModel23);
        ArrayList arrayList24 = new ArrayList();
        arrayList24.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel24 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.rank.RankSupportAreaSetting", ScopeValue.RANK, "boolean", "live_rank_regions", new r((Boolean) false), "whether the user is in rank support areas.", "liukan.kk", "live_rank_regions", arrayList24);
        models.add(liveSettingModel24);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.rank.RankSupportAreaSetting", liveSettingModel24);
        ArrayList arrayList25 = new ArrayList();
        arrayList25.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel25 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.rank.RanklistInfoSetting", ScopeValue.RANK, "com.bytedance.android.livesdk.model.RankInfoList", "ranklist_info", new r(""), "More Anchor Avatar Data", "liukan.kk", "ranklist_info", arrayList25);
        models.add(liveSettingModel25);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.rank.RanklistInfoSetting", liveSettingModel25);
        ArrayList arrayList26 = new ArrayList();
        arrayList26.add(new Group(new r((Number) 1), "default group", true));
        LiveSettingModel liveSettingModel26 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.rank.RoomRankEnableSetting", ScopeValue.RANK, "int", "room_rank_enable", new r((Number) 1), "tabs style of user rank", "liukan.kk", "room_rank_enable", arrayList26);
        models.add(liveSettingModel26);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.rank.RoomRankEnableSetting", liveSettingModel26);
        ArrayList arrayList27 = new ArrayList();
        arrayList27.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel27 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.rank.RoomRankXiguaEnableSetting", ScopeValue.RANK, "int", "room_rank_xigua_enable", new r((Number) 0), "tabs style of xigua's rank", "liukan.kk", "room_rank_xigua_enable", arrayList27);
        models.add(liveSettingModel27);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.rank.RoomRankXiguaEnableSetting", liveSettingModel27);
        ArrayList arrayList28 = new ArrayList();
        arrayList28.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel28 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.rank.WebcastHourRankRewardExportSetting", ScopeValue.RANK, "int", "webcast_hour_rank_reward_export", new r((Number) 0), "Rank Reward Export", "liukan.kk", "webcast_hour_rank_reward_export", arrayList28);
        models.add(liveSettingModel28);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.rank.WebcastHourRankRewardExportSetting", liveSettingModel28);
        ArrayList arrayList29 = new ArrayList();
        arrayList29.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel29 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.EnableAssetsDeleteTimeLimitSetting", ScopeValue.GIFT, "boolean", "enable_assets_delete_time_limit", new r((Boolean) true), "Whether to enable frequency control of resource deletion", "caoyanyao", "enable_assets_delete_time_limit", arrayList29);
        models.add(liveSettingModel29);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.EnableAssetsDeleteTimeLimitSetting", liveSettingModel29);
        ArrayList arrayList30 = new ArrayList();
        arrayList30.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel30 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.GiftPlayerAutoReleaseSwitchSetting", ScopeValue.GIFT, "com.bytedance.android.livesdk.model.GiftPlayerAutoReleaseSwitch", "gift_player_auto_release_switch", new r(""), "Gift player automatic release switch", "caoyanyao", "gift_player_auto_release_switch", arrayList30);
        models.add(liveSettingModel30);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.GiftPlayerAutoReleaseSwitchSetting", liveSettingModel30);
        ArrayList arrayList31 = new ArrayList();
        arrayList31.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel31 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.HideGiftIconForUserSetting", ScopeValue.GIFT, "boolean", "hide_gift_icon_for_user", new r((Boolean) false), "Hide Gift Panel", "caoyanyao", "hide_gift_icon_for_user", arrayList31);
        models.add(liveSettingModel31);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.HideGiftIconForUserSetting", liveSettingModel31);
        ArrayList arrayList32 = new ArrayList();
        arrayList32.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel32 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveAnchorGiftDisableSetting", ScopeValue.GIFT, "boolean", "live_anchor_gift_disable", new r((Boolean) true), "anchor_gift_disable", "caoyanyao", "live_anchor_gift_disable", arrayList32);
        models.add(liveSettingModel32);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveAnchorGiftDisableSetting", liveSettingModel32);
        ArrayList arrayList33 = new ArrayList();
        arrayList33.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel33 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveEnableNormalGiftAndBarrageSelfFirstlySetting", ScopeValue.GIFT, "boolean", "live_enable_normal_gift_and_barrage_self_firstly", new r((Boolean) false), "The priory of the normal gift and the barrage display", "caoyanyao", "live_enable_normal_gift_and_barrage_self_firstly", arrayList33);
        models.add(liveSettingModel33);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveEnableNormalGiftAndBarrageSelfFirstlySetting", liveSettingModel33);
        ArrayList arrayList34 = new ArrayList();
        arrayList34.add(new Group(new r((Number) 50000), "default group", true));
        LiveSettingModel liveSettingModel34 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveExchangeConfirmThreshold", ScopeValue.GIFT, "int", "live_exchange_confirm_threshold", new r((Number) 50000), "The ab test of gift send exchange threshold", "zengwei.godv", "live_exchange_confirm_threshold", arrayList34);
        models.add(liveSettingModel34);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveExchangeConfirmThreshold", liveSettingModel34);
        ArrayList arrayList35 = new ArrayList();
        arrayList35.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel35 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveExchangeEntranceSchema", ScopeValue.GIFT, "java.lang.String", "live_exchange_entrance_schema", new r(""), "the schema of live exchange entrance", "zengwei.godv", "live_exchange_entrance_schema", arrayList35);
        models.add(liveSettingModel35);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveExchangeEntranceSchema", liveSettingModel35);
        ArrayList arrayList36 = new ArrayList();
        arrayList36.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel36 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveFastGiftIconHideSetting", ScopeValue.GIFT, "boolean", "live_fast_gift_icon_hide", new r((Boolean) false), "live_fast_gift_icon_hide", "caoyanyao", "live_fast_gift_icon_hide", arrayList36);
        models.add(liveSettingModel36);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveFastGiftIconHideSetting", liveSettingModel36);
        ArrayList arrayList37 = new ArrayList();
        arrayList37.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel37 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveFirstRechargeEnableV2Setting", ScopeValue.GIFT, "boolean", "live_first_recharge_enable_v2", new r((Boolean) false), "live_first_recharge_enable_v2", "caoyanyao", "live_first_recharge_enable_v2", arrayList37);
        models.add(liveSettingModel37);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveFirstRechargeEnableV2Setting", liveSettingModel37);
        ArrayList arrayList38 = new ArrayList();
        arrayList38.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel38 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveFirstRechargeGiftIapidSetting", ScopeValue.GIFT, "java.lang.String", "live_first_recharge_gift_iapid", new r(""), "live_first_recharge_gift_iapid", "caoyanyao", "live_first_recharge_gift_iapid", arrayList38);
        models.add(liveSettingModel38);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveFirstRechargeGiftIapidSetting", liveSettingModel38);
        ArrayList arrayList39 = new ArrayList();
        arrayList39.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel39 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveFirstRechargeGiftPidSetting", ScopeValue.GIFT, "int", "live_first_recharge_gift_pid", new r((Number) 0), "live_first_recharge_gift_pid", "caoyanyao", "live_first_recharge_gift_pid", arrayList39);
        models.add(liveSettingModel39);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveFirstRechargeGiftPidSetting", liveSettingModel39);
        ArrayList arrayList40 = new ArrayList();
        arrayList40.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel40 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveFirstRechargePath", ScopeValue.GIFT, "boolean", "live_first_recharge_path", new r((Boolean) true), "live_first_recharge_path", "caoyanyao", "live_first_recharge_path", arrayList40);
        models.add(liveSettingModel40);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveFirstRechargePath", liveSettingModel40);
        ArrayList arrayList41 = new ArrayList();
        arrayList41.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel41 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveFirstRechargeStyleSetting", ScopeValue.GIFT, "boolean", "live_first_recharge_style", new r((Boolean) true), "live_first_recharge_style", "caoyanyao", "live_first_recharge_style", arrayList41);
        models.add(liveSettingModel41);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveFirstRechargeStyleSetting", liveSettingModel41);
        ArrayList arrayList42 = new ArrayList();
        arrayList42.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel42 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveFirstRechargeTitle", ScopeValue.GIFT, "boolean", "live_first_recharge_title", new r((Boolean) false), "live_first_recharge_title", "caoyanyao", "live_first_recharge_title", arrayList42);
        models.add(liveSettingModel42);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveFirstRechargeTitle", liveSettingModel42);
        ArrayList arrayList43 = new ArrayList();
        arrayList43.add(new Group(new r("sslocal://webcast_lynxview?type=popup&height=543&radius=8&gravity=bottom&web_bg_color=ffffff&url=https%3A%2F%2Flf16-gecko-source.tiktokcdn.com%2Fobj%2Fbyte-gurd-source-sg%2Ftiktok%2Ffe%2Flive%2Ftiktok_live_revenue%2Frevenue%2Fpages%2Fcharge%2Fcharge_welcome_gift.js"), "default group", true));
        LiveSettingModel liveSettingModel43 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveFirstRechargeWebUrlLynx", ScopeValue.GIFT, "java.lang.String", "live_first_recharge_web_url_lynx", new r("sslocal://webcast_lynxview?type=popup&height=543&radius=8&gravity=bottom&web_bg_color=ffffff&url=https%3A%2F%2Flf16-gecko-source.tiktokcdn.com%2Fobj%2Fbyte-gurd-source-sg%2Ftiktok%2Ffe%2Flive%2Ftiktok_live_revenue%2Frevenue%2Fpages%2Fcharge%2Fcharge_welcome_gift.js"), "live_first_recharge_web_url_lynx", "caoyanyao", "live_first_recharge_web_url_lynx", arrayList43);
        models.add(liveSettingModel43);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveFirstRechargeWebUrlLynx", liveSettingModel43);
        ArrayList arrayList44 = new ArrayList();
        arrayList44.add(new Group(new r("sslocal://webcast_lynxview?type=popup&height=543&radius=8&gravity=bottom&web_bg_color=ffffff&url=https%3A%2F%2Flf16-gecko-source.tiktokcdn.com%2Fobj%2Fbyte-gurd-source-sg%2Ftiktok%2Ffe%2Flive%2Ftiktok_live_revenue%2Frevenue%2Fpages%2Fcharge%2Fcharge_welcome_faq.js"), "default group", true));
        LiveSettingModel liveSettingModel44 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveFirstRechargeWebUrlLynxFaq", ScopeValue.GIFT, "java.lang.String", "live_first_recharge_web_url_lynx_faq", new r("sslocal://webcast_lynxview?type=popup&height=543&radius=8&gravity=bottom&web_bg_color=ffffff&url=https%3A%2F%2Flf16-gecko-source.tiktokcdn.com%2Fobj%2Fbyte-gurd-source-sg%2Ftiktok%2Ffe%2Flive%2Ftiktok_live_revenue%2Frevenue%2Fpages%2Fcharge%2Fcharge_welcome_faq.js"), "live_first_recharge_web_url_lynx_faq", "caoyanyao", "live_first_recharge_web_url_lynx_faq", arrayList44);
        models.add(liveSettingModel44);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveFirstRechargeWebUrlLynxFaq", liveSettingModel44);
        ArrayList arrayList45 = new ArrayList();
        arrayList45.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel45 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveFreeGiftSendSetting", ScopeValue.GIFT, "boolean", "live_free_gift_send", new r((Boolean) true), "live_free_gift_send", "caoyanyao", "live_free_gift_send", arrayList45);
        models.add(liveSettingModel45);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveFreeGiftSendSetting", liveSettingModel45);
        ArrayList arrayList46 = new ArrayList();
        arrayList46.add(new Group(new r(""), "default", true));
        LiveSettingModel liveSettingModel46 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveGiftAssetsStorageLimit", ScopeValue.GIFT, "com.bytedance.android.livesdk.livesetting.gift.GiftAssetsStorageConfig", "live_gift_storage_threshold", new r(""), "config available storage threshold, kb", "gaoyan", "live_gift_storage_threshold", arrayList46);
        models.add(liveSettingModel46);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveGiftAssetsStorageLimit", liveSettingModel46);
        ArrayList arrayList47 = new ArrayList();
        arrayList47.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel47 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveGiftBoostAnchorCenterSetting", ScopeValue.GIFT, "boolean", "live_boost_anchor_center_style", new r((Boolean) true), "live_boost_anchor_center_style", "caoyanyao", "live_boost_anchor_center_style", arrayList47);
        models.add(liveSettingModel47);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveGiftBoostAnchorCenterSetting", liveSettingModel47);
        ArrayList arrayList48 = new ArrayList();
        arrayList48.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel48 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveGiftBroadcastSetting", ScopeValue.GIFT, "int", "live_mt_gift_broadcast", new r((Number) 0), "live_mt_gift_broadcast", "caoyanyao", "live_mt_gift_broadcast", arrayList48);
        models.add(liveSettingModel48);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveGiftBroadcastSetting", liveSettingModel48);
        ArrayList arrayList49 = new ArrayList();
        arrayList49.add(new Group(new r((Number) 1), "default group", true));
        LiveSettingModel liveSettingModel49 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveGiftDialogUpDownSetting", ScopeValue.GIFT, "int", "live_gift_dialog_up_down", new r((Number) 1), "live_gift_dialog_up_down", "caoyanyao", "live_gift_dialog_up_down", arrayList49);
        models.add(liveSettingModel49);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveGiftDialogUpDownSetting", liveSettingModel49);
        ArrayList arrayList50 = new ArrayList();
        arrayList50.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel50 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveGiftGuideSetting", ScopeValue.GIFT, "int", "live_gift_guide", new r((Number) 0), "live_gift_guide", "caoyanyao", "live_gift_guide", arrayList50);
        models.add(liveSettingModel50);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveGiftGuideSetting", liveSettingModel50);
        ArrayList arrayList51 = new ArrayList();
        arrayList51.add(new Group(new r((Boolean) true), "default", true));
        LiveSettingModel liveSettingModel51 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveGiftIconDailyEffect", ScopeValue.GIFT, "boolean", "live_gift_icon_daily_animation_enable", new r((Boolean) true), "Is daily effect used for gift icon", "mengqingyu.21", "live_gift_icon_daily_animation_enable", arrayList51);
        models.add(liveSettingModel51);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveGiftIconDailyEffect", liveSettingModel51);
        ArrayList arrayList52 = new ArrayList();
        arrayList52.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel52 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveGiftInterfaceOptimizeSetting", ScopeValue.GIFT, "boolean", "live_gift_interface_optimize", new r((Boolean) true), "live_gift_interface_optimize", "caoyanyao", "live_gift_interface_optimize", arrayList52);
        models.add(liveSettingModel52);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveGiftInterfaceOptimizeSetting", liveSettingModel52);
        ArrayList arrayList53 = new ArrayList();
        arrayList53.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel53 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveGiftPerformanceSettings", ScopeValue.GIFT, "com.bytedance.android.livesdk.livesetting.gift.LiveGiftPerformanceConfig", "live_gift_performance_settings", new r(""), "live_gift_performance_settings", "caoyanyao", "live_gift_performance_settings", arrayList53);
        models.add(liveSettingModel53);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveGiftPerformanceSettings", liveSettingModel53);
        ArrayList arrayList54 = new ArrayList();
        arrayList54.add(new Group(new r((Number) 4), "default group", true));
        LiveSettingModel liveSettingModel54 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveGiftPlayerUserTypeNewSetting", ScopeValue.GIFT, "int", "live_gift_player_user_type_new", new r((Number) 4), "Video Gift Player Downgrade", "caoyanyao", "live_gift_player_user_type_new", arrayList54);
        models.add(liveSettingModel54);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveGiftPlayerUserTypeNewSetting", liveSettingModel54);
        ArrayList arrayList55 = new ArrayList();
        arrayList55.add(new Group(new r((Number) 0L), "default group", true));
        LiveSettingModel liveSettingModel55 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveGiftResourceCacheSetting", ScopeValue.GIFT, "long", "live_gift_resource_download_cache_duration", new r((Number) 0L), "live_gift_resource_download_cache_duration", "mengqingyu.21", "live_gift_resource_download_cache_duration", arrayList55);
        models.add(liveSettingModel55);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveGiftResourceCacheSetting", liveSettingModel55);
        ArrayList arrayList56 = new ArrayList();
        arrayList56.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel56 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveGiftResourceDownloadSetting", ScopeValue.GIFT, "int", "gift_resources_download_current_room", new r((Number) 0), "Whether to download only the gift resources supported by this studio", "cuijinrui", "gift_resources_download_current_room", arrayList56);
        models.add(liveSettingModel56);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveGiftResourceDownloadSetting", liveSettingModel56);
        ArrayList arrayList57 = new ArrayList();
        arrayList57.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel57 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveGiftSelfTrayDisplayStrategySetting", ScopeValue.GIFT, "int", "live_gift_self_tray_display_strategy", new r((Number) 0), "live_gift_self_tray_display_strategy", "caoyanyao", "live_gift_self_tray_display_strategy", arrayList57);
        models.add(liveSettingModel57);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveGiftSelfTrayDisplayStrategySetting", liveSettingModel57);
        ArrayList arrayList58 = new ArrayList();
        arrayList58.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel58 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveGiftTTplayerUseHardcoreSetting", ScopeValue.GIFT, "int", "live_gift_ttplayer_use_hardcore", new r((Number) 0), "Gift TTPlayer hard decoded", "caoyanyao", "live_gift_ttplayer_use_hardcore", arrayList58);
        models.add(liveSettingModel58);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveGiftTTplayerUseHardcoreSetting", liveSettingModel58);
        ArrayList arrayList59 = new ArrayList();
        arrayList59.add(new Group(new r((Number) 0), "default group", true));
        LiveSettingModel liveSettingModel59 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveGiftTrayExpSetting", ScopeValue.GIFT, "int", "live_gift_others_tray_display_strategy", new r((Number) 0), "live_gift_others_tray_display_strategy", "caoyanyao", "live_gift_others_tray_display_strategy", arrayList59);
        models.add(liveSettingModel59);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveGiftTrayExpSetting", liveSettingModel59);
        ArrayList arrayList60 = new ArrayList();
        arrayList60.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel60 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveGiftTrayPriceColorSetting", ScopeValue.GIFT, "java.util.Map<java.lang.String,java.util.List<java.lang.String>>", "live_gift_tray_price_color", new r(""), "live_gift_tray_price_color", "caoyanyao", "live_gift_tray_price_color", arrayList60);
        models.add(liveSettingModel60);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveGiftTrayPriceColorSetting", liveSettingModel60);
        ArrayList arrayList61 = new ArrayList();
        arrayList61.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel61 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveGuestLiveAudioCaptureSetting", ScopeValue.GIFT, "boolean", "live_guest_live_audio_capture", new r((Boolean) true), "live_guest_live_audio_capture", "caoyanyao", "live_guest_live_audio_capture", arrayList61);
        models.add(liveSettingModel61);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveGuestLiveAudioCaptureSetting", liveSettingModel61);
        ArrayList arrayList62 = new ArrayList();
        arrayList62.add(new Group(new r((Number) 10), "default group", true));
        LiveSettingModel liveSettingModel62 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveGuideBubbleDurationSetting", ScopeValue.GIFT, "int", "live_guide_bubble_duration", new r((Number) 10), "live_guide_bubble_duration", "caoyanyao", "live_guide_bubble_duration", arrayList62);
        models.add(liveSettingModel62);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveGuideBubbleDurationSetting", liveSettingModel62);
        ArrayList arrayList63 = new ArrayList();
        arrayList63.add(new Group(new r((Number) 10), "default group", true));
        LiveSettingModel liveSettingModel63 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveGuideDialogDurationSetting", ScopeValue.GIFT, "int", "live_guide_dialog_duration", new r((Number) 10), "live_guide_dialog_duration", "caoyanyao", "live_guide_dialog_duration", arrayList63);
        models.add(liveSettingModel63);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveGuideDialogDurationSetting", liveSettingModel63);
        ArrayList arrayList64 = new ArrayList();
        arrayList64.add(new Group(new r((Number) 30), "default group", true));
        LiveSettingModel liveSettingModel64 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveGuideWattingDurationSetting", ScopeValue.GIFT, "int", "live_guide_watting_duration", new r((Number) 30), "live_guide_watting_duration", "caoyanyao", "live_guide_watting_duration", arrayList64);
        models.add(liveSettingModel64);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveGuideWattingDurationSetting", liveSettingModel64);
        ArrayList arrayList65 = new ArrayList();
        arrayList65.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel65 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveNewAssetsCachePathSetting", ScopeValue.GIFT, "boolean", "live_new_assets_cache_path", new r((Boolean) true), "live_new_assets_cache_path", "caoyanyao", "live_new_assets_cache_path", arrayList65);
        models.add(liveSettingModel65);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveNewAssetsCachePathSetting", liveSettingModel65);
        ArrayList arrayList66 = new ArrayList();
        arrayList66.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel66 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LivePrefetchGiftImageSetting", ScopeValue.GIFT, "boolean", "live_prefetch_gift_image", new r((Boolean) false), "live_prefetch_gift_image", "caoyanyao", "live_prefetch_gift_image", arrayList66);
        models.add(liveSettingModel66);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LivePrefetchGiftImageSetting", liveSettingModel66);
        ArrayList arrayList67 = new ArrayList();
        arrayList67.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel67 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveSendGiftEnterFromParamSetting", ScopeValue.GIFT, "boolean", "live_send_gift_enter_from_param", new r((Boolean) true), "live_send_gift_enter_from_param", "caoyanyao", "live_send_gift_enter_from_param", arrayList67);
        models.add(liveSettingModel67);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveSendGiftEnterFromParamSetting", liveSettingModel67);
        ArrayList arrayList68 = new ArrayList();
        arrayList68.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel68 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveVideoGiftCoverPanelSetting", ScopeValue.GIFT, "boolean", "live_video_gift_cover_panel", new r((Boolean) true), "live_video_gift_cover_panel", "caoyanyao", "live_video_gift_cover_panel", arrayList68);
        models.add(liveSettingModel68);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveVideoGiftCoverPanelSetting", liveSettingModel68);
        ArrayList arrayList69 = new ArrayList();
        arrayList69.add(new Group(new r("sslocal://webcast_lynxview_popup?url=https%3A%2F%2Flf16-gecko-source.tiktokcdn.com%2Fobj%2Fbyte-gurd-source-sg%2Ftiktok%2Ffe%2Flive%2Ftiktok_live_revenue_wish_list%2Fpages%2Fhost_show.js&container_bg_color=252525&height=968rpx&radius=8&disable_mask_click_close=1&hide_loading=1"), "default group", true));
        LiveSettingModel liveSettingModel69 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveWishlistAnchorpanelUrlSetting", ScopeValue.GIFT, "java.lang.String", "live_wishlist_anchorpanel_url", new r("sslocal://webcast_lynxview_popup?url=https%3A%2F%2Flf16-gecko-source.tiktokcdn.com%2Fobj%2Fbyte-gurd-source-sg%2Ftiktok%2Ffe%2Flive%2Ftiktok_live_revenue_wish_list%2Fpages%2Fhost_show.js&container_bg_color=252525&height=968rpx&radius=8&disable_mask_click_close=1&hide_loading=1"), "live_wishlist_anchorpanel_url", "yangxu.616", "live_wishlist_anchorpanel_url", arrayList69);
        models.add(liveSettingModel69);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveWishlistAnchorpanelUrlSetting", liveSettingModel69);
        ArrayList arrayList70 = new ArrayList();
        arrayList70.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel70 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.LiveWishlistPermissionSetting", ScopeValue.GIFT, "com.bytedance.android.livesdk.gift.model.LiveWishListPermission", "live_wishlist_permission", new r(""), "live_wishlist_permission", "yangxu.616", "live_wishlist_permission", arrayList70);
        models.add(liveSettingModel70);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.LiveWishlistPermissionSetting", liveSettingModel70);
        ArrayList arrayList71 = new ArrayList();
        arrayList71.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel71 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.SuppressGiftTextMessagesSetting", ScopeValue.GIFT, "boolean", "suppress_gift_text_messages", new r((Boolean) false), "Whether to not display the gift message in the comment area is determined according to the Room field when it is turned on, and will always be displayed when it is turned off", "caoyanyao", "suppress_gift_text_messages", arrayList71);
        models.add(liveSettingModel71);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.SuppressGiftTextMessagesSetting", liveSettingModel71);
        ArrayList arrayList72 = new ArrayList();
        arrayList72.add(new Group(new r((Boolean) false), "default group", true));
        LiveSettingModel liveSettingModel72 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.TTliveStartGiftConfigSetting", ScopeValue.GIFT, "boolean", "ttlive_start_gift_config", new r((Boolean) false), "Broadcast Page Gift Can Config", "caoyanyao", "ttlive_start_gift_config", arrayList72);
        models.add(liveSettingModel72);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.TTliveStartGiftConfigSetting", liveSettingModel72);
        ArrayList arrayList73 = new ArrayList();
        arrayList73.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel73 = new LiveSettingModel("com.bytedance.android.livesdk.livesetting.gift.TTliveStartGiftLocalDefaultSetting", ScopeValue.GIFT, "boolean", "ttlive_start_gift_local_default", new r((Boolean) true), "Broadcast Page Gift Local or Default", "caoyanyao", "ttlive_start_gift_local_default", arrayList73);
        models.add(liveSettingModel73);
        modelMaps.put("com.bytedance.android.livesdk.livesetting.gift.TTliveStartGiftLocalDefaultSetting", liveSettingModel73);
        ArrayList arrayList74 = new ArrayList();
        arrayList74.add(new Group(new r((Boolean) true), "default group", true));
        LiveSettingModel liveSettingModel74 = new LiveSettingModel("com.bytedance.android.livesdk.feed.DrawerCoverSetting", ScopeValue.FEED, "boolean", "drawer_cover", new r((Boolean) true), "drawer cover setting", "zengwei.godv", "drawer_cover", arrayList74);
        models.add(liveSettingModel74);
        modelMaps.put("com.bytedance.android.livesdk.feed.DrawerCoverSetting", liveSettingModel74);
        ArrayList arrayList75 = new ArrayList();
        arrayList75.add(new Group(new r(""), "default group", true));
        LiveSettingModel liveSettingModel75 = new LiveSettingModel("com.bytedance.android.livesdk.feed.LiveDrawerSettings", ScopeValue.FEED, "com.bytedance.android.livesdk.feed.LiveDrawerConfig", "live_drawer", new r(""), "live drawer setting", "zengwei.godv", "live_drawer", arrayList75);
        models.add(liveSettingModel75);
        modelMaps.put("com.bytedance.android.livesdk.feed.LiveDrawerSettings", liveSettingModel75);
    }

    static {
        Covode.recordClassIndex(13914);
    }

    public static ArrayList<LiveSettingModel> getLiveSettingModels() {
        if (models.size() > 0) {
            return models;
        }
        findSettingsMethod_0();
        findSettingsMethod_1();
        findSettingsMethod_2();
        findSettingsMethod_3();
        findSettingsMethod_4();
        findSettingsMethod_5();
        return models;
    }
}
